Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Unused terminals:

    COOR

Grammar

Rule 0     S' -> programa
Rule 1     programa -> vars funcion INICIO funcAgregarInicio bloque FIN liberarVar
Rule 2     programa -> vars funcion INICIO FIN
Rule 3     funcAgregarInicio -> <empty>
Rule 4     bloque -> { vars guardarCuadruplo estatuto }
Rule 5     bloque -> { vars guardarCuadruplo }
Rule 6     bloque -> { }
Rule 7     vars -> tipo ID guardarIDs ; masTipos
Rule 8     vars -> tipo ID guardarIDs arreglo ; masTipos
Rule 9     vars -> tipo listaIDS ; masTipos
Rule 10    vars -> empty
Rule 11    masTipos -> vars
Rule 12    masTipos -> empty
Rule 13    listaIDS -> ID guardarIDs masIDS
Rule 14    masIDS -> , ID guardarIDs
Rule 15    masIDS -> empty
Rule 16    arreglo -> [ CTI ] matriz
Rule 17    matriz -> [ CTI ]
Rule 18    matriz -> empty
Rule 19    funcion -> FUNC tipo ID funcAgregar restoFuncion funcion2
Rule 20    funcion -> empty
Rule 21    funcion2 -> funcion
Rule 22    funcion2 -> empty
Rule 23    restoFuncion -> ( param ) bloquefunc
Rule 24    funcAgregar -> <empty>
Rule 25    param -> tipo ID guardarIDParam maspaID
Rule 26    param -> empty
Rule 27    guardarIDParam -> <empty>
Rule 28    guardarIDs -> <empty>
Rule 29    maspaID -> , param
Rule 30    maspaID -> empty
Rule 31    bloquefunc -> { vars guardarCuadruplo estatuto regresa } liberarVar
Rule 32    bloquefunc -> { vars guardarCuadruplo regresa } liberarVar
Rule 33    bloquefunc -> { guardarCuadruplo escritura regresa } liberarVar
Rule 34    bloquefunc -> { }
Rule 35    liberarVar -> <empty>
Rule 36    guardarCuadruplo -> <empty>
Rule 37    regresa -> RETURN ID
Rule 38    estatuto -> asignacion estatutoAux
Rule 39    estatuto -> escritura estatutoAux
Rule 40    estatuto -> condicion estatutoAux
Rule 41    estatuto -> lectura estatutoAux
Rule 42    estatuto -> whiles estatutoAux
Rule 43    estatuto -> funcs estatutoAux
Rule 44    estatutoAux -> estatuto
Rule 45    estatutoAux -> empty
Rule 46    checaNumParam -> )
Rule 47    generaGOSUB -> <empty>
Rule 48    funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
Rule 49    funcs -> ID
Rule 50    guardarIDFunc -> <empty>
Rule 51    verProc -> <empty>
Rule 52    generarERA -> (
Rule 53    auxExp -> listaExp llegaComa
Rule 54    auxExp -> listaExp
Rule 55    llegaComa -> ,
Rule 56    verificarTiposFunc -> <empty>
Rule 57    listaExp -> exp verificarTiposFunc masExps
Rule 58    masExps -> llegaComa listaExp
Rule 59    masExps -> <empty>
Rule 60    asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
Rule 61    asignacion -> ID ;
Rule 62    guardarIDPila -> <empty>
Rule 63    checarOperadorIgual -> <empty>
Rule 64    opcionAsignacion -> [ CTI ]
Rule 65    opcionAsignacion -> [ CTI ] [ CTI ]
Rule 66    opcionAsignacion -> empty
Rule 67    valorAsig -> = exp
Rule 68    valorAsig -> = funcs
Rule 69    valorAsig -> empty
Rule 70    guardarToken -> <empty>
Rule 71    checarLectura -> <empty>
Rule 72    lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
Rule 73    opcionesLectura -> [ CTI ]
Rule 74    opcionesLectura -> [ CTI ] [ CTI ]
Rule 75    opcionesLectura -> empty
Rule 76    guardarParametros -> ID guardarIDPila pos color checarDibujar
Rule 77    checarDibujar -> <empty>
Rule 78    escritura -> DIBUJAR guardarToken ( guardarParametros ) ;
Rule 79    escritura -> mueve
Rule 80    color -> AMARILLO
Rule 81    color -> VERDE
Rule 82    color -> ROJO
Rule 83    color -> AZUL
Rule 84    condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos
Rule 85    condicion -> IF ( expresion ) checarIF bloqueCond checarElse finPilaSaltos
Rule 86    bloqueCond -> { estatuto regresaCond }
Rule 87    bloqueCond -> { regresaCond }
Rule 88    bloqueCond -> { }
Rule 89    regresaCond -> RETURN ID
Rule 90    regresaCond -> empty
Rule 91    checarIF -> <empty>
Rule 92    checarElse -> ELSE bloqueCond
Rule 93    finPilaSaltos -> <empty>
Rule 94    expresion -> exp operacionLogica checaoperador6
Rule 95    expresion -> exp
Rule 96    push_logica -> >
Rule 97    push_logica -> <
Rule 98    push_logica -> MENORIGUAL
Rule 99    push_logica -> MAYORIGUAL
Rule 100   push_logica -> IGUALIGUAL
Rule 101   push_logica -> DIFERENTE
Rule 102   push_logica -> |
Rule 103   push_logica -> COAND
Rule 104   operacionLogica -> push_logica exp
Rule 105   operacionLogica -> <empty>
Rule 106   checaoperador6 -> <empty>
Rule 107   exp -> termino checaroperador4
Rule 108   fondoFalso -> (
Rule 109   finFondoFalso -> )
Rule 110   checaroperador4 -> signo
Rule 111   checaroperador4 -> <empty>
Rule 112   signo -> push_pm exp
Rule 113   signo -> <empty>
Rule 114   push_pm -> +
Rule 115   push_pm -> -
Rule 116   termino -> factor checaroperador5
Rule 117   checaroperador5 -> masop
Rule 118   checaroperador5 -> <empty>
Rule 119   masop -> push_td termino
Rule 120   masop -> <empty>
Rule 121   push_td -> *
Rule 122   push_td -> /
Rule 123   factor -> fondoFalso expresion finFondoFalso
Rule 124   factor -> varcte
Rule 125   pos -> ( varcte , varcte )
Rule 126   whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
Rule 127   checarWhile -> <empty>
Rule 128   checarContenido -> <empty>
Rule 129   finPilaSaltosWhile -> <empty>
Rule 130   varcte -> recibe_ID
Rule 131   varcte -> recibe_CTF
Rule 132   varcte -> recibe_CTI
Rule 133   varcte -> recibe_TRUE
Rule 134   varcte -> recibe_FALSE
Rule 135   recibe_ID -> ID
Rule 136   recibe_CTF -> CTF
Rule 137   recibe_CTI -> CTI
Rule 138   recibe_TRUE -> TRUE
Rule 139   recibe_FALSE -> FALSE
Rule 140   tipo -> ENTERO
Rule 141   tipo -> DECIMAL
Rule 142   tipo -> BOOL
Rule 143   tipo -> VOID
Rule 144   tipo -> CUADRADO
Rule 145   tipo -> RECTANGULO
Rule 146   tipo -> CIRCULO
Rule 147   tipo -> LINEA
Rule 148   tipo -> ESTRELLA
Rule 149   mueve -> MUEVE guardarToken opcionMue
Rule 150   opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ;
Rule 151   direccion -> IZQUIERDA
Rule 152   direccion -> DERECHA
Rule 153   direccion -> ARRIBA
Rule 154   direccion -> ABAJO
Rule 155   checarMover -> <empty>
Rule 156   empty -> <empty>

Terminals, with rules where they appear

(                    : 23 52 78 84 85 108 125 126
)                    : 23 46 78 84 85 109 125 126
*                    : 121
+                    : 114
,                    : 14 29 55 125
-                    : 115
/                    : 122
;                    : 7 8 9 60 61 72 78 150
<                    : 97
=                    : 67 68
>                    : 96
ABAJO                : 154
AMARILLO             : 80
ARRIBA               : 153
AZUL                 : 83
BOOL                 : 142
CIRCULO              : 146
COAND                : 103
COOR                 : 
CTF                  : 136
CTI                  : 16 17 64 65 65 73 74 74 137
CUADRADO             : 144
DECIMAL              : 141
DERECHA              : 152
DIBUJAR              : 78
DIFERENTE            : 101
ELSE                 : 92
ENTERO               : 140
ESTRELLA             : 148
FALSE                : 139
FIN                  : 1 2
FUNC                 : 19
ID                   : 7 8 13 14 19 25 37 48 49 60 61 72 76 89 135 150
IF                   : 84 85
IGUALIGUAL           : 100
INICIO               : 1 2
IZQUIERDA            : 151
LEER                 : 72
LINEA                : 147
MAYORIGUAL           : 99
MENORIGUAL           : 98
MUEVE                : 149
RECTANGULO           : 145
RETURN               : 37 89
ROJO                 : 82
TRUE                 : 138
VERDE                : 81
VOID                 : 143
WHILE                : 126
[                    : 16 17 64 65 65 73 74 74
]                    : 16 17 64 65 65 73 74 74
error                : 
{                    : 4 5 6 31 32 33 34 86 87 88
|                    : 102
}                    : 4 5 6 31 32 33 34 86 87 88

Nonterminals, with rules where they appear

arreglo              : 8
asignacion           : 38
auxExp               : 48
bloque               : 1
bloqueCond           : 84 85 92 126
bloquefunc           : 23
checaNumParam        : 48
checaoperador6       : 94
checarContenido      : 126
checarDibujar        : 76
checarElse           : 85
checarIF             : 84 85
checarLectura        : 72
checarMover          : 150
checarOperadorIgual  : 60
checarWhile          : 126
checaroperador4      : 107
checaroperador5      : 116
color                : 76
condicion            : 40
direccion            : 150
empty                : 10 12 15 18 20 22 26 30 45 66 69 75 90
escritura            : 33 39
estatuto             : 4 31 44 86
estatutoAux          : 38 39 40 41 42 43
exp                  : 57 67 94 95 104 112
expresion            : 84 85 123 126
factor               : 116
finFondoFalso        : 123
finPilaSaltos        : 84 85
finPilaSaltosWhile   : 126
fondoFalso           : 123
funcAgregar          : 19
funcAgregarInicio    : 1
funcion              : 1 2 21
funcion2             : 19
funcs                : 43 68
generaGOSUB          : 48
generarERA           : 48
guardarCuadruplo     : 4 5 31 32 33
guardarIDFunc        : 48
guardarIDParam       : 25
guardarIDPila        : 60 72 76 150
guardarIDs           : 7 8 13 14
guardarParametros    : 78
guardarToken         : 72 78 149
lectura              : 41
liberarVar           : 1 31 32 33
listaExp             : 53 54 58
listaIDS             : 9
llegaComa            : 53 58
masExps              : 57
masIDS               : 13
masTipos             : 7 8 9
masop                : 117
maspaID              : 25
matriz               : 16
mueve                : 79
opcionAsignacion     : 60
opcionMue            : 149
opcionesLectura      : 72
operacionLogica      : 94
param                : 23 29
pos                  : 76
programa             : 0
push_logica          : 104
push_pm              : 112
push_td              : 119
recibe_CTF           : 131
recibe_CTI           : 132 150
recibe_FALSE         : 134
recibe_ID            : 130
recibe_TRUE          : 133
regresa              : 31 32 33
regresaCond          : 86 87
restoFuncion         : 19
signo                : 110
termino              : 107 119
tipo                 : 7 8 9 19 25
valorAsig            : 60
varcte               : 124 125 125
vars                 : 1 2 4 5 11 31 32
verProc              : 48
verificarTiposFunc   : 57
whiles               : 42

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . vars funcion INICIO funcAgregarInicio bloque FIN liberarVar
    (2) programa -> . vars funcion INICIO FIN
    (7) vars -> . tipo ID guardarIDs ; masTipos
    (8) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (9) vars -> . tipo listaIDS ; masTipos
    (10) vars -> . empty
    (140) tipo -> . ENTERO
    (141) tipo -> . DECIMAL
    (142) tipo -> . BOOL
    (143) tipo -> . VOID
    (144) tipo -> . CUADRADO
    (145) tipo -> . RECTANGULO
    (146) tipo -> . CIRCULO
    (147) tipo -> . LINEA
    (148) tipo -> . ESTRELLA
    (156) empty -> .

    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8
    FUNC            reduce using rule 156 (empty -> .)
    INICIO          reduce using rule 156 (empty -> .)

    tipo                           shift and go to state 4
    vars                           shift and go to state 1
    empty                          shift and go to state 5
    programa                       shift and go to state 11

state 1

    (1) programa -> vars . funcion INICIO funcAgregarInicio bloque FIN liberarVar
    (2) programa -> vars . funcion INICIO FIN
    (19) funcion -> . FUNC tipo ID funcAgregar restoFuncion funcion2
    (20) funcion -> . empty
    (156) empty -> .

    FUNC            shift and go to state 15
    INICIO          reduce using rule 156 (empty -> .)

    empty                          shift and go to state 14
    funcion                        shift and go to state 16

state 2

    (143) tipo -> VOID .

    ID              reduce using rule 143 (tipo -> VOID .)


state 3

    (147) tipo -> LINEA .

    ID              reduce using rule 147 (tipo -> LINEA .)


state 4

    (7) vars -> tipo . ID guardarIDs ; masTipos
    (8) vars -> tipo . ID guardarIDs arreglo ; masTipos
    (9) vars -> tipo . listaIDS ; masTipos
    (13) listaIDS -> . ID guardarIDs masIDS

    ID              shift and go to state 18

    listaIDS                       shift and go to state 17

state 5

    (10) vars -> empty .

    RETURN          reduce using rule 10 (vars -> empty .)
    ID              reduce using rule 10 (vars -> empty .)
    DIBUJAR         reduce using rule 10 (vars -> empty .)
    IF              reduce using rule 10 (vars -> empty .)
    LEER            reduce using rule 10 (vars -> empty .)
    WHILE           reduce using rule 10 (vars -> empty .)
    MUEVE           reduce using rule 10 (vars -> empty .)
    FUNC            reduce using rule 10 (vars -> empty .)
    INICIO          reduce using rule 10 (vars -> empty .)
    }               reduce using rule 10 (vars -> empty .)


state 6

    (140) tipo -> ENTERO .

    ID              reduce using rule 140 (tipo -> ENTERO .)


state 7

    (141) tipo -> DECIMAL .

    ID              reduce using rule 141 (tipo -> DECIMAL .)


state 8

    (148) tipo -> ESTRELLA .

    ID              reduce using rule 148 (tipo -> ESTRELLA .)


state 9

    (144) tipo -> CUADRADO .

    ID              reduce using rule 144 (tipo -> CUADRADO .)


state 10

    (142) tipo -> BOOL .

    ID              reduce using rule 142 (tipo -> BOOL .)


state 11

    (0) S' -> programa .



state 12

    (145) tipo -> RECTANGULO .

    ID              reduce using rule 145 (tipo -> RECTANGULO .)


state 13

    (146) tipo -> CIRCULO .

    ID              reduce using rule 146 (tipo -> CIRCULO .)


state 14

    (20) funcion -> empty .

    INICIO          reduce using rule 20 (funcion -> empty .)


state 15

    (19) funcion -> FUNC . tipo ID funcAgregar restoFuncion funcion2
    (140) tipo -> . ENTERO
    (141) tipo -> . DECIMAL
    (142) tipo -> . BOOL
    (143) tipo -> . VOID
    (144) tipo -> . CUADRADO
    (145) tipo -> . RECTANGULO
    (146) tipo -> . CIRCULO
    (147) tipo -> . LINEA
    (148) tipo -> . ESTRELLA

    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8

    tipo                           shift and go to state 19

state 16

    (1) programa -> vars funcion . INICIO funcAgregarInicio bloque FIN liberarVar
    (2) programa -> vars funcion . INICIO FIN

    INICIO          shift and go to state 20


state 17

    (9) vars -> tipo listaIDS . ; masTipos

    ;               shift and go to state 21


state 18

    (7) vars -> tipo ID . guardarIDs ; masTipos
    (8) vars -> tipo ID . guardarIDs arreglo ; masTipos
    (13) listaIDS -> ID . guardarIDs masIDS
    (28) guardarIDs -> .

    ;               reduce using rule 28 (guardarIDs -> .)
    [               reduce using rule 28 (guardarIDs -> .)
    ,               reduce using rule 28 (guardarIDs -> .)

    guardarIDs                     shift and go to state 22

state 19

    (19) funcion -> FUNC tipo . ID funcAgregar restoFuncion funcion2

    ID              shift and go to state 23


state 20

    (1) programa -> vars funcion INICIO . funcAgregarInicio bloque FIN liberarVar
    (2) programa -> vars funcion INICIO . FIN
    (3) funcAgregarInicio -> .

    FIN             shift and go to state 25
    {               reduce using rule 3 (funcAgregarInicio -> .)

    funcAgregarInicio              shift and go to state 24

state 21

    (9) vars -> tipo listaIDS ; . masTipos
    (11) masTipos -> . vars
    (12) masTipos -> . empty
    (7) vars -> . tipo ID guardarIDs ; masTipos
    (8) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (9) vars -> . tipo listaIDS ; masTipos
    (10) vars -> . empty
    (156) empty -> .
    (140) tipo -> . ENTERO
    (141) tipo -> . DECIMAL
    (142) tipo -> . BOOL
    (143) tipo -> . VOID
    (144) tipo -> . CUADRADO
    (145) tipo -> . RECTANGULO
    (146) tipo -> . CIRCULO
    (147) tipo -> . LINEA
    (148) tipo -> . ESTRELLA

    FUNC            reduce using rule 156 (empty -> .)
    INICIO          reduce using rule 156 (empty -> .)
    }               reduce using rule 156 (empty -> .)
    ID              reduce using rule 156 (empty -> .)
    DIBUJAR         reduce using rule 156 (empty -> .)
    IF              reduce using rule 156 (empty -> .)
    LEER            reduce using rule 156 (empty -> .)
    WHILE           reduce using rule 156 (empty -> .)
    MUEVE           reduce using rule 156 (empty -> .)
    RETURN          reduce using rule 156 (empty -> .)
    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8

    masTipos                       shift and go to state 26
    tipo                           shift and go to state 4
    vars                           shift and go to state 27
    empty                          shift and go to state 28

state 22

    (7) vars -> tipo ID guardarIDs . ; masTipos
    (8) vars -> tipo ID guardarIDs . arreglo ; masTipos
    (13) listaIDS -> ID guardarIDs . masIDS
    (16) arreglo -> . [ CTI ] matriz
    (14) masIDS -> . , ID guardarIDs
    (15) masIDS -> . empty
    (156) empty -> .

  ! shift/reduce conflict for ; resolved as shift
    ;               shift and go to state 32
    [               shift and go to state 31
    ,               shift and go to state 29

  ! ;               [ reduce using rule 156 (empty -> .) ]

    arreglo                        shift and go to state 30
    masIDS                         shift and go to state 33
    empty                          shift and go to state 34

state 23

    (19) funcion -> FUNC tipo ID . funcAgregar restoFuncion funcion2
    (24) funcAgregar -> .

    (               reduce using rule 24 (funcAgregar -> .)

    funcAgregar                    shift and go to state 35

state 24

    (1) programa -> vars funcion INICIO funcAgregarInicio . bloque FIN liberarVar
    (4) bloque -> . { vars guardarCuadruplo estatuto }
    (5) bloque -> . { vars guardarCuadruplo }
    (6) bloque -> . { }

    {               shift and go to state 37

    bloque                         shift and go to state 36

state 25

    (2) programa -> vars funcion INICIO FIN .

    $end            reduce using rule 2 (programa -> vars funcion INICIO FIN .)


state 26

    (9) vars -> tipo listaIDS ; masTipos .

    FUNC            reduce using rule 9 (vars -> tipo listaIDS ; masTipos .)
    INICIO          reduce using rule 9 (vars -> tipo listaIDS ; masTipos .)
    }               reduce using rule 9 (vars -> tipo listaIDS ; masTipos .)
    ID              reduce using rule 9 (vars -> tipo listaIDS ; masTipos .)
    DIBUJAR         reduce using rule 9 (vars -> tipo listaIDS ; masTipos .)
    IF              reduce using rule 9 (vars -> tipo listaIDS ; masTipos .)
    LEER            reduce using rule 9 (vars -> tipo listaIDS ; masTipos .)
    WHILE           reduce using rule 9 (vars -> tipo listaIDS ; masTipos .)
    MUEVE           reduce using rule 9 (vars -> tipo listaIDS ; masTipos .)
    RETURN          reduce using rule 9 (vars -> tipo listaIDS ; masTipos .)


state 27

    (11) masTipos -> vars .

    FUNC            reduce using rule 11 (masTipos -> vars .)
    INICIO          reduce using rule 11 (masTipos -> vars .)
    }               reduce using rule 11 (masTipos -> vars .)
    ID              reduce using rule 11 (masTipos -> vars .)
    DIBUJAR         reduce using rule 11 (masTipos -> vars .)
    IF              reduce using rule 11 (masTipos -> vars .)
    LEER            reduce using rule 11 (masTipos -> vars .)
    WHILE           reduce using rule 11 (masTipos -> vars .)
    MUEVE           reduce using rule 11 (masTipos -> vars .)
    RETURN          reduce using rule 11 (masTipos -> vars .)


state 28

    (12) masTipos -> empty .
    (10) vars -> empty .

  ! reduce/reduce conflict for FUNC resolved using rule 10 (vars -> empty .)
  ! reduce/reduce conflict for INICIO resolved using rule 10 (vars -> empty .)
  ! reduce/reduce conflict for } resolved using rule 10 (vars -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 10 (vars -> empty .)
  ! reduce/reduce conflict for DIBUJAR resolved using rule 10 (vars -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 10 (vars -> empty .)
  ! reduce/reduce conflict for LEER resolved using rule 10 (vars -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 10 (vars -> empty .)
  ! reduce/reduce conflict for MUEVE resolved using rule 10 (vars -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 10 (vars -> empty .)
    FUNC            reduce using rule 10 (vars -> empty .)
    INICIO          reduce using rule 10 (vars -> empty .)
    }               reduce using rule 10 (vars -> empty .)
    ID              reduce using rule 10 (vars -> empty .)
    DIBUJAR         reduce using rule 10 (vars -> empty .)
    IF              reduce using rule 10 (vars -> empty .)
    LEER            reduce using rule 10 (vars -> empty .)
    WHILE           reduce using rule 10 (vars -> empty .)
    MUEVE           reduce using rule 10 (vars -> empty .)
    RETURN          reduce using rule 10 (vars -> empty .)

  ! FUNC            [ reduce using rule 12 (masTipos -> empty .) ]
  ! INICIO          [ reduce using rule 12 (masTipos -> empty .) ]
  ! }               [ reduce using rule 12 (masTipos -> empty .) ]
  ! ID              [ reduce using rule 12 (masTipos -> empty .) ]
  ! DIBUJAR         [ reduce using rule 12 (masTipos -> empty .) ]
  ! IF              [ reduce using rule 12 (masTipos -> empty .) ]
  ! LEER            [ reduce using rule 12 (masTipos -> empty .) ]
  ! WHILE           [ reduce using rule 12 (masTipos -> empty .) ]
  ! MUEVE           [ reduce using rule 12 (masTipos -> empty .) ]
  ! RETURN          [ reduce using rule 12 (masTipos -> empty .) ]


state 29

    (14) masIDS -> , . ID guardarIDs

    ID              shift and go to state 38


state 30

    (8) vars -> tipo ID guardarIDs arreglo . ; masTipos

    ;               shift and go to state 39


state 31

    (16) arreglo -> [ . CTI ] matriz

    CTI             shift and go to state 40


state 32

    (7) vars -> tipo ID guardarIDs ; . masTipos
    (11) masTipos -> . vars
    (12) masTipos -> . empty
    (7) vars -> . tipo ID guardarIDs ; masTipos
    (8) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (9) vars -> . tipo listaIDS ; masTipos
    (10) vars -> . empty
    (156) empty -> .
    (140) tipo -> . ENTERO
    (141) tipo -> . DECIMAL
    (142) tipo -> . BOOL
    (143) tipo -> . VOID
    (144) tipo -> . CUADRADO
    (145) tipo -> . RECTANGULO
    (146) tipo -> . CIRCULO
    (147) tipo -> . LINEA
    (148) tipo -> . ESTRELLA

    FUNC            reduce using rule 156 (empty -> .)
    INICIO          reduce using rule 156 (empty -> .)
    }               reduce using rule 156 (empty -> .)
    ID              reduce using rule 156 (empty -> .)
    DIBUJAR         reduce using rule 156 (empty -> .)
    IF              reduce using rule 156 (empty -> .)
    LEER            reduce using rule 156 (empty -> .)
    WHILE           reduce using rule 156 (empty -> .)
    MUEVE           reduce using rule 156 (empty -> .)
    RETURN          reduce using rule 156 (empty -> .)
    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8

    masTipos                       shift and go to state 41
    tipo                           shift and go to state 4
    vars                           shift and go to state 27
    empty                          shift and go to state 28

state 33

    (13) listaIDS -> ID guardarIDs masIDS .

    ;               reduce using rule 13 (listaIDS -> ID guardarIDs masIDS .)


state 34

    (15) masIDS -> empty .

    ;               reduce using rule 15 (masIDS -> empty .)


state 35

    (19) funcion -> FUNC tipo ID funcAgregar . restoFuncion funcion2
    (23) restoFuncion -> . ( param ) bloquefunc

    (               shift and go to state 42

    restoFuncion                   shift and go to state 43

state 36

    (1) programa -> vars funcion INICIO funcAgregarInicio bloque . FIN liberarVar

    FIN             shift and go to state 44


state 37

    (4) bloque -> { . vars guardarCuadruplo estatuto }
    (5) bloque -> { . vars guardarCuadruplo }
    (6) bloque -> { . }
    (7) vars -> . tipo ID guardarIDs ; masTipos
    (8) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (9) vars -> . tipo listaIDS ; masTipos
    (10) vars -> . empty
    (140) tipo -> . ENTERO
    (141) tipo -> . DECIMAL
    (142) tipo -> . BOOL
    (143) tipo -> . VOID
    (144) tipo -> . CUADRADO
    (145) tipo -> . RECTANGULO
    (146) tipo -> . CIRCULO
    (147) tipo -> . LINEA
    (148) tipo -> . ESTRELLA
    (156) empty -> .

  ! shift/reduce conflict for } resolved as shift
    }               shift and go to state 46
    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8
    ID              reduce using rule 156 (empty -> .)
    DIBUJAR         reduce using rule 156 (empty -> .)
    IF              reduce using rule 156 (empty -> .)
    LEER            reduce using rule 156 (empty -> .)
    WHILE           reduce using rule 156 (empty -> .)
    MUEVE           reduce using rule 156 (empty -> .)

  ! }               [ reduce using rule 156 (empty -> .) ]

    vars                           shift and go to state 45
    empty                          shift and go to state 5
    tipo                           shift and go to state 4

state 38

    (14) masIDS -> , ID . guardarIDs
    (28) guardarIDs -> .

    ;               reduce using rule 28 (guardarIDs -> .)

    guardarIDs                     shift and go to state 47

state 39

    (8) vars -> tipo ID guardarIDs arreglo ; . masTipos
    (11) masTipos -> . vars
    (12) masTipos -> . empty
    (7) vars -> . tipo ID guardarIDs ; masTipos
    (8) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (9) vars -> . tipo listaIDS ; masTipos
    (10) vars -> . empty
    (156) empty -> .
    (140) tipo -> . ENTERO
    (141) tipo -> . DECIMAL
    (142) tipo -> . BOOL
    (143) tipo -> . VOID
    (144) tipo -> . CUADRADO
    (145) tipo -> . RECTANGULO
    (146) tipo -> . CIRCULO
    (147) tipo -> . LINEA
    (148) tipo -> . ESTRELLA

    FUNC            reduce using rule 156 (empty -> .)
    INICIO          reduce using rule 156 (empty -> .)
    }               reduce using rule 156 (empty -> .)
    ID              reduce using rule 156 (empty -> .)
    DIBUJAR         reduce using rule 156 (empty -> .)
    IF              reduce using rule 156 (empty -> .)
    LEER            reduce using rule 156 (empty -> .)
    WHILE           reduce using rule 156 (empty -> .)
    MUEVE           reduce using rule 156 (empty -> .)
    RETURN          reduce using rule 156 (empty -> .)
    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8

    masTipos                       shift and go to state 48
    tipo                           shift and go to state 4
    vars                           shift and go to state 27
    empty                          shift and go to state 28

state 40

    (16) arreglo -> [ CTI . ] matriz

    ]               shift and go to state 49


state 41

    (7) vars -> tipo ID guardarIDs ; masTipos .

    FUNC            reduce using rule 7 (vars -> tipo ID guardarIDs ; masTipos .)
    INICIO          reduce using rule 7 (vars -> tipo ID guardarIDs ; masTipos .)
    }               reduce using rule 7 (vars -> tipo ID guardarIDs ; masTipos .)
    ID              reduce using rule 7 (vars -> tipo ID guardarIDs ; masTipos .)
    DIBUJAR         reduce using rule 7 (vars -> tipo ID guardarIDs ; masTipos .)
    IF              reduce using rule 7 (vars -> tipo ID guardarIDs ; masTipos .)
    LEER            reduce using rule 7 (vars -> tipo ID guardarIDs ; masTipos .)
    WHILE           reduce using rule 7 (vars -> tipo ID guardarIDs ; masTipos .)
    MUEVE           reduce using rule 7 (vars -> tipo ID guardarIDs ; masTipos .)
    RETURN          reduce using rule 7 (vars -> tipo ID guardarIDs ; masTipos .)


state 42

    (23) restoFuncion -> ( . param ) bloquefunc
    (25) param -> . tipo ID guardarIDParam maspaID
    (26) param -> . empty
    (140) tipo -> . ENTERO
    (141) tipo -> . DECIMAL
    (142) tipo -> . BOOL
    (143) tipo -> . VOID
    (144) tipo -> . CUADRADO
    (145) tipo -> . RECTANGULO
    (146) tipo -> . CIRCULO
    (147) tipo -> . LINEA
    (148) tipo -> . ESTRELLA
    (156) empty -> .

    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8
    )               reduce using rule 156 (empty -> .)

    tipo                           shift and go to state 50
    param                          shift and go to state 51
    empty                          shift and go to state 52

state 43

    (19) funcion -> FUNC tipo ID funcAgregar restoFuncion . funcion2
    (21) funcion2 -> . funcion
    (22) funcion2 -> . empty
    (19) funcion -> . FUNC tipo ID funcAgregar restoFuncion funcion2
    (20) funcion -> . empty
    (156) empty -> .

    FUNC            shift and go to state 15
    INICIO          reduce using rule 156 (empty -> .)

    funcion2                       shift and go to state 53
    empty                          shift and go to state 55
    funcion                        shift and go to state 54

state 44

    (1) programa -> vars funcion INICIO funcAgregarInicio bloque FIN . liberarVar
    (35) liberarVar -> .

    $end            reduce using rule 35 (liberarVar -> .)

    liberarVar                     shift and go to state 56

state 45

    (4) bloque -> { vars . guardarCuadruplo estatuto }
    (5) bloque -> { vars . guardarCuadruplo }
    (36) guardarCuadruplo -> .

    }               reduce using rule 36 (guardarCuadruplo -> .)
    ID              reduce using rule 36 (guardarCuadruplo -> .)
    DIBUJAR         reduce using rule 36 (guardarCuadruplo -> .)
    IF              reduce using rule 36 (guardarCuadruplo -> .)
    LEER            reduce using rule 36 (guardarCuadruplo -> .)
    WHILE           reduce using rule 36 (guardarCuadruplo -> .)
    MUEVE           reduce using rule 36 (guardarCuadruplo -> .)

    guardarCuadruplo               shift and go to state 57

state 46

    (6) bloque -> { } .

    FIN             reduce using rule 6 (bloque -> { } .)


state 47

    (14) masIDS -> , ID guardarIDs .

    ;               reduce using rule 14 (masIDS -> , ID guardarIDs .)


state 48

    (8) vars -> tipo ID guardarIDs arreglo ; masTipos .

    FUNC            reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    INICIO          reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    }               reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    ID              reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    DIBUJAR         reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    IF              reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    LEER            reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    WHILE           reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    MUEVE           reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    RETURN          reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)


state 49

    (16) arreglo -> [ CTI ] . matriz
    (17) matriz -> . [ CTI ]
    (18) matriz -> . empty
    (156) empty -> .

    [               shift and go to state 58
    ;               reduce using rule 156 (empty -> .)

    empty                          shift and go to state 59
    matriz                         shift and go to state 60

state 50

    (25) param -> tipo . ID guardarIDParam maspaID

    ID              shift and go to state 61


state 51

    (23) restoFuncion -> ( param . ) bloquefunc

    )               shift and go to state 62


state 52

    (26) param -> empty .

    )               reduce using rule 26 (param -> empty .)


state 53

    (19) funcion -> FUNC tipo ID funcAgregar restoFuncion funcion2 .

    INICIO          reduce using rule 19 (funcion -> FUNC tipo ID funcAgregar restoFuncion funcion2 .)


state 54

    (21) funcion2 -> funcion .

    INICIO          reduce using rule 21 (funcion2 -> funcion .)


state 55

    (22) funcion2 -> empty .
    (20) funcion -> empty .

  ! reduce/reduce conflict for INICIO resolved using rule 20 (funcion -> empty .)
    INICIO          reduce using rule 20 (funcion -> empty .)

  ! INICIO          [ reduce using rule 22 (funcion2 -> empty .) ]


state 56

    (1) programa -> vars funcion INICIO funcAgregarInicio bloque FIN liberarVar .

    $end            reduce using rule 1 (programa -> vars funcion INICIO funcAgregarInicio bloque FIN liberarVar .)


state 57

    (4) bloque -> { vars guardarCuadruplo . estatuto }
    (5) bloque -> { vars guardarCuadruplo . }
    (38) estatuto -> . asignacion estatutoAux
    (39) estatuto -> . escritura estatutoAux
    (40) estatuto -> . condicion estatutoAux
    (41) estatuto -> . lectura estatutoAux
    (42) estatuto -> . whiles estatutoAux
    (43) estatuto -> . funcs estatutoAux
    (60) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (61) asignacion -> . ID ;
    (78) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (79) escritura -> . mueve
    (84) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (85) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse finPilaSaltos
    (72) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (126) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (48) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (49) funcs -> . ID
    (149) mueve -> . MUEVE guardarToken opcionMue

    }               shift and go to state 76
    ID              shift and go to state 71
    DIBUJAR         shift and go to state 75
    IF              shift and go to state 72
    LEER            shift and go to state 73
    WHILE           shift and go to state 64
    MUEVE           shift and go to state 65

    funcs                          shift and go to state 63
    estatuto                       shift and go to state 66
    mueve                          shift and go to state 67
    condicion                      shift and go to state 68
    lectura                        shift and go to state 69
    whiles                         shift and go to state 70
    asignacion                     shift and go to state 74
    escritura                      shift and go to state 77

state 58

    (17) matriz -> [ . CTI ]

    CTI             shift and go to state 78


state 59

    (18) matriz -> empty .

    ;               reduce using rule 18 (matriz -> empty .)


state 60

    (16) arreglo -> [ CTI ] matriz .

    ;               reduce using rule 16 (arreglo -> [ CTI ] matriz .)


state 61

    (25) param -> tipo ID . guardarIDParam maspaID
    (27) guardarIDParam -> .

    ,               reduce using rule 27 (guardarIDParam -> .)
    )               reduce using rule 27 (guardarIDParam -> .)

    guardarIDParam                 shift and go to state 79

state 62

    (23) restoFuncion -> ( param ) . bloquefunc
    (31) bloquefunc -> . { vars guardarCuadruplo estatuto regresa } liberarVar
    (32) bloquefunc -> . { vars guardarCuadruplo regresa } liberarVar
    (33) bloquefunc -> . { guardarCuadruplo escritura regresa } liberarVar
    (34) bloquefunc -> . { }

    {               shift and go to state 80

    bloquefunc                     shift and go to state 81

state 63

    (43) estatuto -> funcs . estatutoAux
    (44) estatutoAux -> . estatuto
    (45) estatutoAux -> . empty
    (38) estatuto -> . asignacion estatutoAux
    (39) estatuto -> . escritura estatutoAux
    (40) estatuto -> . condicion estatutoAux
    (41) estatuto -> . lectura estatutoAux
    (42) estatuto -> . whiles estatutoAux
    (43) estatuto -> . funcs estatutoAux
    (156) empty -> .
    (60) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (61) asignacion -> . ID ;
    (78) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (79) escritura -> . mueve
    (84) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (85) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse finPilaSaltos
    (72) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (126) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (48) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (49) funcs -> . ID
    (149) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 156 (empty -> .)
    RETURN          reduce using rule 156 (empty -> .)
    ID              shift and go to state 71
    DIBUJAR         shift and go to state 75
    IF              shift and go to state 72
    LEER            shift and go to state 73
    WHILE           shift and go to state 64
    MUEVE           shift and go to state 65

    funcs                          shift and go to state 63
    estatuto                       shift and go to state 82
    mueve                          shift and go to state 67
    condicion                      shift and go to state 68
    lectura                        shift and go to state 69
    empty                          shift and go to state 83
    whiles                         shift and go to state 70
    estatutoAux                    shift and go to state 84
    asignacion                     shift and go to state 74
    escritura                      shift and go to state 77

state 64

    (126) whiles -> WHILE . checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (127) checarWhile -> .

    (               reduce using rule 127 (checarWhile -> .)

    checarWhile                    shift and go to state 85

state 65

    (149) mueve -> MUEVE . guardarToken opcionMue
    (70) guardarToken -> .

    IZQUIERDA       reduce using rule 70 (guardarToken -> .)
    DERECHA         reduce using rule 70 (guardarToken -> .)
    ARRIBA          reduce using rule 70 (guardarToken -> .)
    ABAJO           reduce using rule 70 (guardarToken -> .)

    guardarToken                   shift and go to state 86

state 66

    (4) bloque -> { vars guardarCuadruplo estatuto . }

    }               shift and go to state 87


state 67

    (79) escritura -> mueve .

    ID              reduce using rule 79 (escritura -> mueve .)
    DIBUJAR         reduce using rule 79 (escritura -> mueve .)
    IF              reduce using rule 79 (escritura -> mueve .)
    LEER            reduce using rule 79 (escritura -> mueve .)
    WHILE           reduce using rule 79 (escritura -> mueve .)
    MUEVE           reduce using rule 79 (escritura -> mueve .)
    RETURN          reduce using rule 79 (escritura -> mueve .)
    }               reduce using rule 79 (escritura -> mueve .)


state 68

    (40) estatuto -> condicion . estatutoAux
    (44) estatutoAux -> . estatuto
    (45) estatutoAux -> . empty
    (38) estatuto -> . asignacion estatutoAux
    (39) estatuto -> . escritura estatutoAux
    (40) estatuto -> . condicion estatutoAux
    (41) estatuto -> . lectura estatutoAux
    (42) estatuto -> . whiles estatutoAux
    (43) estatuto -> . funcs estatutoAux
    (156) empty -> .
    (60) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (61) asignacion -> . ID ;
    (78) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (79) escritura -> . mueve
    (84) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (85) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse finPilaSaltos
    (72) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (126) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (48) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (49) funcs -> . ID
    (149) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 156 (empty -> .)
    RETURN          reduce using rule 156 (empty -> .)
    ID              shift and go to state 71
    DIBUJAR         shift and go to state 75
    IF              shift and go to state 72
    LEER            shift and go to state 73
    WHILE           shift and go to state 64
    MUEVE           shift and go to state 65

    funcs                          shift and go to state 63
    estatuto                       shift and go to state 82
    mueve                          shift and go to state 67
    condicion                      shift and go to state 68
    lectura                        shift and go to state 69
    empty                          shift and go to state 83
    whiles                         shift and go to state 70
    estatutoAux                    shift and go to state 88
    asignacion                     shift and go to state 74
    escritura                      shift and go to state 77

state 69

    (41) estatuto -> lectura . estatutoAux
    (44) estatutoAux -> . estatuto
    (45) estatutoAux -> . empty
    (38) estatuto -> . asignacion estatutoAux
    (39) estatuto -> . escritura estatutoAux
    (40) estatuto -> . condicion estatutoAux
    (41) estatuto -> . lectura estatutoAux
    (42) estatuto -> . whiles estatutoAux
    (43) estatuto -> . funcs estatutoAux
    (156) empty -> .
    (60) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (61) asignacion -> . ID ;
    (78) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (79) escritura -> . mueve
    (84) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (85) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse finPilaSaltos
    (72) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (126) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (48) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (49) funcs -> . ID
    (149) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 156 (empty -> .)
    RETURN          reduce using rule 156 (empty -> .)
    ID              shift and go to state 71
    DIBUJAR         shift and go to state 75
    IF              shift and go to state 72
    LEER            shift and go to state 73
    WHILE           shift and go to state 64
    MUEVE           shift and go to state 65

    funcs                          shift and go to state 63
    estatuto                       shift and go to state 82
    mueve                          shift and go to state 67
    condicion                      shift and go to state 68
    lectura                        shift and go to state 69
    empty                          shift and go to state 83
    whiles                         shift and go to state 70
    estatutoAux                    shift and go to state 89
    asignacion                     shift and go to state 74
    escritura                      shift and go to state 77

state 70

    (42) estatuto -> whiles . estatutoAux
    (44) estatutoAux -> . estatuto
    (45) estatutoAux -> . empty
    (38) estatuto -> . asignacion estatutoAux
    (39) estatuto -> . escritura estatutoAux
    (40) estatuto -> . condicion estatutoAux
    (41) estatuto -> . lectura estatutoAux
    (42) estatuto -> . whiles estatutoAux
    (43) estatuto -> . funcs estatutoAux
    (156) empty -> .
    (60) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (61) asignacion -> . ID ;
    (78) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (79) escritura -> . mueve
    (84) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (85) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse finPilaSaltos
    (72) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (126) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (48) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (49) funcs -> . ID
    (149) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 156 (empty -> .)
    RETURN          reduce using rule 156 (empty -> .)
    ID              shift and go to state 71
    DIBUJAR         shift and go to state 75
    IF              shift and go to state 72
    LEER            shift and go to state 73
    WHILE           shift and go to state 64
    MUEVE           shift and go to state 65

    funcs                          shift and go to state 63
    estatuto                       shift and go to state 82
    mueve                          shift and go to state 67
    condicion                      shift and go to state 68
    lectura                        shift and go to state 69
    empty                          shift and go to state 83
    whiles                         shift and go to state 70
    estatutoAux                    shift and go to state 90
    asignacion                     shift and go to state 74
    escritura                      shift and go to state 77

state 71

    (60) asignacion -> ID . guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (61) asignacion -> ID . ;
    (48) funcs -> ID . guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (49) funcs -> ID .
    (62) guardarIDPila -> .
    (50) guardarIDFunc -> .

  ! shift/reduce conflict for ; resolved as shift
    ;               shift and go to state 93
    ID              reduce using rule 49 (funcs -> ID .)
    DIBUJAR         reduce using rule 49 (funcs -> ID .)
    IF              reduce using rule 49 (funcs -> ID .)
    LEER            reduce using rule 49 (funcs -> ID .)
    WHILE           reduce using rule 49 (funcs -> ID .)
    MUEVE           reduce using rule 49 (funcs -> ID .)
    }               reduce using rule 49 (funcs -> ID .)
    RETURN          reduce using rule 49 (funcs -> ID .)
    [               reduce using rule 62 (guardarIDPila -> .)
    =               reduce using rule 62 (guardarIDPila -> .)
    (               reduce using rule 50 (guardarIDFunc -> .)

  ! ;               [ reduce using rule 62 (guardarIDPila -> .) ]

    guardarIDPila                  shift and go to state 91
    guardarIDFunc                  shift and go to state 92

state 72

    (84) condicion -> IF . ( expresion ) checarIF bloqueCond finPilaSaltos
    (85) condicion -> IF . ( expresion ) checarIF bloqueCond checarElse finPilaSaltos

    (               shift and go to state 94


state 73

    (72) lectura -> LEER . guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (70) guardarToken -> .

    ID              reduce using rule 70 (guardarToken -> .)

    guardarToken                   shift and go to state 95

state 74

    (38) estatuto -> asignacion . estatutoAux
    (44) estatutoAux -> . estatuto
    (45) estatutoAux -> . empty
    (38) estatuto -> . asignacion estatutoAux
    (39) estatuto -> . escritura estatutoAux
    (40) estatuto -> . condicion estatutoAux
    (41) estatuto -> . lectura estatutoAux
    (42) estatuto -> . whiles estatutoAux
    (43) estatuto -> . funcs estatutoAux
    (156) empty -> .
    (60) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (61) asignacion -> . ID ;
    (78) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (79) escritura -> . mueve
    (84) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (85) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse finPilaSaltos
    (72) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (126) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (48) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (49) funcs -> . ID
    (149) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 156 (empty -> .)
    RETURN          reduce using rule 156 (empty -> .)
    ID              shift and go to state 71
    DIBUJAR         shift and go to state 75
    IF              shift and go to state 72
    LEER            shift and go to state 73
    WHILE           shift and go to state 64
    MUEVE           shift and go to state 65

    funcs                          shift and go to state 63
    estatuto                       shift and go to state 82
    mueve                          shift and go to state 67
    condicion                      shift and go to state 68
    lectura                        shift and go to state 69
    empty                          shift and go to state 83
    whiles                         shift and go to state 70
    estatutoAux                    shift and go to state 96
    asignacion                     shift and go to state 74
    escritura                      shift and go to state 77

state 75

    (78) escritura -> DIBUJAR . guardarToken ( guardarParametros ) ;
    (70) guardarToken -> .

    (               reduce using rule 70 (guardarToken -> .)

    guardarToken                   shift and go to state 97

state 76

    (5) bloque -> { vars guardarCuadruplo } .

    FIN             reduce using rule 5 (bloque -> { vars guardarCuadruplo } .)


state 77

    (39) estatuto -> escritura . estatutoAux
    (44) estatutoAux -> . estatuto
    (45) estatutoAux -> . empty
    (38) estatuto -> . asignacion estatutoAux
    (39) estatuto -> . escritura estatutoAux
    (40) estatuto -> . condicion estatutoAux
    (41) estatuto -> . lectura estatutoAux
    (42) estatuto -> . whiles estatutoAux
    (43) estatuto -> . funcs estatutoAux
    (156) empty -> .
    (60) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (61) asignacion -> . ID ;
    (78) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (79) escritura -> . mueve
    (84) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (85) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse finPilaSaltos
    (72) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (126) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (48) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (49) funcs -> . ID
    (149) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 156 (empty -> .)
    RETURN          reduce using rule 156 (empty -> .)
    ID              shift and go to state 71
    DIBUJAR         shift and go to state 75
    IF              shift and go to state 72
    LEER            shift and go to state 73
    WHILE           shift and go to state 64
    MUEVE           shift and go to state 65

    funcs                          shift and go to state 63
    estatuto                       shift and go to state 82
    mueve                          shift and go to state 67
    condicion                      shift and go to state 68
    lectura                        shift and go to state 69
    empty                          shift and go to state 83
    whiles                         shift and go to state 70
    estatutoAux                    shift and go to state 98
    asignacion                     shift and go to state 74
    escritura                      shift and go to state 77

state 78

    (17) matriz -> [ CTI . ]

    ]               shift and go to state 99


state 79

    (25) param -> tipo ID guardarIDParam . maspaID
    (29) maspaID -> . , param
    (30) maspaID -> . empty
    (156) empty -> .

    ,               shift and go to state 101
    )               reduce using rule 156 (empty -> .)

    maspaID                        shift and go to state 100
    empty                          shift and go to state 102

state 80

    (31) bloquefunc -> { . vars guardarCuadruplo estatuto regresa } liberarVar
    (32) bloquefunc -> { . vars guardarCuadruplo regresa } liberarVar
    (33) bloquefunc -> { . guardarCuadruplo escritura regresa } liberarVar
    (34) bloquefunc -> { . }
    (7) vars -> . tipo ID guardarIDs ; masTipos
    (8) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (9) vars -> . tipo listaIDS ; masTipos
    (10) vars -> . empty
    (36) guardarCuadruplo -> .
    (140) tipo -> . ENTERO
    (141) tipo -> . DECIMAL
    (142) tipo -> . BOOL
    (143) tipo -> . VOID
    (144) tipo -> . CUADRADO
    (145) tipo -> . RECTANGULO
    (146) tipo -> . CIRCULO
    (147) tipo -> . LINEA
    (148) tipo -> . ESTRELLA
    (156) empty -> .

  ! reduce/reduce conflict for DIBUJAR resolved using rule 36 (guardarCuadruplo -> .)
  ! reduce/reduce conflict for MUEVE resolved using rule 36 (guardarCuadruplo -> .)
    }               shift and go to state 105
    DIBUJAR         reduce using rule 36 (guardarCuadruplo -> .)
    MUEVE           reduce using rule 36 (guardarCuadruplo -> .)
    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8
    RETURN          reduce using rule 156 (empty -> .)
    ID              reduce using rule 156 (empty -> .)
    IF              reduce using rule 156 (empty -> .)
    LEER            reduce using rule 156 (empty -> .)
    WHILE           reduce using rule 156 (empty -> .)

  ! DIBUJAR         [ reduce using rule 156 (empty -> .) ]
  ! MUEVE           [ reduce using rule 156 (empty -> .) ]

    guardarCuadruplo               shift and go to state 104
    vars                           shift and go to state 103
    tipo                           shift and go to state 4
    empty                          shift and go to state 5

state 81

    (23) restoFuncion -> ( param ) bloquefunc .

    FUNC            reduce using rule 23 (restoFuncion -> ( param ) bloquefunc .)
    INICIO          reduce using rule 23 (restoFuncion -> ( param ) bloquefunc .)


state 82

    (44) estatutoAux -> estatuto .

    }               reduce using rule 44 (estatutoAux -> estatuto .)
    RETURN          reduce using rule 44 (estatutoAux -> estatuto .)


state 83

    (45) estatutoAux -> empty .

    }               reduce using rule 45 (estatutoAux -> empty .)
    RETURN          reduce using rule 45 (estatutoAux -> empty .)


state 84

    (43) estatuto -> funcs estatutoAux .

    }               reduce using rule 43 (estatuto -> funcs estatutoAux .)
    RETURN          reduce using rule 43 (estatuto -> funcs estatutoAux .)


state 85

    (126) whiles -> WHILE checarWhile . ( expresion ) checarContenido bloqueCond finPilaSaltosWhile

    (               shift and go to state 106


state 86

    (149) mueve -> MUEVE guardarToken . opcionMue
    (150) opcionMue -> . direccion ID guardarIDPila recibe_CTI checarMover ;
    (151) direccion -> . IZQUIERDA
    (152) direccion -> . DERECHA
    (153) direccion -> . ARRIBA
    (154) direccion -> . ABAJO

    IZQUIERDA       shift and go to state 109
    DERECHA         shift and go to state 111
    ARRIBA          shift and go to state 110
    ABAJO           shift and go to state 107

    direccion                      shift and go to state 108
    opcionMue                      shift and go to state 112

state 87

    (4) bloque -> { vars guardarCuadruplo estatuto } .

    FIN             reduce using rule 4 (bloque -> { vars guardarCuadruplo estatuto } .)


state 88

    (40) estatuto -> condicion estatutoAux .

    }               reduce using rule 40 (estatuto -> condicion estatutoAux .)
    RETURN          reduce using rule 40 (estatuto -> condicion estatutoAux .)


state 89

    (41) estatuto -> lectura estatutoAux .

    }               reduce using rule 41 (estatuto -> lectura estatutoAux .)
    RETURN          reduce using rule 41 (estatuto -> lectura estatutoAux .)


state 90

    (42) estatuto -> whiles estatutoAux .

    }               reduce using rule 42 (estatuto -> whiles estatutoAux .)
    RETURN          reduce using rule 42 (estatuto -> whiles estatutoAux .)


state 91

    (60) asignacion -> ID guardarIDPila . opcionAsignacion valorAsig ; checarOperadorIgual
    (64) opcionAsignacion -> . [ CTI ]
    (65) opcionAsignacion -> . [ CTI ] [ CTI ]
    (66) opcionAsignacion -> . empty
    (156) empty -> .

    [               shift and go to state 114
    =               reduce using rule 156 (empty -> .)
    ;               reduce using rule 156 (empty -> .)

    opcionAsignacion               shift and go to state 113
    empty                          shift and go to state 115

state 92

    (48) funcs -> ID guardarIDFunc . verProc generarERA auxExp checaNumParam generaGOSUB
    (51) verProc -> .

    (               reduce using rule 51 (verProc -> .)

    verProc                        shift and go to state 116

state 93

    (61) asignacion -> ID ; .

    ID              reduce using rule 61 (asignacion -> ID ; .)
    DIBUJAR         reduce using rule 61 (asignacion -> ID ; .)
    IF              reduce using rule 61 (asignacion -> ID ; .)
    LEER            reduce using rule 61 (asignacion -> ID ; .)
    WHILE           reduce using rule 61 (asignacion -> ID ; .)
    MUEVE           reduce using rule 61 (asignacion -> ID ; .)
    RETURN          reduce using rule 61 (asignacion -> ID ; .)
    }               reduce using rule 61 (asignacion -> ID ; .)


state 94

    (84) condicion -> IF ( . expresion ) checarIF bloqueCond finPilaSaltos
    (85) condicion -> IF ( . expresion ) checarIF bloqueCond checarElse finPilaSaltos
    (94) expresion -> . exp operacionLogica checaoperador6
    (95) expresion -> . exp
    (107) exp -> . termino checaroperador4
    (116) termino -> . factor checaroperador5
    (123) factor -> . fondoFalso expresion finFondoFalso
    (124) factor -> . varcte
    (108) fondoFalso -> . (
    (130) varcte -> . recibe_ID
    (131) varcte -> . recibe_CTF
    (132) varcte -> . recibe_CTI
    (133) varcte -> . recibe_TRUE
    (134) varcte -> . recibe_FALSE
    (135) recibe_ID -> . ID
    (136) recibe_CTF -> . CTF
    (137) recibe_CTI -> . CTI
    (138) recibe_TRUE -> . TRUE
    (139) recibe_FALSE -> . FALSE

    (               shift and go to state 124
    ID              shift and go to state 127
    CTF             shift and go to state 117
    CTI             shift and go to state 120
    TRUE            shift and go to state 119
    FALSE           shift and go to state 129

    expresion                      shift and go to state 128
    recibe_TRUE                    shift and go to state 121
    recibe_CTF                     shift and go to state 123
    recibe_CTI                     shift and go to state 130
    varcte                         shift and go to state 122
    factor                         shift and go to state 126
    recibe_ID                      shift and go to state 125
    termino                        shift and go to state 118
    exp                            shift and go to state 131
    recibe_FALSE                   shift and go to state 133
    fondoFalso                     shift and go to state 132

state 95

    (72) lectura -> LEER guardarToken . ID guardarIDPila checarLectura opcionesLectura ;

    ID              shift and go to state 134


state 96

    (38) estatuto -> asignacion estatutoAux .

    }               reduce using rule 38 (estatuto -> asignacion estatutoAux .)
    RETURN          reduce using rule 38 (estatuto -> asignacion estatutoAux .)


state 97

    (78) escritura -> DIBUJAR guardarToken . ( guardarParametros ) ;

    (               shift and go to state 135


state 98

    (39) estatuto -> escritura estatutoAux .

    }               reduce using rule 39 (estatuto -> escritura estatutoAux .)
    RETURN          reduce using rule 39 (estatuto -> escritura estatutoAux .)


state 99

    (17) matriz -> [ CTI ] .

    ;               reduce using rule 17 (matriz -> [ CTI ] .)


state 100

    (25) param -> tipo ID guardarIDParam maspaID .

    )               reduce using rule 25 (param -> tipo ID guardarIDParam maspaID .)


state 101

    (29) maspaID -> , . param
    (25) param -> . tipo ID guardarIDParam maspaID
    (26) param -> . empty
    (140) tipo -> . ENTERO
    (141) tipo -> . DECIMAL
    (142) tipo -> . BOOL
    (143) tipo -> . VOID
    (144) tipo -> . CUADRADO
    (145) tipo -> . RECTANGULO
    (146) tipo -> . CIRCULO
    (147) tipo -> . LINEA
    (148) tipo -> . ESTRELLA
    (156) empty -> .

    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8
    )               reduce using rule 156 (empty -> .)

    empty                          shift and go to state 52
    tipo                           shift and go to state 50
    param                          shift and go to state 136

state 102

    (30) maspaID -> empty .

    )               reduce using rule 30 (maspaID -> empty .)


state 103

    (31) bloquefunc -> { vars . guardarCuadruplo estatuto regresa } liberarVar
    (32) bloquefunc -> { vars . guardarCuadruplo regresa } liberarVar
    (36) guardarCuadruplo -> .

    RETURN          reduce using rule 36 (guardarCuadruplo -> .)
    ID              reduce using rule 36 (guardarCuadruplo -> .)
    DIBUJAR         reduce using rule 36 (guardarCuadruplo -> .)
    IF              reduce using rule 36 (guardarCuadruplo -> .)
    LEER            reduce using rule 36 (guardarCuadruplo -> .)
    WHILE           reduce using rule 36 (guardarCuadruplo -> .)
    MUEVE           reduce using rule 36 (guardarCuadruplo -> .)

    guardarCuadruplo               shift and go to state 137

state 104

    (33) bloquefunc -> { guardarCuadruplo . escritura regresa } liberarVar
    (78) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (79) escritura -> . mueve
    (149) mueve -> . MUEVE guardarToken opcionMue

    DIBUJAR         shift and go to state 75
    MUEVE           shift and go to state 65

    mueve                          shift and go to state 67
    escritura                      shift and go to state 138

state 105

    (34) bloquefunc -> { } .

    FUNC            reduce using rule 34 (bloquefunc -> { } .)
    INICIO          reduce using rule 34 (bloquefunc -> { } .)


state 106

    (126) whiles -> WHILE checarWhile ( . expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (94) expresion -> . exp operacionLogica checaoperador6
    (95) expresion -> . exp
    (107) exp -> . termino checaroperador4
    (116) termino -> . factor checaroperador5
    (123) factor -> . fondoFalso expresion finFondoFalso
    (124) factor -> . varcte
    (108) fondoFalso -> . (
    (130) varcte -> . recibe_ID
    (131) varcte -> . recibe_CTF
    (132) varcte -> . recibe_CTI
    (133) varcte -> . recibe_TRUE
    (134) varcte -> . recibe_FALSE
    (135) recibe_ID -> . ID
    (136) recibe_CTF -> . CTF
    (137) recibe_CTI -> . CTI
    (138) recibe_TRUE -> . TRUE
    (139) recibe_FALSE -> . FALSE

    (               shift and go to state 124
    ID              shift and go to state 127
    CTF             shift and go to state 117
    CTI             shift and go to state 120
    TRUE            shift and go to state 119
    FALSE           shift and go to state 129

    expresion                      shift and go to state 139
    varcte                         shift and go to state 122
    recibe_TRUE                    shift and go to state 121
    recibe_CTF                     shift and go to state 123
    recibe_CTI                     shift and go to state 130
    factor                         shift and go to state 126
    recibe_ID                      shift and go to state 125
    termino                        shift and go to state 118
    exp                            shift and go to state 131
    recibe_FALSE                   shift and go to state 133
    fondoFalso                     shift and go to state 132

state 107

    (154) direccion -> ABAJO .

    ID              reduce using rule 154 (direccion -> ABAJO .)


state 108

    (150) opcionMue -> direccion . ID guardarIDPila recibe_CTI checarMover ;

    ID              shift and go to state 140


state 109

    (151) direccion -> IZQUIERDA .

    ID              reduce using rule 151 (direccion -> IZQUIERDA .)


state 110

    (153) direccion -> ARRIBA .

    ID              reduce using rule 153 (direccion -> ARRIBA .)


state 111

    (152) direccion -> DERECHA .

    ID              reduce using rule 152 (direccion -> DERECHA .)


state 112

    (149) mueve -> MUEVE guardarToken opcionMue .

    ID              reduce using rule 149 (mueve -> MUEVE guardarToken opcionMue .)
    DIBUJAR         reduce using rule 149 (mueve -> MUEVE guardarToken opcionMue .)
    IF              reduce using rule 149 (mueve -> MUEVE guardarToken opcionMue .)
    LEER            reduce using rule 149 (mueve -> MUEVE guardarToken opcionMue .)
    WHILE           reduce using rule 149 (mueve -> MUEVE guardarToken opcionMue .)
    MUEVE           reduce using rule 149 (mueve -> MUEVE guardarToken opcionMue .)
    }               reduce using rule 149 (mueve -> MUEVE guardarToken opcionMue .)
    RETURN          reduce using rule 149 (mueve -> MUEVE guardarToken opcionMue .)


state 113

    (60) asignacion -> ID guardarIDPila opcionAsignacion . valorAsig ; checarOperadorIgual
    (67) valorAsig -> . = exp
    (68) valorAsig -> . = funcs
    (69) valorAsig -> . empty
    (156) empty -> .

    =               shift and go to state 142
    ;               reduce using rule 156 (empty -> .)

    valorAsig                      shift and go to state 141
    empty                          shift and go to state 143

state 114

    (64) opcionAsignacion -> [ . CTI ]
    (65) opcionAsignacion -> [ . CTI ] [ CTI ]

    CTI             shift and go to state 144


state 115

    (66) opcionAsignacion -> empty .

    =               reduce using rule 66 (opcionAsignacion -> empty .)
    ;               reduce using rule 66 (opcionAsignacion -> empty .)


state 116

    (48) funcs -> ID guardarIDFunc verProc . generarERA auxExp checaNumParam generaGOSUB
    (52) generarERA -> . (

    (               shift and go to state 145

    generarERA                     shift and go to state 146

state 117

    (136) recibe_CTF -> CTF .

    ,               reduce using rule 136 (recibe_CTF -> CTF .)
    *               reduce using rule 136 (recibe_CTF -> CTF .)
    /               reduce using rule 136 (recibe_CTF -> CTF .)
    +               reduce using rule 136 (recibe_CTF -> CTF .)
    -               reduce using rule 136 (recibe_CTF -> CTF .)
    >               reduce using rule 136 (recibe_CTF -> CTF .)
    <               reduce using rule 136 (recibe_CTF -> CTF .)
    MENORIGUAL      reduce using rule 136 (recibe_CTF -> CTF .)
    MAYORIGUAL      reduce using rule 136 (recibe_CTF -> CTF .)
    IGUALIGUAL      reduce using rule 136 (recibe_CTF -> CTF .)
    DIFERENTE       reduce using rule 136 (recibe_CTF -> CTF .)
    |               reduce using rule 136 (recibe_CTF -> CTF .)
    COAND           reduce using rule 136 (recibe_CTF -> CTF .)
    )               reduce using rule 136 (recibe_CTF -> CTF .)
    ;               reduce using rule 136 (recibe_CTF -> CTF .)


state 118

    (107) exp -> termino . checaroperador4
    (110) checaroperador4 -> . signo
    (111) checaroperador4 -> .
    (112) signo -> . push_pm exp
    (113) signo -> .
    (114) push_pm -> . +
    (115) push_pm -> . -

  ! reduce/reduce conflict for > resolved using rule 111 (checaroperador4 -> .)
  ! reduce/reduce conflict for < resolved using rule 111 (checaroperador4 -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 111 (checaroperador4 -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 111 (checaroperador4 -> .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 111 (checaroperador4 -> .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 111 (checaroperador4 -> .)
  ! reduce/reduce conflict for | resolved using rule 111 (checaroperador4 -> .)
  ! reduce/reduce conflict for COAND resolved using rule 111 (checaroperador4 -> .)
  ! reduce/reduce conflict for ) resolved using rule 111 (checaroperador4 -> .)
  ! reduce/reduce conflict for ; resolved using rule 111 (checaroperador4 -> .)
  ! reduce/reduce conflict for , resolved using rule 111 (checaroperador4 -> .)
    >               reduce using rule 111 (checaroperador4 -> .)
    <               reduce using rule 111 (checaroperador4 -> .)
    MENORIGUAL      reduce using rule 111 (checaroperador4 -> .)
    MAYORIGUAL      reduce using rule 111 (checaroperador4 -> .)
    IGUALIGUAL      reduce using rule 111 (checaroperador4 -> .)
    DIFERENTE       reduce using rule 111 (checaroperador4 -> .)
    |               reduce using rule 111 (checaroperador4 -> .)
    COAND           reduce using rule 111 (checaroperador4 -> .)
    )               reduce using rule 111 (checaroperador4 -> .)
    ;               reduce using rule 111 (checaroperador4 -> .)
    ,               reduce using rule 111 (checaroperador4 -> .)
    +               shift and go to state 147
    -               shift and go to state 149

  ! >               [ reduce using rule 113 (signo -> .) ]
  ! <               [ reduce using rule 113 (signo -> .) ]
  ! MENORIGUAL      [ reduce using rule 113 (signo -> .) ]
  ! MAYORIGUAL      [ reduce using rule 113 (signo -> .) ]
  ! IGUALIGUAL      [ reduce using rule 113 (signo -> .) ]
  ! DIFERENTE       [ reduce using rule 113 (signo -> .) ]
  ! |               [ reduce using rule 113 (signo -> .) ]
  ! COAND           [ reduce using rule 113 (signo -> .) ]
  ! )               [ reduce using rule 113 (signo -> .) ]
  ! ;               [ reduce using rule 113 (signo -> .) ]
  ! ,               [ reduce using rule 113 (signo -> .) ]

    push_pm                        shift and go to state 151
    signo                          shift and go to state 148
    checaroperador4                shift and go to state 150

state 119

    (138) recibe_TRUE -> TRUE .

    *               reduce using rule 138 (recibe_TRUE -> TRUE .)
    /               reduce using rule 138 (recibe_TRUE -> TRUE .)
    +               reduce using rule 138 (recibe_TRUE -> TRUE .)
    -               reduce using rule 138 (recibe_TRUE -> TRUE .)
    >               reduce using rule 138 (recibe_TRUE -> TRUE .)
    <               reduce using rule 138 (recibe_TRUE -> TRUE .)
    MENORIGUAL      reduce using rule 138 (recibe_TRUE -> TRUE .)
    MAYORIGUAL      reduce using rule 138 (recibe_TRUE -> TRUE .)
    IGUALIGUAL      reduce using rule 138 (recibe_TRUE -> TRUE .)
    DIFERENTE       reduce using rule 138 (recibe_TRUE -> TRUE .)
    |               reduce using rule 138 (recibe_TRUE -> TRUE .)
    COAND           reduce using rule 138 (recibe_TRUE -> TRUE .)
    )               reduce using rule 138 (recibe_TRUE -> TRUE .)
    ;               reduce using rule 138 (recibe_TRUE -> TRUE .)
    ,               reduce using rule 138 (recibe_TRUE -> TRUE .)


state 120

    (137) recibe_CTI -> CTI .

    *               reduce using rule 137 (recibe_CTI -> CTI .)
    /               reduce using rule 137 (recibe_CTI -> CTI .)
    +               reduce using rule 137 (recibe_CTI -> CTI .)
    -               reduce using rule 137 (recibe_CTI -> CTI .)
    ,               reduce using rule 137 (recibe_CTI -> CTI .)
    )               reduce using rule 137 (recibe_CTI -> CTI .)
    >               reduce using rule 137 (recibe_CTI -> CTI .)
    <               reduce using rule 137 (recibe_CTI -> CTI .)
    MENORIGUAL      reduce using rule 137 (recibe_CTI -> CTI .)
    MAYORIGUAL      reduce using rule 137 (recibe_CTI -> CTI .)
    IGUALIGUAL      reduce using rule 137 (recibe_CTI -> CTI .)
    DIFERENTE       reduce using rule 137 (recibe_CTI -> CTI .)
    |               reduce using rule 137 (recibe_CTI -> CTI .)
    COAND           reduce using rule 137 (recibe_CTI -> CTI .)
    ;               reduce using rule 137 (recibe_CTI -> CTI .)


state 121

    (133) varcte -> recibe_TRUE .

    *               reduce using rule 133 (varcte -> recibe_TRUE .)
    /               reduce using rule 133 (varcte -> recibe_TRUE .)
    +               reduce using rule 133 (varcte -> recibe_TRUE .)
    -               reduce using rule 133 (varcte -> recibe_TRUE .)
    ;               reduce using rule 133 (varcte -> recibe_TRUE .)
    >               reduce using rule 133 (varcte -> recibe_TRUE .)
    <               reduce using rule 133 (varcte -> recibe_TRUE .)
    MENORIGUAL      reduce using rule 133 (varcte -> recibe_TRUE .)
    MAYORIGUAL      reduce using rule 133 (varcte -> recibe_TRUE .)
    IGUALIGUAL      reduce using rule 133 (varcte -> recibe_TRUE .)
    DIFERENTE       reduce using rule 133 (varcte -> recibe_TRUE .)
    |               reduce using rule 133 (varcte -> recibe_TRUE .)
    COAND           reduce using rule 133 (varcte -> recibe_TRUE .)
    )               reduce using rule 133 (varcte -> recibe_TRUE .)
    ,               reduce using rule 133 (varcte -> recibe_TRUE .)


state 122

    (124) factor -> varcte .

    *               reduce using rule 124 (factor -> varcte .)
    /               reduce using rule 124 (factor -> varcte .)
    +               reduce using rule 124 (factor -> varcte .)
    -               reduce using rule 124 (factor -> varcte .)
    >               reduce using rule 124 (factor -> varcte .)
    <               reduce using rule 124 (factor -> varcte .)
    MENORIGUAL      reduce using rule 124 (factor -> varcte .)
    MAYORIGUAL      reduce using rule 124 (factor -> varcte .)
    IGUALIGUAL      reduce using rule 124 (factor -> varcte .)
    DIFERENTE       reduce using rule 124 (factor -> varcte .)
    |               reduce using rule 124 (factor -> varcte .)
    COAND           reduce using rule 124 (factor -> varcte .)
    )               reduce using rule 124 (factor -> varcte .)
    ;               reduce using rule 124 (factor -> varcte .)
    ,               reduce using rule 124 (factor -> varcte .)


state 123

    (131) varcte -> recibe_CTF .

    *               reduce using rule 131 (varcte -> recibe_CTF .)
    /               reduce using rule 131 (varcte -> recibe_CTF .)
    +               reduce using rule 131 (varcte -> recibe_CTF .)
    -               reduce using rule 131 (varcte -> recibe_CTF .)
    ;               reduce using rule 131 (varcte -> recibe_CTF .)
    >               reduce using rule 131 (varcte -> recibe_CTF .)
    <               reduce using rule 131 (varcte -> recibe_CTF .)
    MENORIGUAL      reduce using rule 131 (varcte -> recibe_CTF .)
    MAYORIGUAL      reduce using rule 131 (varcte -> recibe_CTF .)
    IGUALIGUAL      reduce using rule 131 (varcte -> recibe_CTF .)
    DIFERENTE       reduce using rule 131 (varcte -> recibe_CTF .)
    |               reduce using rule 131 (varcte -> recibe_CTF .)
    COAND           reduce using rule 131 (varcte -> recibe_CTF .)
    )               reduce using rule 131 (varcte -> recibe_CTF .)
    ,               reduce using rule 131 (varcte -> recibe_CTF .)


state 124

    (108) fondoFalso -> ( .

    (               reduce using rule 108 (fondoFalso -> ( .)
    ID              reduce using rule 108 (fondoFalso -> ( .)
    CTF             reduce using rule 108 (fondoFalso -> ( .)
    CTI             reduce using rule 108 (fondoFalso -> ( .)
    TRUE            reduce using rule 108 (fondoFalso -> ( .)
    FALSE           reduce using rule 108 (fondoFalso -> ( .)


state 125

    (130) varcte -> recibe_ID .

    *               reduce using rule 130 (varcte -> recibe_ID .)
    /               reduce using rule 130 (varcte -> recibe_ID .)
    +               reduce using rule 130 (varcte -> recibe_ID .)
    -               reduce using rule 130 (varcte -> recibe_ID .)
    ;               reduce using rule 130 (varcte -> recibe_ID .)
    >               reduce using rule 130 (varcte -> recibe_ID .)
    <               reduce using rule 130 (varcte -> recibe_ID .)
    MENORIGUAL      reduce using rule 130 (varcte -> recibe_ID .)
    MAYORIGUAL      reduce using rule 130 (varcte -> recibe_ID .)
    IGUALIGUAL      reduce using rule 130 (varcte -> recibe_ID .)
    DIFERENTE       reduce using rule 130 (varcte -> recibe_ID .)
    |               reduce using rule 130 (varcte -> recibe_ID .)
    COAND           reduce using rule 130 (varcte -> recibe_ID .)
    )               reduce using rule 130 (varcte -> recibe_ID .)
    ,               reduce using rule 130 (varcte -> recibe_ID .)


state 126

    (116) termino -> factor . checaroperador5
    (117) checaroperador5 -> . masop
    (118) checaroperador5 -> .
    (119) masop -> . push_td termino
    (120) masop -> .
    (121) push_td -> . *
    (122) push_td -> . /

  ! reduce/reduce conflict for + resolved using rule 118 (checaroperador5 -> .)
  ! reduce/reduce conflict for - resolved using rule 118 (checaroperador5 -> .)
  ! reduce/reduce conflict for > resolved using rule 118 (checaroperador5 -> .)
  ! reduce/reduce conflict for < resolved using rule 118 (checaroperador5 -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 118 (checaroperador5 -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 118 (checaroperador5 -> .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 118 (checaroperador5 -> .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 118 (checaroperador5 -> .)
  ! reduce/reduce conflict for | resolved using rule 118 (checaroperador5 -> .)
  ! reduce/reduce conflict for COAND resolved using rule 118 (checaroperador5 -> .)
  ! reduce/reduce conflict for ) resolved using rule 118 (checaroperador5 -> .)
  ! reduce/reduce conflict for ; resolved using rule 118 (checaroperador5 -> .)
  ! reduce/reduce conflict for , resolved using rule 118 (checaroperador5 -> .)
    +               reduce using rule 118 (checaroperador5 -> .)
    -               reduce using rule 118 (checaroperador5 -> .)
    >               reduce using rule 118 (checaroperador5 -> .)
    <               reduce using rule 118 (checaroperador5 -> .)
    MENORIGUAL      reduce using rule 118 (checaroperador5 -> .)
    MAYORIGUAL      reduce using rule 118 (checaroperador5 -> .)
    IGUALIGUAL      reduce using rule 118 (checaroperador5 -> .)
    DIFERENTE       reduce using rule 118 (checaroperador5 -> .)
    |               reduce using rule 118 (checaroperador5 -> .)
    COAND           reduce using rule 118 (checaroperador5 -> .)
    )               reduce using rule 118 (checaroperador5 -> .)
    ;               reduce using rule 118 (checaroperador5 -> .)
    ,               reduce using rule 118 (checaroperador5 -> .)
    *               shift and go to state 152
    /               shift and go to state 153

  ! +               [ reduce using rule 120 (masop -> .) ]
  ! -               [ reduce using rule 120 (masop -> .) ]
  ! >               [ reduce using rule 120 (masop -> .) ]
  ! <               [ reduce using rule 120 (masop -> .) ]
  ! MENORIGUAL      [ reduce using rule 120 (masop -> .) ]
  ! MAYORIGUAL      [ reduce using rule 120 (masop -> .) ]
  ! IGUALIGUAL      [ reduce using rule 120 (masop -> .) ]
  ! DIFERENTE       [ reduce using rule 120 (masop -> .) ]
  ! |               [ reduce using rule 120 (masop -> .) ]
  ! COAND           [ reduce using rule 120 (masop -> .) ]
  ! )               [ reduce using rule 120 (masop -> .) ]
  ! ;               [ reduce using rule 120 (masop -> .) ]
  ! ,               [ reduce using rule 120 (masop -> .) ]

    masop                          shift and go to state 154
    push_td                        shift and go to state 156
    checaroperador5                shift and go to state 155

state 127

    (135) recibe_ID -> ID .

    *               reduce using rule 135 (recibe_ID -> ID .)
    /               reduce using rule 135 (recibe_ID -> ID .)
    +               reduce using rule 135 (recibe_ID -> ID .)
    -               reduce using rule 135 (recibe_ID -> ID .)
    ,               reduce using rule 135 (recibe_ID -> ID .)
    )               reduce using rule 135 (recibe_ID -> ID .)
    >               reduce using rule 135 (recibe_ID -> ID .)
    <               reduce using rule 135 (recibe_ID -> ID .)
    MENORIGUAL      reduce using rule 135 (recibe_ID -> ID .)
    MAYORIGUAL      reduce using rule 135 (recibe_ID -> ID .)
    IGUALIGUAL      reduce using rule 135 (recibe_ID -> ID .)
    DIFERENTE       reduce using rule 135 (recibe_ID -> ID .)
    |               reduce using rule 135 (recibe_ID -> ID .)
    COAND           reduce using rule 135 (recibe_ID -> ID .)
    ;               reduce using rule 135 (recibe_ID -> ID .)


state 128

    (84) condicion -> IF ( expresion . ) checarIF bloqueCond finPilaSaltos
    (85) condicion -> IF ( expresion . ) checarIF bloqueCond checarElse finPilaSaltos

    )               shift and go to state 157


state 129

    (139) recibe_FALSE -> FALSE .

    *               reduce using rule 139 (recibe_FALSE -> FALSE .)
    /               reduce using rule 139 (recibe_FALSE -> FALSE .)
    +               reduce using rule 139 (recibe_FALSE -> FALSE .)
    -               reduce using rule 139 (recibe_FALSE -> FALSE .)
    >               reduce using rule 139 (recibe_FALSE -> FALSE .)
    <               reduce using rule 139 (recibe_FALSE -> FALSE .)
    MENORIGUAL      reduce using rule 139 (recibe_FALSE -> FALSE .)
    MAYORIGUAL      reduce using rule 139 (recibe_FALSE -> FALSE .)
    IGUALIGUAL      reduce using rule 139 (recibe_FALSE -> FALSE .)
    DIFERENTE       reduce using rule 139 (recibe_FALSE -> FALSE .)
    |               reduce using rule 139 (recibe_FALSE -> FALSE .)
    COAND           reduce using rule 139 (recibe_FALSE -> FALSE .)
    )               reduce using rule 139 (recibe_FALSE -> FALSE .)
    ;               reduce using rule 139 (recibe_FALSE -> FALSE .)
    ,               reduce using rule 139 (recibe_FALSE -> FALSE .)


state 130

    (132) varcte -> recibe_CTI .

    *               reduce using rule 132 (varcte -> recibe_CTI .)
    /               reduce using rule 132 (varcte -> recibe_CTI .)
    +               reduce using rule 132 (varcte -> recibe_CTI .)
    -               reduce using rule 132 (varcte -> recibe_CTI .)
    ;               reduce using rule 132 (varcte -> recibe_CTI .)
    >               reduce using rule 132 (varcte -> recibe_CTI .)
    <               reduce using rule 132 (varcte -> recibe_CTI .)
    MENORIGUAL      reduce using rule 132 (varcte -> recibe_CTI .)
    MAYORIGUAL      reduce using rule 132 (varcte -> recibe_CTI .)
    IGUALIGUAL      reduce using rule 132 (varcte -> recibe_CTI .)
    DIFERENTE       reduce using rule 132 (varcte -> recibe_CTI .)
    |               reduce using rule 132 (varcte -> recibe_CTI .)
    COAND           reduce using rule 132 (varcte -> recibe_CTI .)
    )               reduce using rule 132 (varcte -> recibe_CTI .)
    ,               reduce using rule 132 (varcte -> recibe_CTI .)


state 131

    (94) expresion -> exp . operacionLogica checaoperador6
    (95) expresion -> exp .
    (104) operacionLogica -> . push_logica exp
    (105) operacionLogica -> .
    (96) push_logica -> . >
    (97) push_logica -> . <
    (98) push_logica -> . MENORIGUAL
    (99) push_logica -> . MAYORIGUAL
    (100) push_logica -> . IGUALIGUAL
    (101) push_logica -> . DIFERENTE
    (102) push_logica -> . |
    (103) push_logica -> . COAND

  ! reduce/reduce conflict for ) resolved using rule 95 (expresion -> exp .)
    )               reduce using rule 95 (expresion -> exp .)
    >               shift and go to state 167
    <               shift and go to state 166
    MENORIGUAL      shift and go to state 165
    MAYORIGUAL      shift and go to state 164
    IGUALIGUAL      shift and go to state 161
    DIFERENTE       shift and go to state 160
    |               shift and go to state 159
    COAND           shift and go to state 158

  ! )               [ reduce using rule 105 (operacionLogica -> .) ]

    operacionLogica                shift and go to state 162
    push_logica                    shift and go to state 163

state 132

    (123) factor -> fondoFalso . expresion finFondoFalso
    (94) expresion -> . exp operacionLogica checaoperador6
    (95) expresion -> . exp
    (107) exp -> . termino checaroperador4
    (116) termino -> . factor checaroperador5
    (123) factor -> . fondoFalso expresion finFondoFalso
    (124) factor -> . varcte
    (108) fondoFalso -> . (
    (130) varcte -> . recibe_ID
    (131) varcte -> . recibe_CTF
    (132) varcte -> . recibe_CTI
    (133) varcte -> . recibe_TRUE
    (134) varcte -> . recibe_FALSE
    (135) recibe_ID -> . ID
    (136) recibe_CTF -> . CTF
    (137) recibe_CTI -> . CTI
    (138) recibe_TRUE -> . TRUE
    (139) recibe_FALSE -> . FALSE

    (               shift and go to state 124
    ID              shift and go to state 127
    CTF             shift and go to state 117
    CTI             shift and go to state 120
    TRUE            shift and go to state 119
    FALSE           shift and go to state 129

    expresion                      shift and go to state 168
    recibe_TRUE                    shift and go to state 121
    exp                            shift and go to state 131
    recibe_CTF                     shift and go to state 123
    recibe_CTI                     shift and go to state 130
    varcte                         shift and go to state 122
    factor                         shift and go to state 126
    recibe_ID                      shift and go to state 125
    termino                        shift and go to state 118
    fondoFalso                     shift and go to state 132
    recibe_FALSE                   shift and go to state 133

state 133

    (134) varcte -> recibe_FALSE .

    *               reduce using rule 134 (varcte -> recibe_FALSE .)
    /               reduce using rule 134 (varcte -> recibe_FALSE .)
    +               reduce using rule 134 (varcte -> recibe_FALSE .)
    -               reduce using rule 134 (varcte -> recibe_FALSE .)
    ;               reduce using rule 134 (varcte -> recibe_FALSE .)
    >               reduce using rule 134 (varcte -> recibe_FALSE .)
    <               reduce using rule 134 (varcte -> recibe_FALSE .)
    MENORIGUAL      reduce using rule 134 (varcte -> recibe_FALSE .)
    MAYORIGUAL      reduce using rule 134 (varcte -> recibe_FALSE .)
    IGUALIGUAL      reduce using rule 134 (varcte -> recibe_FALSE .)
    DIFERENTE       reduce using rule 134 (varcte -> recibe_FALSE .)
    |               reduce using rule 134 (varcte -> recibe_FALSE .)
    COAND           reduce using rule 134 (varcte -> recibe_FALSE .)
    )               reduce using rule 134 (varcte -> recibe_FALSE .)
    ,               reduce using rule 134 (varcte -> recibe_FALSE .)


state 134

    (72) lectura -> LEER guardarToken ID . guardarIDPila checarLectura opcionesLectura ;
    (62) guardarIDPila -> .

    [               reduce using rule 62 (guardarIDPila -> .)
    ;               reduce using rule 62 (guardarIDPila -> .)

    guardarIDPila                  shift and go to state 169

state 135

    (78) escritura -> DIBUJAR guardarToken ( . guardarParametros ) ;
    (76) guardarParametros -> . ID guardarIDPila pos color checarDibujar

    ID              shift and go to state 171

    guardarParametros              shift and go to state 170

state 136

    (29) maspaID -> , param .

    )               reduce using rule 29 (maspaID -> , param .)


state 137

    (31) bloquefunc -> { vars guardarCuadruplo . estatuto regresa } liberarVar
    (32) bloquefunc -> { vars guardarCuadruplo . regresa } liberarVar
    (38) estatuto -> . asignacion estatutoAux
    (39) estatuto -> . escritura estatutoAux
    (40) estatuto -> . condicion estatutoAux
    (41) estatuto -> . lectura estatutoAux
    (42) estatuto -> . whiles estatutoAux
    (43) estatuto -> . funcs estatutoAux
    (37) regresa -> . RETURN ID
    (60) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (61) asignacion -> . ID ;
    (78) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (79) escritura -> . mueve
    (84) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (85) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse finPilaSaltos
    (72) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (126) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (48) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (49) funcs -> . ID
    (149) mueve -> . MUEVE guardarToken opcionMue

    RETURN          shift and go to state 172
    ID              shift and go to state 71
    DIBUJAR         shift and go to state 75
    IF              shift and go to state 72
    LEER            shift and go to state 73
    WHILE           shift and go to state 64
    MUEVE           shift and go to state 65

    funcs                          shift and go to state 63
    estatuto                       shift and go to state 173
    mueve                          shift and go to state 67
    condicion                      shift and go to state 68
    lectura                        shift and go to state 69
    whiles                         shift and go to state 70
    asignacion                     shift and go to state 74
    regresa                        shift and go to state 174
    escritura                      shift and go to state 77

state 138

    (33) bloquefunc -> { guardarCuadruplo escritura . regresa } liberarVar
    (37) regresa -> . RETURN ID

    RETURN          shift and go to state 172

    regresa                        shift and go to state 175

state 139

    (126) whiles -> WHILE checarWhile ( expresion . ) checarContenido bloqueCond finPilaSaltosWhile

    )               shift and go to state 176


state 140

    (150) opcionMue -> direccion ID . guardarIDPila recibe_CTI checarMover ;
    (62) guardarIDPila -> .

    CTI             reduce using rule 62 (guardarIDPila -> .)

    guardarIDPila                  shift and go to state 177

state 141

    (60) asignacion -> ID guardarIDPila opcionAsignacion valorAsig . ; checarOperadorIgual

    ;               shift and go to state 178


state 142

    (67) valorAsig -> = . exp
    (68) valorAsig -> = . funcs
    (107) exp -> . termino checaroperador4
    (48) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (49) funcs -> . ID
    (116) termino -> . factor checaroperador5
    (123) factor -> . fondoFalso expresion finFondoFalso
    (124) factor -> . varcte
    (108) fondoFalso -> . (
    (130) varcte -> . recibe_ID
    (131) varcte -> . recibe_CTF
    (132) varcte -> . recibe_CTI
    (133) varcte -> . recibe_TRUE
    (134) varcte -> . recibe_FALSE
    (135) recibe_ID -> . ID
    (136) recibe_CTF -> . CTF
    (137) recibe_CTI -> . CTI
    (138) recibe_TRUE -> . TRUE
    (139) recibe_FALSE -> . FALSE

    ID              shift and go to state 180
    (               shift and go to state 124
    CTF             shift and go to state 117
    CTI             shift and go to state 120
    TRUE            shift and go to state 119
    FALSE           shift and go to state 129

    funcs                          shift and go to state 179
    recibe_TRUE                    shift and go to state 121
    recibe_CTF                     shift and go to state 123
    recibe_CTI                     shift and go to state 130
    varcte                         shift and go to state 122
    recibe_ID                      shift and go to state 125
    termino                        shift and go to state 118
    exp                            shift and go to state 181
    factor                         shift and go to state 126
    recibe_FALSE                   shift and go to state 133
    fondoFalso                     shift and go to state 132

state 143

    (69) valorAsig -> empty .

    ;               reduce using rule 69 (valorAsig -> empty .)


state 144

    (64) opcionAsignacion -> [ CTI . ]
    (65) opcionAsignacion -> [ CTI . ] [ CTI ]

    ]               shift and go to state 182


state 145

    (52) generarERA -> ( .

    (               reduce using rule 52 (generarERA -> ( .)
    ID              reduce using rule 52 (generarERA -> ( .)
    CTF             reduce using rule 52 (generarERA -> ( .)
    CTI             reduce using rule 52 (generarERA -> ( .)
    TRUE            reduce using rule 52 (generarERA -> ( .)
    FALSE           reduce using rule 52 (generarERA -> ( .)


state 146

    (48) funcs -> ID guardarIDFunc verProc generarERA . auxExp checaNumParam generaGOSUB
    (53) auxExp -> . listaExp llegaComa
    (54) auxExp -> . listaExp
    (57) listaExp -> . exp verificarTiposFunc masExps
    (107) exp -> . termino checaroperador4
    (116) termino -> . factor checaroperador5
    (123) factor -> . fondoFalso expresion finFondoFalso
    (124) factor -> . varcte
    (108) fondoFalso -> . (
    (130) varcte -> . recibe_ID
    (131) varcte -> . recibe_CTF
    (132) varcte -> . recibe_CTI
    (133) varcte -> . recibe_TRUE
    (134) varcte -> . recibe_FALSE
    (135) recibe_ID -> . ID
    (136) recibe_CTF -> . CTF
    (137) recibe_CTI -> . CTI
    (138) recibe_TRUE -> . TRUE
    (139) recibe_FALSE -> . FALSE

    (               shift and go to state 124
    ID              shift and go to state 127
    CTF             shift and go to state 117
    CTI             shift and go to state 120
    TRUE            shift and go to state 119
    FALSE           shift and go to state 129

    listaExp                       shift and go to state 183
    termino                        shift and go to state 118
    recibe_TRUE                    shift and go to state 121
    varcte                         shift and go to state 122
    recibe_CTF                     shift and go to state 123
    recibe_CTI                     shift and go to state 130
    recibe_ID                      shift and go to state 125
    factor                         shift and go to state 126
    exp                            shift and go to state 184
    auxExp                         shift and go to state 185
    fondoFalso                     shift and go to state 132
    recibe_FALSE                   shift and go to state 133

state 147

    (114) push_pm -> + .

    (               reduce using rule 114 (push_pm -> + .)
    ID              reduce using rule 114 (push_pm -> + .)
    CTF             reduce using rule 114 (push_pm -> + .)
    CTI             reduce using rule 114 (push_pm -> + .)
    TRUE            reduce using rule 114 (push_pm -> + .)
    FALSE           reduce using rule 114 (push_pm -> + .)


state 148

    (110) checaroperador4 -> signo .

    >               reduce using rule 110 (checaroperador4 -> signo .)
    <               reduce using rule 110 (checaroperador4 -> signo .)
    MENORIGUAL      reduce using rule 110 (checaroperador4 -> signo .)
    MAYORIGUAL      reduce using rule 110 (checaroperador4 -> signo .)
    IGUALIGUAL      reduce using rule 110 (checaroperador4 -> signo .)
    DIFERENTE       reduce using rule 110 (checaroperador4 -> signo .)
    |               reduce using rule 110 (checaroperador4 -> signo .)
    COAND           reduce using rule 110 (checaroperador4 -> signo .)
    )               reduce using rule 110 (checaroperador4 -> signo .)
    ;               reduce using rule 110 (checaroperador4 -> signo .)
    ,               reduce using rule 110 (checaroperador4 -> signo .)


state 149

    (115) push_pm -> - .

    (               reduce using rule 115 (push_pm -> - .)
    ID              reduce using rule 115 (push_pm -> - .)
    CTF             reduce using rule 115 (push_pm -> - .)
    CTI             reduce using rule 115 (push_pm -> - .)
    TRUE            reduce using rule 115 (push_pm -> - .)
    FALSE           reduce using rule 115 (push_pm -> - .)


state 150

    (107) exp -> termino checaroperador4 .

    ,               reduce using rule 107 (exp -> termino checaroperador4 .)
    )               reduce using rule 107 (exp -> termino checaroperador4 .)
    >               reduce using rule 107 (exp -> termino checaroperador4 .)
    <               reduce using rule 107 (exp -> termino checaroperador4 .)
    MENORIGUAL      reduce using rule 107 (exp -> termino checaroperador4 .)
    MAYORIGUAL      reduce using rule 107 (exp -> termino checaroperador4 .)
    IGUALIGUAL      reduce using rule 107 (exp -> termino checaroperador4 .)
    DIFERENTE       reduce using rule 107 (exp -> termino checaroperador4 .)
    |               reduce using rule 107 (exp -> termino checaroperador4 .)
    COAND           reduce using rule 107 (exp -> termino checaroperador4 .)
    ;               reduce using rule 107 (exp -> termino checaroperador4 .)


state 151

    (112) signo -> push_pm . exp
    (107) exp -> . termino checaroperador4
    (116) termino -> . factor checaroperador5
    (123) factor -> . fondoFalso expresion finFondoFalso
    (124) factor -> . varcte
    (108) fondoFalso -> . (
    (130) varcte -> . recibe_ID
    (131) varcte -> . recibe_CTF
    (132) varcte -> . recibe_CTI
    (133) varcte -> . recibe_TRUE
    (134) varcte -> . recibe_FALSE
    (135) recibe_ID -> . ID
    (136) recibe_CTF -> . CTF
    (137) recibe_CTI -> . CTI
    (138) recibe_TRUE -> . TRUE
    (139) recibe_FALSE -> . FALSE

    (               shift and go to state 124
    ID              shift and go to state 127
    CTF             shift and go to state 117
    CTI             shift and go to state 120
    TRUE            shift and go to state 119
    FALSE           shift and go to state 129

    varcte                         shift and go to state 122
    recibe_TRUE                    shift and go to state 121
    exp                            shift and go to state 186
    recibe_CTF                     shift and go to state 123
    recibe_CTI                     shift and go to state 130
    recibe_ID                      shift and go to state 125
    termino                        shift and go to state 118
    factor                         shift and go to state 126
    recibe_FALSE                   shift and go to state 133
    fondoFalso                     shift and go to state 132

state 152

    (121) push_td -> * .

    (               reduce using rule 121 (push_td -> * .)
    ID              reduce using rule 121 (push_td -> * .)
    CTF             reduce using rule 121 (push_td -> * .)
    CTI             reduce using rule 121 (push_td -> * .)
    TRUE            reduce using rule 121 (push_td -> * .)
    FALSE           reduce using rule 121 (push_td -> * .)


state 153

    (122) push_td -> / .

    (               reduce using rule 122 (push_td -> / .)
    ID              reduce using rule 122 (push_td -> / .)
    CTF             reduce using rule 122 (push_td -> / .)
    CTI             reduce using rule 122 (push_td -> / .)
    TRUE            reduce using rule 122 (push_td -> / .)
    FALSE           reduce using rule 122 (push_td -> / .)


state 154

    (117) checaroperador5 -> masop .

    +               reduce using rule 117 (checaroperador5 -> masop .)
    -               reduce using rule 117 (checaroperador5 -> masop .)
    >               reduce using rule 117 (checaroperador5 -> masop .)
    <               reduce using rule 117 (checaroperador5 -> masop .)
    MENORIGUAL      reduce using rule 117 (checaroperador5 -> masop .)
    MAYORIGUAL      reduce using rule 117 (checaroperador5 -> masop .)
    IGUALIGUAL      reduce using rule 117 (checaroperador5 -> masop .)
    DIFERENTE       reduce using rule 117 (checaroperador5 -> masop .)
    |               reduce using rule 117 (checaroperador5 -> masop .)
    COAND           reduce using rule 117 (checaroperador5 -> masop .)
    )               reduce using rule 117 (checaroperador5 -> masop .)
    ;               reduce using rule 117 (checaroperador5 -> masop .)
    ,               reduce using rule 117 (checaroperador5 -> masop .)


state 155

    (116) termino -> factor checaroperador5 .

    +               reduce using rule 116 (termino -> factor checaroperador5 .)
    -               reduce using rule 116 (termino -> factor checaroperador5 .)
    >               reduce using rule 116 (termino -> factor checaroperador5 .)
    <               reduce using rule 116 (termino -> factor checaroperador5 .)
    MENORIGUAL      reduce using rule 116 (termino -> factor checaroperador5 .)
    MAYORIGUAL      reduce using rule 116 (termino -> factor checaroperador5 .)
    IGUALIGUAL      reduce using rule 116 (termino -> factor checaroperador5 .)
    DIFERENTE       reduce using rule 116 (termino -> factor checaroperador5 .)
    |               reduce using rule 116 (termino -> factor checaroperador5 .)
    COAND           reduce using rule 116 (termino -> factor checaroperador5 .)
    )               reduce using rule 116 (termino -> factor checaroperador5 .)
    ;               reduce using rule 116 (termino -> factor checaroperador5 .)
    ,               reduce using rule 116 (termino -> factor checaroperador5 .)


state 156

    (119) masop -> push_td . termino
    (116) termino -> . factor checaroperador5
    (123) factor -> . fondoFalso expresion finFondoFalso
    (124) factor -> . varcte
    (108) fondoFalso -> . (
    (130) varcte -> . recibe_ID
    (131) varcte -> . recibe_CTF
    (132) varcte -> . recibe_CTI
    (133) varcte -> . recibe_TRUE
    (134) varcte -> . recibe_FALSE
    (135) recibe_ID -> . ID
    (136) recibe_CTF -> . CTF
    (137) recibe_CTI -> . CTI
    (138) recibe_TRUE -> . TRUE
    (139) recibe_FALSE -> . FALSE

    (               shift and go to state 124
    ID              shift and go to state 127
    CTF             shift and go to state 117
    CTI             shift and go to state 120
    TRUE            shift and go to state 119
    FALSE           shift and go to state 129

    recibe_TRUE                    shift and go to state 121
    varcte                         shift and go to state 122
    recibe_CTF                     shift and go to state 123
    recibe_CTI                     shift and go to state 130
    recibe_ID                      shift and go to state 125
    termino                        shift and go to state 187
    factor                         shift and go to state 126
    recibe_FALSE                   shift and go to state 133
    fondoFalso                     shift and go to state 132

state 157

    (84) condicion -> IF ( expresion ) . checarIF bloqueCond finPilaSaltos
    (85) condicion -> IF ( expresion ) . checarIF bloqueCond checarElse finPilaSaltos
    (91) checarIF -> .

    {               reduce using rule 91 (checarIF -> .)

    checarIF                       shift and go to state 188

state 158

    (103) push_logica -> COAND .

    (               reduce using rule 103 (push_logica -> COAND .)
    ID              reduce using rule 103 (push_logica -> COAND .)
    CTF             reduce using rule 103 (push_logica -> COAND .)
    CTI             reduce using rule 103 (push_logica -> COAND .)
    TRUE            reduce using rule 103 (push_logica -> COAND .)
    FALSE           reduce using rule 103 (push_logica -> COAND .)


state 159

    (102) push_logica -> | .

    (               reduce using rule 102 (push_logica -> | .)
    ID              reduce using rule 102 (push_logica -> | .)
    CTF             reduce using rule 102 (push_logica -> | .)
    CTI             reduce using rule 102 (push_logica -> | .)
    TRUE            reduce using rule 102 (push_logica -> | .)
    FALSE           reduce using rule 102 (push_logica -> | .)


state 160

    (101) push_logica -> DIFERENTE .

    (               reduce using rule 101 (push_logica -> DIFERENTE .)
    ID              reduce using rule 101 (push_logica -> DIFERENTE .)
    CTF             reduce using rule 101 (push_logica -> DIFERENTE .)
    CTI             reduce using rule 101 (push_logica -> DIFERENTE .)
    TRUE            reduce using rule 101 (push_logica -> DIFERENTE .)
    FALSE           reduce using rule 101 (push_logica -> DIFERENTE .)


state 161

    (100) push_logica -> IGUALIGUAL .

    (               reduce using rule 100 (push_logica -> IGUALIGUAL .)
    ID              reduce using rule 100 (push_logica -> IGUALIGUAL .)
    CTF             reduce using rule 100 (push_logica -> IGUALIGUAL .)
    CTI             reduce using rule 100 (push_logica -> IGUALIGUAL .)
    TRUE            reduce using rule 100 (push_logica -> IGUALIGUAL .)
    FALSE           reduce using rule 100 (push_logica -> IGUALIGUAL .)


state 162

    (94) expresion -> exp operacionLogica . checaoperador6
    (106) checaoperador6 -> .

    )               reduce using rule 106 (checaoperador6 -> .)

    checaoperador6                 shift and go to state 189

state 163

    (104) operacionLogica -> push_logica . exp
    (107) exp -> . termino checaroperador4
    (116) termino -> . factor checaroperador5
    (123) factor -> . fondoFalso expresion finFondoFalso
    (124) factor -> . varcte
    (108) fondoFalso -> . (
    (130) varcte -> . recibe_ID
    (131) varcte -> . recibe_CTF
    (132) varcte -> . recibe_CTI
    (133) varcte -> . recibe_TRUE
    (134) varcte -> . recibe_FALSE
    (135) recibe_ID -> . ID
    (136) recibe_CTF -> . CTF
    (137) recibe_CTI -> . CTI
    (138) recibe_TRUE -> . TRUE
    (139) recibe_FALSE -> . FALSE

    (               shift and go to state 124
    ID              shift and go to state 127
    CTF             shift and go to state 117
    CTI             shift and go to state 120
    TRUE            shift and go to state 119
    FALSE           shift and go to state 129

    varcte                         shift and go to state 122
    recibe_TRUE                    shift and go to state 121
    exp                            shift and go to state 190
    recibe_CTF                     shift and go to state 123
    recibe_CTI                     shift and go to state 130
    recibe_ID                      shift and go to state 125
    termino                        shift and go to state 118
    factor                         shift and go to state 126
    recibe_FALSE                   shift and go to state 133
    fondoFalso                     shift and go to state 132

state 164

    (99) push_logica -> MAYORIGUAL .

    (               reduce using rule 99 (push_logica -> MAYORIGUAL .)
    ID              reduce using rule 99 (push_logica -> MAYORIGUAL .)
    CTF             reduce using rule 99 (push_logica -> MAYORIGUAL .)
    CTI             reduce using rule 99 (push_logica -> MAYORIGUAL .)
    TRUE            reduce using rule 99 (push_logica -> MAYORIGUAL .)
    FALSE           reduce using rule 99 (push_logica -> MAYORIGUAL .)


state 165

    (98) push_logica -> MENORIGUAL .

    (               reduce using rule 98 (push_logica -> MENORIGUAL .)
    ID              reduce using rule 98 (push_logica -> MENORIGUAL .)
    CTF             reduce using rule 98 (push_logica -> MENORIGUAL .)
    CTI             reduce using rule 98 (push_logica -> MENORIGUAL .)
    TRUE            reduce using rule 98 (push_logica -> MENORIGUAL .)
    FALSE           reduce using rule 98 (push_logica -> MENORIGUAL .)


state 166

    (97) push_logica -> < .

    (               reduce using rule 97 (push_logica -> < .)
    ID              reduce using rule 97 (push_logica -> < .)
    CTF             reduce using rule 97 (push_logica -> < .)
    CTI             reduce using rule 97 (push_logica -> < .)
    TRUE            reduce using rule 97 (push_logica -> < .)
    FALSE           reduce using rule 97 (push_logica -> < .)


state 167

    (96) push_logica -> > .

    (               reduce using rule 96 (push_logica -> > .)
    ID              reduce using rule 96 (push_logica -> > .)
    CTF             reduce using rule 96 (push_logica -> > .)
    CTI             reduce using rule 96 (push_logica -> > .)
    TRUE            reduce using rule 96 (push_logica -> > .)
    FALSE           reduce using rule 96 (push_logica -> > .)


state 168

    (123) factor -> fondoFalso expresion . finFondoFalso
    (109) finFondoFalso -> . )

    )               shift and go to state 191

    finFondoFalso                  shift and go to state 192

state 169

    (72) lectura -> LEER guardarToken ID guardarIDPila . checarLectura opcionesLectura ;
    (71) checarLectura -> .

    [               reduce using rule 71 (checarLectura -> .)
    ;               reduce using rule 71 (checarLectura -> .)

    checarLectura                  shift and go to state 193

state 170

    (78) escritura -> DIBUJAR guardarToken ( guardarParametros . ) ;

    )               shift and go to state 194


state 171

    (76) guardarParametros -> ID . guardarIDPila pos color checarDibujar
    (62) guardarIDPila -> .

    (               reduce using rule 62 (guardarIDPila -> .)

    guardarIDPila                  shift and go to state 195

state 172

    (37) regresa -> RETURN . ID

    ID              shift and go to state 196


state 173

    (31) bloquefunc -> { vars guardarCuadruplo estatuto . regresa } liberarVar
    (37) regresa -> . RETURN ID

    RETURN          shift and go to state 172

    regresa                        shift and go to state 197

state 174

    (32) bloquefunc -> { vars guardarCuadruplo regresa . } liberarVar

    }               shift and go to state 198


state 175

    (33) bloquefunc -> { guardarCuadruplo escritura regresa . } liberarVar

    }               shift and go to state 199


state 176

    (126) whiles -> WHILE checarWhile ( expresion ) . checarContenido bloqueCond finPilaSaltosWhile
    (128) checarContenido -> .

    {               reduce using rule 128 (checarContenido -> .)

    checarContenido                shift and go to state 200

state 177

    (150) opcionMue -> direccion ID guardarIDPila . recibe_CTI checarMover ;
    (137) recibe_CTI -> . CTI

    CTI             shift and go to state 120

    recibe_CTI                     shift and go to state 201

state 178

    (60) asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; . checarOperadorIgual
    (63) checarOperadorIgual -> .

    ID              reduce using rule 63 (checarOperadorIgual -> .)
    DIBUJAR         reduce using rule 63 (checarOperadorIgual -> .)
    IF              reduce using rule 63 (checarOperadorIgual -> .)
    LEER            reduce using rule 63 (checarOperadorIgual -> .)
    WHILE           reduce using rule 63 (checarOperadorIgual -> .)
    MUEVE           reduce using rule 63 (checarOperadorIgual -> .)
    }               reduce using rule 63 (checarOperadorIgual -> .)
    RETURN          reduce using rule 63 (checarOperadorIgual -> .)

    checarOperadorIgual            shift and go to state 202

state 179

    (68) valorAsig -> = funcs .

    ;               reduce using rule 68 (valorAsig -> = funcs .)


state 180

    (48) funcs -> ID . guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (49) funcs -> ID .
    (135) recibe_ID -> ID .
    (50) guardarIDFunc -> .

  ! reduce/reduce conflict for ; resolved using rule 49 (funcs -> ID .)
    ;               reduce using rule 49 (funcs -> ID .)
    *               reduce using rule 135 (recibe_ID -> ID .)
    /               reduce using rule 135 (recibe_ID -> ID .)
    +               reduce using rule 135 (recibe_ID -> ID .)
    -               reduce using rule 135 (recibe_ID -> ID .)
    (               reduce using rule 50 (guardarIDFunc -> .)

  ! ;               [ reduce using rule 135 (recibe_ID -> ID .) ]

    guardarIDFunc                  shift and go to state 92

state 181

    (67) valorAsig -> = exp .

    ;               reduce using rule 67 (valorAsig -> = exp .)


state 182

    (64) opcionAsignacion -> [ CTI ] .
    (65) opcionAsignacion -> [ CTI ] . [ CTI ]

    =               reduce using rule 64 (opcionAsignacion -> [ CTI ] .)
    ;               reduce using rule 64 (opcionAsignacion -> [ CTI ] .)
    [               shift and go to state 203


state 183

    (53) auxExp -> listaExp . llegaComa
    (54) auxExp -> listaExp .
    (55) llegaComa -> . ,

    )               reduce using rule 54 (auxExp -> listaExp .)
    ,               shift and go to state 205

    llegaComa                      shift and go to state 204

state 184

    (57) listaExp -> exp . verificarTiposFunc masExps
    (56) verificarTiposFunc -> .

    ,               reduce using rule 56 (verificarTiposFunc -> .)
    )               reduce using rule 56 (verificarTiposFunc -> .)

    verificarTiposFunc             shift and go to state 206

state 185

    (48) funcs -> ID guardarIDFunc verProc generarERA auxExp . checaNumParam generaGOSUB
    (46) checaNumParam -> . )

    )               shift and go to state 207

    checaNumParam                  shift and go to state 208

state 186

    (112) signo -> push_pm exp .

    >               reduce using rule 112 (signo -> push_pm exp .)
    <               reduce using rule 112 (signo -> push_pm exp .)
    MENORIGUAL      reduce using rule 112 (signo -> push_pm exp .)
    MAYORIGUAL      reduce using rule 112 (signo -> push_pm exp .)
    IGUALIGUAL      reduce using rule 112 (signo -> push_pm exp .)
    DIFERENTE       reduce using rule 112 (signo -> push_pm exp .)
    |               reduce using rule 112 (signo -> push_pm exp .)
    COAND           reduce using rule 112 (signo -> push_pm exp .)
    )               reduce using rule 112 (signo -> push_pm exp .)
    ;               reduce using rule 112 (signo -> push_pm exp .)
    ,               reduce using rule 112 (signo -> push_pm exp .)


state 187

    (119) masop -> push_td termino .

    +               reduce using rule 119 (masop -> push_td termino .)
    -               reduce using rule 119 (masop -> push_td termino .)
    >               reduce using rule 119 (masop -> push_td termino .)
    <               reduce using rule 119 (masop -> push_td termino .)
    MENORIGUAL      reduce using rule 119 (masop -> push_td termino .)
    MAYORIGUAL      reduce using rule 119 (masop -> push_td termino .)
    IGUALIGUAL      reduce using rule 119 (masop -> push_td termino .)
    DIFERENTE       reduce using rule 119 (masop -> push_td termino .)
    |               reduce using rule 119 (masop -> push_td termino .)
    COAND           reduce using rule 119 (masop -> push_td termino .)
    )               reduce using rule 119 (masop -> push_td termino .)
    ;               reduce using rule 119 (masop -> push_td termino .)
    ,               reduce using rule 119 (masop -> push_td termino .)


state 188

    (84) condicion -> IF ( expresion ) checarIF . bloqueCond finPilaSaltos
    (85) condicion -> IF ( expresion ) checarIF . bloqueCond checarElse finPilaSaltos
    (86) bloqueCond -> . { estatuto regresaCond }
    (87) bloqueCond -> . { regresaCond }
    (88) bloqueCond -> . { }

    {               shift and go to state 209

    bloqueCond                     shift and go to state 210

state 189

    (94) expresion -> exp operacionLogica checaoperador6 .

    )               reduce using rule 94 (expresion -> exp operacionLogica checaoperador6 .)


state 190

    (104) operacionLogica -> push_logica exp .

    )               reduce using rule 104 (operacionLogica -> push_logica exp .)


state 191

    (109) finFondoFalso -> ) .

    *               reduce using rule 109 (finFondoFalso -> ) .)
    /               reduce using rule 109 (finFondoFalso -> ) .)
    +               reduce using rule 109 (finFondoFalso -> ) .)
    -               reduce using rule 109 (finFondoFalso -> ) .)
    >               reduce using rule 109 (finFondoFalso -> ) .)
    <               reduce using rule 109 (finFondoFalso -> ) .)
    MENORIGUAL      reduce using rule 109 (finFondoFalso -> ) .)
    MAYORIGUAL      reduce using rule 109 (finFondoFalso -> ) .)
    IGUALIGUAL      reduce using rule 109 (finFondoFalso -> ) .)
    DIFERENTE       reduce using rule 109 (finFondoFalso -> ) .)
    |               reduce using rule 109 (finFondoFalso -> ) .)
    COAND           reduce using rule 109 (finFondoFalso -> ) .)
    )               reduce using rule 109 (finFondoFalso -> ) .)
    ;               reduce using rule 109 (finFondoFalso -> ) .)
    ,               reduce using rule 109 (finFondoFalso -> ) .)


state 192

    (123) factor -> fondoFalso expresion finFondoFalso .

    *               reduce using rule 123 (factor -> fondoFalso expresion finFondoFalso .)
    /               reduce using rule 123 (factor -> fondoFalso expresion finFondoFalso .)
    +               reduce using rule 123 (factor -> fondoFalso expresion finFondoFalso .)
    -               reduce using rule 123 (factor -> fondoFalso expresion finFondoFalso .)
    >               reduce using rule 123 (factor -> fondoFalso expresion finFondoFalso .)
    <               reduce using rule 123 (factor -> fondoFalso expresion finFondoFalso .)
    MENORIGUAL      reduce using rule 123 (factor -> fondoFalso expresion finFondoFalso .)
    MAYORIGUAL      reduce using rule 123 (factor -> fondoFalso expresion finFondoFalso .)
    IGUALIGUAL      reduce using rule 123 (factor -> fondoFalso expresion finFondoFalso .)
    DIFERENTE       reduce using rule 123 (factor -> fondoFalso expresion finFondoFalso .)
    |               reduce using rule 123 (factor -> fondoFalso expresion finFondoFalso .)
    COAND           reduce using rule 123 (factor -> fondoFalso expresion finFondoFalso .)
    )               reduce using rule 123 (factor -> fondoFalso expresion finFondoFalso .)
    ;               reduce using rule 123 (factor -> fondoFalso expresion finFondoFalso .)
    ,               reduce using rule 123 (factor -> fondoFalso expresion finFondoFalso .)


state 193

    (72) lectura -> LEER guardarToken ID guardarIDPila checarLectura . opcionesLectura ;
    (73) opcionesLectura -> . [ CTI ]
    (74) opcionesLectura -> . [ CTI ] [ CTI ]
    (75) opcionesLectura -> . empty
    (156) empty -> .

    [               shift and go to state 211
    ;               reduce using rule 156 (empty -> .)

    empty                          shift and go to state 213
    opcionesLectura                shift and go to state 212

state 194

    (78) escritura -> DIBUJAR guardarToken ( guardarParametros ) . ;

    ;               shift and go to state 214


state 195

    (76) guardarParametros -> ID guardarIDPila . pos color checarDibujar
    (125) pos -> . ( varcte , varcte )

    (               shift and go to state 215

    pos                            shift and go to state 216

state 196

    (37) regresa -> RETURN ID .

    }               reduce using rule 37 (regresa -> RETURN ID .)


state 197

    (31) bloquefunc -> { vars guardarCuadruplo estatuto regresa . } liberarVar

    }               shift and go to state 217


state 198

    (32) bloquefunc -> { vars guardarCuadruplo regresa } . liberarVar
    (35) liberarVar -> .

    FUNC            reduce using rule 35 (liberarVar -> .)
    INICIO          reduce using rule 35 (liberarVar -> .)

    liberarVar                     shift and go to state 218

state 199

    (33) bloquefunc -> { guardarCuadruplo escritura regresa } . liberarVar
    (35) liberarVar -> .

    FUNC            reduce using rule 35 (liberarVar -> .)
    INICIO          reduce using rule 35 (liberarVar -> .)

    liberarVar                     shift and go to state 219

state 200

    (126) whiles -> WHILE checarWhile ( expresion ) checarContenido . bloqueCond finPilaSaltosWhile
    (86) bloqueCond -> . { estatuto regresaCond }
    (87) bloqueCond -> . { regresaCond }
    (88) bloqueCond -> . { }

    {               shift and go to state 209

    bloqueCond                     shift and go to state 220

state 201

    (150) opcionMue -> direccion ID guardarIDPila recibe_CTI . checarMover ;
    (155) checarMover -> .

    ;               reduce using rule 155 (checarMover -> .)

    checarMover                    shift and go to state 221

state 202

    (60) asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .

    ID              reduce using rule 60 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    DIBUJAR         reduce using rule 60 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    IF              reduce using rule 60 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    LEER            reduce using rule 60 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    WHILE           reduce using rule 60 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    MUEVE           reduce using rule 60 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    RETURN          reduce using rule 60 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    }               reduce using rule 60 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)


state 203

    (65) opcionAsignacion -> [ CTI ] [ . CTI ]

    CTI             shift and go to state 222


state 204

    (53) auxExp -> listaExp llegaComa .

    )               reduce using rule 53 (auxExp -> listaExp llegaComa .)


state 205

    (55) llegaComa -> , .

    (               reduce using rule 55 (llegaComa -> , .)
    ID              reduce using rule 55 (llegaComa -> , .)
    CTF             reduce using rule 55 (llegaComa -> , .)
    CTI             reduce using rule 55 (llegaComa -> , .)
    TRUE            reduce using rule 55 (llegaComa -> , .)
    FALSE           reduce using rule 55 (llegaComa -> , .)
    )               reduce using rule 55 (llegaComa -> , .)


state 206

    (57) listaExp -> exp verificarTiposFunc . masExps
    (58) masExps -> . llegaComa listaExp
    (59) masExps -> .
    (55) llegaComa -> . ,

  ! shift/reduce conflict for , resolved as shift
    )               reduce using rule 59 (masExps -> .)
    ,               shift and go to state 205

  ! ,               [ reduce using rule 59 (masExps -> .) ]

    llegaComa                      shift and go to state 223
    masExps                        shift and go to state 224

state 207

    (46) checaNumParam -> ) .

    ID              reduce using rule 46 (checaNumParam -> ) .)
    DIBUJAR         reduce using rule 46 (checaNumParam -> ) .)
    IF              reduce using rule 46 (checaNumParam -> ) .)
    LEER            reduce using rule 46 (checaNumParam -> ) .)
    WHILE           reduce using rule 46 (checaNumParam -> ) .)
    MUEVE           reduce using rule 46 (checaNumParam -> ) .)
    }               reduce using rule 46 (checaNumParam -> ) .)
    RETURN          reduce using rule 46 (checaNumParam -> ) .)
    ;               reduce using rule 46 (checaNumParam -> ) .)


state 208

    (48) funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam . generaGOSUB
    (47) generaGOSUB -> .

    ID              reduce using rule 47 (generaGOSUB -> .)
    DIBUJAR         reduce using rule 47 (generaGOSUB -> .)
    IF              reduce using rule 47 (generaGOSUB -> .)
    LEER            reduce using rule 47 (generaGOSUB -> .)
    WHILE           reduce using rule 47 (generaGOSUB -> .)
    MUEVE           reduce using rule 47 (generaGOSUB -> .)
    }               reduce using rule 47 (generaGOSUB -> .)
    RETURN          reduce using rule 47 (generaGOSUB -> .)
    ;               reduce using rule 47 (generaGOSUB -> .)

    generaGOSUB                    shift and go to state 225

state 209

    (86) bloqueCond -> { . estatuto regresaCond }
    (87) bloqueCond -> { . regresaCond }
    (88) bloqueCond -> { . }
    (38) estatuto -> . asignacion estatutoAux
    (39) estatuto -> . escritura estatutoAux
    (40) estatuto -> . condicion estatutoAux
    (41) estatuto -> . lectura estatutoAux
    (42) estatuto -> . whiles estatutoAux
    (43) estatuto -> . funcs estatutoAux
    (89) regresaCond -> . RETURN ID
    (90) regresaCond -> . empty
    (60) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (61) asignacion -> . ID ;
    (78) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (79) escritura -> . mueve
    (84) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (85) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse finPilaSaltos
    (72) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (126) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (48) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (49) funcs -> . ID
    (156) empty -> .
    (149) mueve -> . MUEVE guardarToken opcionMue

  ! shift/reduce conflict for } resolved as shift
    }               shift and go to state 230
    RETURN          shift and go to state 226
    ID              shift and go to state 71
    DIBUJAR         shift and go to state 75
    IF              shift and go to state 72
    LEER            shift and go to state 73
    WHILE           shift and go to state 64
    MUEVE           shift and go to state 65

  ! }               [ reduce using rule 156 (empty -> .) ]

    funcs                          shift and go to state 63
    estatuto                       shift and go to state 227
    mueve                          shift and go to state 67
    condicion                      shift and go to state 68
    lectura                        shift and go to state 69
    empty                          shift and go to state 228
    whiles                         shift and go to state 70
    asignacion                     shift and go to state 74
    regresaCond                    shift and go to state 229
    escritura                      shift and go to state 77

state 210

    (84) condicion -> IF ( expresion ) checarIF bloqueCond . finPilaSaltos
    (85) condicion -> IF ( expresion ) checarIF bloqueCond . checarElse finPilaSaltos
    (93) finPilaSaltos -> .
    (92) checarElse -> . ELSE bloqueCond

    ID              reduce using rule 93 (finPilaSaltos -> .)
    DIBUJAR         reduce using rule 93 (finPilaSaltos -> .)
    IF              reduce using rule 93 (finPilaSaltos -> .)
    LEER            reduce using rule 93 (finPilaSaltos -> .)
    WHILE           reduce using rule 93 (finPilaSaltos -> .)
    MUEVE           reduce using rule 93 (finPilaSaltos -> .)
    }               reduce using rule 93 (finPilaSaltos -> .)
    RETURN          reduce using rule 93 (finPilaSaltos -> .)
    ELSE            shift and go to state 232

    finPilaSaltos                  shift and go to state 233
    checarElse                     shift and go to state 231

state 211

    (73) opcionesLectura -> [ . CTI ]
    (74) opcionesLectura -> [ . CTI ] [ CTI ]

    CTI             shift and go to state 234


state 212

    (72) lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura . ;

    ;               shift and go to state 235


state 213

    (75) opcionesLectura -> empty .

    ;               reduce using rule 75 (opcionesLectura -> empty .)


state 214

    (78) escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .

    ID              reduce using rule 78 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    DIBUJAR         reduce using rule 78 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    IF              reduce using rule 78 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    LEER            reduce using rule 78 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    WHILE           reduce using rule 78 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    MUEVE           reduce using rule 78 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    RETURN          reduce using rule 78 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    }               reduce using rule 78 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)


state 215

    (125) pos -> ( . varcte , varcte )
    (130) varcte -> . recibe_ID
    (131) varcte -> . recibe_CTF
    (132) varcte -> . recibe_CTI
    (133) varcte -> . recibe_TRUE
    (134) varcte -> . recibe_FALSE
    (135) recibe_ID -> . ID
    (136) recibe_CTF -> . CTF
    (137) recibe_CTI -> . CTI
    (138) recibe_TRUE -> . TRUE
    (139) recibe_FALSE -> . FALSE

    ID              shift and go to state 127
    CTF             shift and go to state 117
    CTI             shift and go to state 120
    TRUE            shift and go to state 119
    FALSE           shift and go to state 129

    recibe_TRUE                    shift and go to state 121
    varcte                         shift and go to state 236
    recibe_CTF                     shift and go to state 123
    recibe_CTI                     shift and go to state 130
    recibe_ID                      shift and go to state 125
    recibe_FALSE                   shift and go to state 133

state 216

    (76) guardarParametros -> ID guardarIDPila pos . color checarDibujar
    (80) color -> . AMARILLO
    (81) color -> . VERDE
    (82) color -> . ROJO
    (83) color -> . AZUL

    AMARILLO        shift and go to state 238
    VERDE           shift and go to state 241
    ROJO            shift and go to state 239
    AZUL            shift and go to state 240

    color                          shift and go to state 237

state 217

    (31) bloquefunc -> { vars guardarCuadruplo estatuto regresa } . liberarVar
    (35) liberarVar -> .

    FUNC            reduce using rule 35 (liberarVar -> .)
    INICIO          reduce using rule 35 (liberarVar -> .)

    liberarVar                     shift and go to state 242

state 218

    (32) bloquefunc -> { vars guardarCuadruplo regresa } liberarVar .

    FUNC            reduce using rule 32 (bloquefunc -> { vars guardarCuadruplo regresa } liberarVar .)
    INICIO          reduce using rule 32 (bloquefunc -> { vars guardarCuadruplo regresa } liberarVar .)


state 219

    (33) bloquefunc -> { guardarCuadruplo escritura regresa } liberarVar .

    FUNC            reduce using rule 33 (bloquefunc -> { guardarCuadruplo escritura regresa } liberarVar .)
    INICIO          reduce using rule 33 (bloquefunc -> { guardarCuadruplo escritura regresa } liberarVar .)


state 220

    (126) whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond . finPilaSaltosWhile
    (129) finPilaSaltosWhile -> .

    ID              reduce using rule 129 (finPilaSaltosWhile -> .)
    DIBUJAR         reduce using rule 129 (finPilaSaltosWhile -> .)
    IF              reduce using rule 129 (finPilaSaltosWhile -> .)
    LEER            reduce using rule 129 (finPilaSaltosWhile -> .)
    WHILE           reduce using rule 129 (finPilaSaltosWhile -> .)
    MUEVE           reduce using rule 129 (finPilaSaltosWhile -> .)
    }               reduce using rule 129 (finPilaSaltosWhile -> .)
    RETURN          reduce using rule 129 (finPilaSaltosWhile -> .)

    finPilaSaltosWhile             shift and go to state 243

state 221

    (150) opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover . ;

    ;               shift and go to state 244


state 222

    (65) opcionAsignacion -> [ CTI ] [ CTI . ]

    ]               shift and go to state 245


state 223

    (58) masExps -> llegaComa . listaExp
    (57) listaExp -> . exp verificarTiposFunc masExps
    (107) exp -> . termino checaroperador4
    (116) termino -> . factor checaroperador5
    (123) factor -> . fondoFalso expresion finFondoFalso
    (124) factor -> . varcte
    (108) fondoFalso -> . (
    (130) varcte -> . recibe_ID
    (131) varcte -> . recibe_CTF
    (132) varcte -> . recibe_CTI
    (133) varcte -> . recibe_TRUE
    (134) varcte -> . recibe_FALSE
    (135) recibe_ID -> . ID
    (136) recibe_CTF -> . CTF
    (137) recibe_CTI -> . CTI
    (138) recibe_TRUE -> . TRUE
    (139) recibe_FALSE -> . FALSE

    (               shift and go to state 124
    ID              shift and go to state 127
    CTF             shift and go to state 117
    CTI             shift and go to state 120
    TRUE            shift and go to state 119
    FALSE           shift and go to state 129

    recibe_TRUE                    shift and go to state 121
    recibe_CTF                     shift and go to state 123
    recibe_CTI                     shift and go to state 130
    varcte                         shift and go to state 122
    factor                         shift and go to state 126
    listaExp                       shift and go to state 246
    recibe_ID                      shift and go to state 125
    termino                        shift and go to state 118
    exp                            shift and go to state 184
    recibe_FALSE                   shift and go to state 133
    fondoFalso                     shift and go to state 132

state 224

    (57) listaExp -> exp verificarTiposFunc masExps .

    ,               reduce using rule 57 (listaExp -> exp verificarTiposFunc masExps .)
    )               reduce using rule 57 (listaExp -> exp verificarTiposFunc masExps .)


state 225

    (48) funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .

    ID              reduce using rule 48 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    DIBUJAR         reduce using rule 48 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    IF              reduce using rule 48 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    LEER            reduce using rule 48 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    WHILE           reduce using rule 48 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    MUEVE           reduce using rule 48 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    }               reduce using rule 48 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    RETURN          reduce using rule 48 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    ;               reduce using rule 48 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)


state 226

    (89) regresaCond -> RETURN . ID

    ID              shift and go to state 247


state 227

    (86) bloqueCond -> { estatuto . regresaCond }
    (89) regresaCond -> . RETURN ID
    (90) regresaCond -> . empty
    (156) empty -> .

    RETURN          shift and go to state 226
    }               reduce using rule 156 (empty -> .)

    regresaCond                    shift and go to state 248
    empty                          shift and go to state 228

state 228

    (90) regresaCond -> empty .

    }               reduce using rule 90 (regresaCond -> empty .)


state 229

    (87) bloqueCond -> { regresaCond . }

    }               shift and go to state 249


state 230

    (88) bloqueCond -> { } .

    ELSE            reduce using rule 88 (bloqueCond -> { } .)
    ID              reduce using rule 88 (bloqueCond -> { } .)
    DIBUJAR         reduce using rule 88 (bloqueCond -> { } .)
    IF              reduce using rule 88 (bloqueCond -> { } .)
    LEER            reduce using rule 88 (bloqueCond -> { } .)
    WHILE           reduce using rule 88 (bloqueCond -> { } .)
    MUEVE           reduce using rule 88 (bloqueCond -> { } .)
    }               reduce using rule 88 (bloqueCond -> { } .)
    RETURN          reduce using rule 88 (bloqueCond -> { } .)


state 231

    (85) condicion -> IF ( expresion ) checarIF bloqueCond checarElse . finPilaSaltos
    (93) finPilaSaltos -> .

    ID              reduce using rule 93 (finPilaSaltos -> .)
    DIBUJAR         reduce using rule 93 (finPilaSaltos -> .)
    IF              reduce using rule 93 (finPilaSaltos -> .)
    LEER            reduce using rule 93 (finPilaSaltos -> .)
    WHILE           reduce using rule 93 (finPilaSaltos -> .)
    MUEVE           reduce using rule 93 (finPilaSaltos -> .)
    }               reduce using rule 93 (finPilaSaltos -> .)
    RETURN          reduce using rule 93 (finPilaSaltos -> .)

    finPilaSaltos                  shift and go to state 250

state 232

    (92) checarElse -> ELSE . bloqueCond
    (86) bloqueCond -> . { estatuto regresaCond }
    (87) bloqueCond -> . { regresaCond }
    (88) bloqueCond -> . { }

    {               shift and go to state 209

    bloqueCond                     shift and go to state 251

state 233

    (84) condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .

    ID              reduce using rule 84 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)
    DIBUJAR         reduce using rule 84 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)
    IF              reduce using rule 84 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)
    LEER            reduce using rule 84 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)
    WHILE           reduce using rule 84 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)
    MUEVE           reduce using rule 84 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)
    RETURN          reduce using rule 84 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)
    }               reduce using rule 84 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)


state 234

    (73) opcionesLectura -> [ CTI . ]
    (74) opcionesLectura -> [ CTI . ] [ CTI ]

    ]               shift and go to state 252


state 235

    (72) lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .

    ID              reduce using rule 72 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    DIBUJAR         reduce using rule 72 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    IF              reduce using rule 72 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    LEER            reduce using rule 72 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    WHILE           reduce using rule 72 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    MUEVE           reduce using rule 72 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    }               reduce using rule 72 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    RETURN          reduce using rule 72 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)


state 236

    (125) pos -> ( varcte . , varcte )

    ,               shift and go to state 253


state 237

    (76) guardarParametros -> ID guardarIDPila pos color . checarDibujar
    (77) checarDibujar -> .

    )               reduce using rule 77 (checarDibujar -> .)

    checarDibujar                  shift and go to state 254

state 238

    (80) color -> AMARILLO .

    )               reduce using rule 80 (color -> AMARILLO .)


state 239

    (82) color -> ROJO .

    )               reduce using rule 82 (color -> ROJO .)


state 240

    (83) color -> AZUL .

    )               reduce using rule 83 (color -> AZUL .)


state 241

    (81) color -> VERDE .

    )               reduce using rule 81 (color -> VERDE .)


state 242

    (31) bloquefunc -> { vars guardarCuadruplo estatuto regresa } liberarVar .

    FUNC            reduce using rule 31 (bloquefunc -> { vars guardarCuadruplo estatuto regresa } liberarVar .)
    INICIO          reduce using rule 31 (bloquefunc -> { vars guardarCuadruplo estatuto regresa } liberarVar .)


state 243

    (126) whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .

    ID              reduce using rule 126 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    DIBUJAR         reduce using rule 126 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    IF              reduce using rule 126 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    LEER            reduce using rule 126 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    WHILE           reduce using rule 126 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    MUEVE           reduce using rule 126 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    }               reduce using rule 126 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    RETURN          reduce using rule 126 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)


state 244

    (150) opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .

    ID              reduce using rule 150 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    DIBUJAR         reduce using rule 150 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    IF              reduce using rule 150 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    LEER            reduce using rule 150 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    WHILE           reduce using rule 150 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    MUEVE           reduce using rule 150 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    }               reduce using rule 150 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    RETURN          reduce using rule 150 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)


state 245

    (65) opcionAsignacion -> [ CTI ] [ CTI ] .

    =               reduce using rule 65 (opcionAsignacion -> [ CTI ] [ CTI ] .)
    ;               reduce using rule 65 (opcionAsignacion -> [ CTI ] [ CTI ] .)


state 246

    (58) masExps -> llegaComa listaExp .

    ,               reduce using rule 58 (masExps -> llegaComa listaExp .)
    )               reduce using rule 58 (masExps -> llegaComa listaExp .)


state 247

    (89) regresaCond -> RETURN ID .

    }               reduce using rule 89 (regresaCond -> RETURN ID .)


state 248

    (86) bloqueCond -> { estatuto regresaCond . }

    }               shift and go to state 255


state 249

    (87) bloqueCond -> { regresaCond } .

    ELSE            reduce using rule 87 (bloqueCond -> { regresaCond } .)
    ID              reduce using rule 87 (bloqueCond -> { regresaCond } .)
    DIBUJAR         reduce using rule 87 (bloqueCond -> { regresaCond } .)
    IF              reduce using rule 87 (bloqueCond -> { regresaCond } .)
    LEER            reduce using rule 87 (bloqueCond -> { regresaCond } .)
    WHILE           reduce using rule 87 (bloqueCond -> { regresaCond } .)
    MUEVE           reduce using rule 87 (bloqueCond -> { regresaCond } .)
    }               reduce using rule 87 (bloqueCond -> { regresaCond } .)
    RETURN          reduce using rule 87 (bloqueCond -> { regresaCond } .)


state 250

    (85) condicion -> IF ( expresion ) checarIF bloqueCond checarElse finPilaSaltos .

    ID              reduce using rule 85 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse finPilaSaltos .)
    DIBUJAR         reduce using rule 85 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse finPilaSaltos .)
    IF              reduce using rule 85 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse finPilaSaltos .)
    LEER            reduce using rule 85 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse finPilaSaltos .)
    WHILE           reduce using rule 85 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse finPilaSaltos .)
    MUEVE           reduce using rule 85 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse finPilaSaltos .)
    RETURN          reduce using rule 85 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse finPilaSaltos .)
    }               reduce using rule 85 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse finPilaSaltos .)


state 251

    (92) checarElse -> ELSE bloqueCond .

    ID              reduce using rule 92 (checarElse -> ELSE bloqueCond .)
    DIBUJAR         reduce using rule 92 (checarElse -> ELSE bloqueCond .)
    IF              reduce using rule 92 (checarElse -> ELSE bloqueCond .)
    LEER            reduce using rule 92 (checarElse -> ELSE bloqueCond .)
    WHILE           reduce using rule 92 (checarElse -> ELSE bloqueCond .)
    MUEVE           reduce using rule 92 (checarElse -> ELSE bloqueCond .)
    }               reduce using rule 92 (checarElse -> ELSE bloqueCond .)
    RETURN          reduce using rule 92 (checarElse -> ELSE bloqueCond .)


state 252

    (73) opcionesLectura -> [ CTI ] .
    (74) opcionesLectura -> [ CTI ] . [ CTI ]

    ;               reduce using rule 73 (opcionesLectura -> [ CTI ] .)
    [               shift and go to state 256


state 253

    (125) pos -> ( varcte , . varcte )
    (130) varcte -> . recibe_ID
    (131) varcte -> . recibe_CTF
    (132) varcte -> . recibe_CTI
    (133) varcte -> . recibe_TRUE
    (134) varcte -> . recibe_FALSE
    (135) recibe_ID -> . ID
    (136) recibe_CTF -> . CTF
    (137) recibe_CTI -> . CTI
    (138) recibe_TRUE -> . TRUE
    (139) recibe_FALSE -> . FALSE

    ID              shift and go to state 127
    CTF             shift and go to state 117
    CTI             shift and go to state 120
    TRUE            shift and go to state 119
    FALSE           shift and go to state 129

    recibe_TRUE                    shift and go to state 121
    varcte                         shift and go to state 257
    recibe_CTF                     shift and go to state 123
    recibe_CTI                     shift and go to state 130
    recibe_ID                      shift and go to state 125
    recibe_FALSE                   shift and go to state 133

state 254

    (76) guardarParametros -> ID guardarIDPila pos color checarDibujar .

    )               reduce using rule 76 (guardarParametros -> ID guardarIDPila pos color checarDibujar .)


state 255

    (86) bloqueCond -> { estatuto regresaCond } .

    ELSE            reduce using rule 86 (bloqueCond -> { estatuto regresaCond } .)
    ID              reduce using rule 86 (bloqueCond -> { estatuto regresaCond } .)
    DIBUJAR         reduce using rule 86 (bloqueCond -> { estatuto regresaCond } .)
    IF              reduce using rule 86 (bloqueCond -> { estatuto regresaCond } .)
    LEER            reduce using rule 86 (bloqueCond -> { estatuto regresaCond } .)
    WHILE           reduce using rule 86 (bloqueCond -> { estatuto regresaCond } .)
    MUEVE           reduce using rule 86 (bloqueCond -> { estatuto regresaCond } .)
    }               reduce using rule 86 (bloqueCond -> { estatuto regresaCond } .)
    RETURN          reduce using rule 86 (bloqueCond -> { estatuto regresaCond } .)


state 256

    (74) opcionesLectura -> [ CTI ] [ . CTI ]

    CTI             shift and go to state 258


state 257

    (125) pos -> ( varcte , varcte . )

    )               shift and go to state 259


state 258

    (74) opcionesLectura -> [ CTI ] [ CTI . ]

    ]               shift and go to state 260


state 259

    (125) pos -> ( varcte , varcte ) .

    AMARILLO        reduce using rule 125 (pos -> ( varcte , varcte ) .)
    VERDE           reduce using rule 125 (pos -> ( varcte , varcte ) .)
    ROJO            reduce using rule 125 (pos -> ( varcte , varcte ) .)
    AZUL            reduce using rule 125 (pos -> ( varcte , varcte ) .)


state 260

    (74) opcionesLectura -> [ CTI ] [ CTI ] .

    ;               reduce using rule 74 (opcionesLectura -> [ CTI ] [ CTI ] .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ; in state 22 resolved as shift
WARNING: shift/reduce conflict for } in state 37 resolved as shift
WARNING: shift/reduce conflict for ; in state 71 resolved as shift
WARNING: shift/reduce conflict for , in state 206 resolved as shift
WARNING: shift/reduce conflict for } in state 209 resolved as shift
WARNING: reduce/reduce conflict in state 28 resolved using rule (vars -> empty)
WARNING: rejected rule (masTipos -> empty) in state 28
WARNING: reduce/reduce conflict in state 55 resolved using rule (funcion -> empty)
WARNING: rejected rule (funcion2 -> empty) in state 55
WARNING: reduce/reduce conflict in state 80 resolved using rule (guardarCuadruplo -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 80
WARNING: reduce/reduce conflict in state 118 resolved using rule (checaroperador4 -> <empty>)
WARNING: rejected rule (signo -> <empty>) in state 118
WARNING: reduce/reduce conflict in state 126 resolved using rule (checaroperador5 -> <empty>)
WARNING: rejected rule (masop -> <empty>) in state 126
WARNING: reduce/reduce conflict in state 131 resolved using rule (expresion -> exp)
WARNING: rejected rule (operacionLogica -> <empty>) in state 131
WARNING: reduce/reduce conflict in state 180 resolved using rule (funcs -> ID)
WARNING: rejected rule (recibe_ID -> ID) in state 180
WARNING: Rule (masTipos -> empty) is never reduced
WARNING: Rule (funcion2 -> empty) is never reduced
WARNING: Rule (signo -> <empty>) is never reduced
WARNING: Rule (masop -> <empty>) is never reduced
WARNING: Rule (operacionLogica -> <empty>) is never reduced

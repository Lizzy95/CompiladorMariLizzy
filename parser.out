Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Unused terminals:

    COOR

Grammar

Rule 0     S' -> programa
Rule 1     programa -> vars funcion INICIO funcAgregarInicio bloque FIN liberarVar
Rule 2     programa -> vars funcion INICIO FIN
Rule 3     funcAgregarInicio -> <empty>
Rule 4     bloque -> { vars guardarCuadruplo estatuto }
Rule 5     bloque -> { vars guardarCuadruplo }
Rule 6     bloque -> { }
Rule 7     vars -> tipo listaIDS ; masTipos
Rule 8     vars -> tipo ID guardarIDs arreglo ; masTipos
Rule 9     vars -> empty
Rule 10    masTipos -> vars
Rule 11    masTipos -> empty
Rule 12    listaIDS -> ID guardarIDs masIDS
Rule 13    masIDS -> , ID guardarIDs masIDS2
Rule 14    masIDS -> empty
Rule 15    masIDS2 -> , ID guardarIDs masIDS
Rule 16    masIDS2 -> empty
Rule 17    arreglo -> [ CTI ] matriz
Rule 18    matriz -> [ CTI ]
Rule 19    matriz -> empty
Rule 20    funcion -> FUNC tipo ID funcAgregar restoFuncion funcion2
Rule 21    funcion -> empty
Rule 22    funcion2 -> funcion
Rule 23    funcion2 -> empty
Rule 24    restoFuncion -> ( param ) bloquefunc
Rule 25    funcAgregar -> <empty>
Rule 26    param -> tipo ID guardarIDParam maspaID
Rule 27    param -> empty
Rule 28    guardarIDParam -> <empty>
Rule 29    guardarIDs -> <empty>
Rule 30    maspaID -> , param
Rule 31    maspaID -> empty
Rule 32    bloquefunc -> { vars guardarCuadruplo estatuto regresa } liberarVar
Rule 33    bloquefunc -> { vars guardarCuadruplo regresa } liberarVar
Rule 34    bloquefunc -> { guardarCuadruplo escritura regresa } liberarVar
Rule 35    bloquefunc -> { }
Rule 36    liberarVar -> <empty>
Rule 37    guardarCuadruplo -> <empty>
Rule 38    regresa -> RETURN ID
Rule 39    estatuto -> asignacion estatutoAux
Rule 40    estatuto -> escritura estatutoAux
Rule 41    estatuto -> condicion estatutoAux
Rule 42    estatuto -> lectura estatutoAux
Rule 43    estatuto -> whiles estatutoAux
Rule 44    estatuto -> funcs estatutoAux
Rule 45    estatutoAux -> estatuto
Rule 46    estatutoAux -> empty
Rule 47    checaNumParam -> )
Rule 48    generaGOSUB -> <empty>
Rule 49    funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
Rule 50    funcs -> ID
Rule 51    guardarIDFunc -> <empty>
Rule 52    verProc -> <empty>
Rule 53    generarERA -> (
Rule 54    auxExp -> listaExp llegaComa
Rule 55    auxExp -> listaExp
Rule 56    llegaComa -> ,
Rule 57    verificarTiposFunc -> <empty>
Rule 58    listaExp -> exp verificarTiposFunc masExps
Rule 59    masExps -> llegaComa listaExp
Rule 60    masExps -> <empty>
Rule 61    asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
Rule 62    asignacion -> ID ;
Rule 63    guardarIDPila -> <empty>
Rule 64    checarOperadorIgual -> <empty>
Rule 65    opcionAsignacion -> [ CTI ]
Rule 66    opcionAsignacion -> [ CTI ] [ CTI ]
Rule 67    opcionAsignacion -> empty
Rule 68    valorAsig -> = exp
Rule 69    valorAsig -> = funcs
Rule 70    valorAsig -> empty
Rule 71    guardarToken -> <empty>
Rule 72    checarLectura -> <empty>
Rule 73    lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
Rule 74    opcionesLectura -> [ CTI ]
Rule 75    opcionesLectura -> [ CTI ] [ CTI ]
Rule 76    opcionesLectura -> empty
Rule 77    guardarParametros -> ID guardarIDPila pos color checarDibujar
Rule 78    checarDibujar -> <empty>
Rule 79    escritura -> DIBUJAR guardarToken ( guardarParametros ) ;
Rule 80    escritura -> mueve
Rule 81    color -> AMARILLO
Rule 82    color -> VERDE
Rule 83    color -> ROJO
Rule 84    color -> AZUL
Rule 85    condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos
Rule 86    condicion -> IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos
Rule 87    bloqueCond -> { estatuto regresaCond }
Rule 88    bloqueCond -> { regresaCond }
Rule 89    bloqueCond -> { }
Rule 90    regresaCond -> RETURN ID
Rule 91    regresaCond -> empty
Rule 92    checarIF -> <empty>
Rule 93    checarElse -> ELSE
Rule 94    finPilaSaltos -> <empty>
Rule 95    expresion -> exp operacionLogica checaoperador6
Rule 96    expresion -> exp
Rule 97    push_logica -> >
Rule 98    push_logica -> <
Rule 99    push_logica -> MENORIGUAL
Rule 100   push_logica -> MAYORIGUAL
Rule 101   push_logica -> IGUALIGUAL
Rule 102   push_logica -> DIFERENTE
Rule 103   push_logica -> |
Rule 104   push_logica -> COAND
Rule 105   operacionLogica -> push_logica exp
Rule 106   operacionLogica -> <empty>
Rule 107   checaoperador6 -> <empty>
Rule 108   exp -> termino checaroperador4
Rule 109   fondoFalso -> (
Rule 110   finFondoFalso -> )
Rule 111   checaroperador4 -> signo
Rule 112   checaroperador4 -> <empty>
Rule 113   signo -> push_pm exp
Rule 114   signo -> <empty>
Rule 115   push_pm -> +
Rule 116   push_pm -> -
Rule 117   termino -> factor checaroperador5
Rule 118   checaroperador5 -> masop
Rule 119   checaroperador5 -> <empty>
Rule 120   masop -> push_td termino
Rule 121   masop -> <empty>
Rule 122   push_td -> *
Rule 123   push_td -> /
Rule 124   factor -> fondoFalso expresion finFondoFalso
Rule 125   factor -> varcte
Rule 126   pos -> ( varcte , varcte )
Rule 127   whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
Rule 128   checarWhile -> <empty>
Rule 129   checarContenido -> <empty>
Rule 130   finPilaSaltosWhile -> <empty>
Rule 131   varcte -> recibe_ID
Rule 132   varcte -> recibe_CTF
Rule 133   varcte -> recibe_CTI
Rule 134   varcte -> recibe_TRUE
Rule 135   varcte -> recibe_FALSE
Rule 136   recibe_ID -> ID
Rule 137   recibe_CTF -> CTF
Rule 138   recibe_CTI -> CTI
Rule 139   recibe_TRUE -> TRUE
Rule 140   recibe_FALSE -> FALSE
Rule 141   tipo -> ENTERO
Rule 142   tipo -> DECIMAL
Rule 143   tipo -> BOOL
Rule 144   tipo -> VOID
Rule 145   tipo -> CUADRADO
Rule 146   tipo -> RECTANGULO
Rule 147   tipo -> CIRCULO
Rule 148   tipo -> LINEA
Rule 149   tipo -> ESTRELLA
Rule 150   mueve -> MUEVE guardarToken opcionMue
Rule 151   opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ;
Rule 152   direccion -> IZQUIERDA
Rule 153   direccion -> DERECHA
Rule 154   direccion -> ARRIBA
Rule 155   direccion -> ABAJO
Rule 156   checarMover -> <empty>
Rule 157   empty -> <empty>

Terminals, with rules where they appear

(                    : 24 53 79 85 86 109 126 127
)                    : 24 47 79 85 86 110 126 127
*                    : 122
+                    : 115
,                    : 13 15 30 56 126
-                    : 116
/                    : 123
;                    : 7 8 61 62 73 79 151
<                    : 98
=                    : 68 69
>                    : 97
ABAJO                : 155
AMARILLO             : 81
ARRIBA               : 154
AZUL                 : 84
BOOL                 : 143
CIRCULO              : 147
COAND                : 104
COOR                 : 
CTF                  : 137
CTI                  : 17 18 65 66 66 74 75 75 138
CUADRADO             : 145
DECIMAL              : 142
DERECHA              : 153
DIBUJAR              : 79
DIFERENTE            : 102
ELSE                 : 93
ENTERO               : 141
ESTRELLA             : 149
FALSE                : 140
FIN                  : 1 2
FUNC                 : 20
ID                   : 8 12 13 15 20 26 38 49 50 61 62 73 77 90 136 151
IF                   : 85 86
IGUALIGUAL           : 101
INICIO               : 1 2
IZQUIERDA            : 152
LEER                 : 73
LINEA                : 148
MAYORIGUAL           : 100
MENORIGUAL           : 99
MUEVE                : 150
RECTANGULO           : 146
RETURN               : 38 90
ROJO                 : 83
TRUE                 : 139
VERDE                : 82
VOID                 : 144
WHILE                : 127
[                    : 17 18 65 66 66 74 75 75
]                    : 17 18 65 66 66 74 75 75
error                : 
{                    : 4 5 6 32 33 34 35 87 88 89
|                    : 103
}                    : 4 5 6 32 33 34 35 87 88 89

Nonterminals, with rules where they appear

arreglo              : 8
asignacion           : 39
auxExp               : 49
bloque               : 1
bloqueCond           : 85 86 86 127
bloquefunc           : 24
checaNumParam        : 49
checaoperador6       : 95
checarContenido      : 127
checarDibujar        : 77
checarElse           : 86
checarIF             : 85 86
checarLectura        : 73
checarMover          : 151
checarOperadorIgual  : 61
checarWhile          : 127
checaroperador4      : 108
checaroperador5      : 117
color                : 77
condicion            : 41
direccion            : 151
empty                : 9 11 14 16 19 21 23 27 31 46 67 70 76 91
escritura            : 34 40
estatuto             : 4 32 45 87
estatutoAux          : 39 40 41 42 43 44
exp                  : 58 68 95 96 105 113
expresion            : 85 86 124 127
factor               : 117
finFondoFalso        : 124
finPilaSaltos        : 85 86
finPilaSaltosWhile   : 127
fondoFalso           : 124
funcAgregar          : 20
funcAgregarInicio    : 1
funcion              : 1 2 22
funcion2             : 20
funcs                : 44 69
generaGOSUB          : 49
generarERA           : 49
guardarCuadruplo     : 4 5 32 33 34
guardarIDFunc        : 49
guardarIDParam       : 26
guardarIDPila        : 61 73 77 151
guardarIDs           : 8 12 13 15
guardarParametros    : 79
guardarToken         : 73 79 150
lectura              : 42
liberarVar           : 1 32 33 34
listaExp             : 54 55 59
listaIDS             : 7
llegaComa            : 54 59
masExps              : 58
masIDS               : 12 15
masIDS2              : 13
masTipos             : 7 8
masop                : 118
maspaID              : 26
matriz               : 17
mueve                : 80
opcionAsignacion     : 61
opcionMue            : 150
opcionesLectura      : 73
operacionLogica      : 95
param                : 24 30
pos                  : 77
programa             : 0
push_logica          : 105
push_pm              : 113
push_td              : 120
recibe_CTF           : 132
recibe_CTI           : 133 151
recibe_FALSE         : 135
recibe_ID            : 131
recibe_TRUE          : 134
regresa              : 32 33 34
regresaCond          : 87 88
restoFuncion         : 20
signo                : 111
termino              : 108 120
tipo                 : 7 8 20 26
valorAsig            : 61
varcte               : 125 126 126
vars                 : 1 2 4 5 10 32 33
verProc              : 49
verificarTiposFunc   : 58
whiles               : 43

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . vars funcion INICIO funcAgregarInicio bloque FIN liberarVar
    (2) programa -> . vars funcion INICIO FIN
    (7) vars -> . tipo listaIDS ; masTipos
    (8) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (9) vars -> . empty
    (141) tipo -> . ENTERO
    (142) tipo -> . DECIMAL
    (143) tipo -> . BOOL
    (144) tipo -> . VOID
    (145) tipo -> . CUADRADO
    (146) tipo -> . RECTANGULO
    (147) tipo -> . CIRCULO
    (148) tipo -> . LINEA
    (149) tipo -> . ESTRELLA
    (157) empty -> .

    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8
    FUNC            reduce using rule 157 (empty -> .)
    INICIO          reduce using rule 157 (empty -> .)

    tipo                           shift and go to state 4
    vars                           shift and go to state 1
    empty                          shift and go to state 5
    programa                       shift and go to state 11

state 1

    (1) programa -> vars . funcion INICIO funcAgregarInicio bloque FIN liberarVar
    (2) programa -> vars . funcion INICIO FIN
    (20) funcion -> . FUNC tipo ID funcAgregar restoFuncion funcion2
    (21) funcion -> . empty
    (157) empty -> .

    FUNC            shift and go to state 15
    INICIO          reduce using rule 157 (empty -> .)

    empty                          shift and go to state 14
    funcion                        shift and go to state 16

state 2

    (144) tipo -> VOID .

    ID              reduce using rule 144 (tipo -> VOID .)


state 3

    (148) tipo -> LINEA .

    ID              reduce using rule 148 (tipo -> LINEA .)


state 4

    (7) vars -> tipo . listaIDS ; masTipos
    (8) vars -> tipo . ID guardarIDs arreglo ; masTipos
    (12) listaIDS -> . ID guardarIDs masIDS

    ID              shift and go to state 18

    listaIDS                       shift and go to state 17

state 5

    (9) vars -> empty .

    }               reduce using rule 9 (vars -> empty .)
    ID              reduce using rule 9 (vars -> empty .)
    DIBUJAR         reduce using rule 9 (vars -> empty .)
    IF              reduce using rule 9 (vars -> empty .)
    LEER            reduce using rule 9 (vars -> empty .)
    WHILE           reduce using rule 9 (vars -> empty .)
    MUEVE           reduce using rule 9 (vars -> empty .)
    FUNC            reduce using rule 9 (vars -> empty .)
    INICIO          reduce using rule 9 (vars -> empty .)
    RETURN          reduce using rule 9 (vars -> empty .)


state 6

    (141) tipo -> ENTERO .

    ID              reduce using rule 141 (tipo -> ENTERO .)


state 7

    (142) tipo -> DECIMAL .

    ID              reduce using rule 142 (tipo -> DECIMAL .)


state 8

    (149) tipo -> ESTRELLA .

    ID              reduce using rule 149 (tipo -> ESTRELLA .)


state 9

    (145) tipo -> CUADRADO .

    ID              reduce using rule 145 (tipo -> CUADRADO .)


state 10

    (143) tipo -> BOOL .

    ID              reduce using rule 143 (tipo -> BOOL .)


state 11

    (0) S' -> programa .



state 12

    (146) tipo -> RECTANGULO .

    ID              reduce using rule 146 (tipo -> RECTANGULO .)


state 13

    (147) tipo -> CIRCULO .

    ID              reduce using rule 147 (tipo -> CIRCULO .)


state 14

    (21) funcion -> empty .

    INICIO          reduce using rule 21 (funcion -> empty .)


state 15

    (20) funcion -> FUNC . tipo ID funcAgregar restoFuncion funcion2
    (141) tipo -> . ENTERO
    (142) tipo -> . DECIMAL
    (143) tipo -> . BOOL
    (144) tipo -> . VOID
    (145) tipo -> . CUADRADO
    (146) tipo -> . RECTANGULO
    (147) tipo -> . CIRCULO
    (148) tipo -> . LINEA
    (149) tipo -> . ESTRELLA

    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8

    tipo                           shift and go to state 19

state 16

    (1) programa -> vars funcion . INICIO funcAgregarInicio bloque FIN liberarVar
    (2) programa -> vars funcion . INICIO FIN

    INICIO          shift and go to state 20


state 17

    (7) vars -> tipo listaIDS . ; masTipos

    ;               shift and go to state 21


state 18

    (8) vars -> tipo ID . guardarIDs arreglo ; masTipos
    (12) listaIDS -> ID . guardarIDs masIDS
    (29) guardarIDs -> .

    [               reduce using rule 29 (guardarIDs -> .)
    ,               reduce using rule 29 (guardarIDs -> .)
    ;               reduce using rule 29 (guardarIDs -> .)

    guardarIDs                     shift and go to state 22

state 19

    (20) funcion -> FUNC tipo . ID funcAgregar restoFuncion funcion2

    ID              shift and go to state 23


state 20

    (1) programa -> vars funcion INICIO . funcAgregarInicio bloque FIN liberarVar
    (2) programa -> vars funcion INICIO . FIN
    (3) funcAgregarInicio -> .

    FIN             shift and go to state 25
    {               reduce using rule 3 (funcAgregarInicio -> .)

    funcAgregarInicio              shift and go to state 24

state 21

    (7) vars -> tipo listaIDS ; . masTipos
    (10) masTipos -> . vars
    (11) masTipos -> . empty
    (7) vars -> . tipo listaIDS ; masTipos
    (8) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (9) vars -> . empty
    (157) empty -> .
    (141) tipo -> . ENTERO
    (142) tipo -> . DECIMAL
    (143) tipo -> . BOOL
    (144) tipo -> . VOID
    (145) tipo -> . CUADRADO
    (146) tipo -> . RECTANGULO
    (147) tipo -> . CIRCULO
    (148) tipo -> . LINEA
    (149) tipo -> . ESTRELLA

    FUNC            reduce using rule 157 (empty -> .)
    INICIO          reduce using rule 157 (empty -> .)
    }               reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    DIBUJAR         reduce using rule 157 (empty -> .)
    IF              reduce using rule 157 (empty -> .)
    LEER            reduce using rule 157 (empty -> .)
    WHILE           reduce using rule 157 (empty -> .)
    MUEVE           reduce using rule 157 (empty -> .)
    RETURN          reduce using rule 157 (empty -> .)
    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8

    masTipos                       shift and go to state 26
    tipo                           shift and go to state 4
    vars                           shift and go to state 27
    empty                          shift and go to state 28

state 22

    (8) vars -> tipo ID guardarIDs . arreglo ; masTipos
    (12) listaIDS -> ID guardarIDs . masIDS
    (17) arreglo -> . [ CTI ] matriz
    (13) masIDS -> . , ID guardarIDs masIDS2
    (14) masIDS -> . empty
    (157) empty -> .

    [               shift and go to state 31
    ,               shift and go to state 29
    ;               reduce using rule 157 (empty -> .)

    arreglo                        shift and go to state 30
    masIDS                         shift and go to state 32
    empty                          shift and go to state 33

state 23

    (20) funcion -> FUNC tipo ID . funcAgregar restoFuncion funcion2
    (25) funcAgregar -> .

    (               reduce using rule 25 (funcAgregar -> .)

    funcAgregar                    shift and go to state 34

state 24

    (1) programa -> vars funcion INICIO funcAgregarInicio . bloque FIN liberarVar
    (4) bloque -> . { vars guardarCuadruplo estatuto }
    (5) bloque -> . { vars guardarCuadruplo }
    (6) bloque -> . { }

    {               shift and go to state 36

    bloque                         shift and go to state 35

state 25

    (2) programa -> vars funcion INICIO FIN .

    $end            reduce using rule 2 (programa -> vars funcion INICIO FIN .)


state 26

    (7) vars -> tipo listaIDS ; masTipos .

    }               reduce using rule 7 (vars -> tipo listaIDS ; masTipos .)
    ID              reduce using rule 7 (vars -> tipo listaIDS ; masTipos .)
    DIBUJAR         reduce using rule 7 (vars -> tipo listaIDS ; masTipos .)
    IF              reduce using rule 7 (vars -> tipo listaIDS ; masTipos .)
    LEER            reduce using rule 7 (vars -> tipo listaIDS ; masTipos .)
    WHILE           reduce using rule 7 (vars -> tipo listaIDS ; masTipos .)
    MUEVE           reduce using rule 7 (vars -> tipo listaIDS ; masTipos .)
    FUNC            reduce using rule 7 (vars -> tipo listaIDS ; masTipos .)
    INICIO          reduce using rule 7 (vars -> tipo listaIDS ; masTipos .)
    RETURN          reduce using rule 7 (vars -> tipo listaIDS ; masTipos .)


state 27

    (10) masTipos -> vars .

    FUNC            reduce using rule 10 (masTipos -> vars .)
    INICIO          reduce using rule 10 (masTipos -> vars .)
    }               reduce using rule 10 (masTipos -> vars .)
    ID              reduce using rule 10 (masTipos -> vars .)
    DIBUJAR         reduce using rule 10 (masTipos -> vars .)
    IF              reduce using rule 10 (masTipos -> vars .)
    LEER            reduce using rule 10 (masTipos -> vars .)
    WHILE           reduce using rule 10 (masTipos -> vars .)
    MUEVE           reduce using rule 10 (masTipos -> vars .)
    RETURN          reduce using rule 10 (masTipos -> vars .)


state 28

    (11) masTipos -> empty .
    (9) vars -> empty .

  ! reduce/reduce conflict for FUNC resolved using rule 9 (vars -> empty .)
  ! reduce/reduce conflict for INICIO resolved using rule 9 (vars -> empty .)
  ! reduce/reduce conflict for } resolved using rule 9 (vars -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 9 (vars -> empty .)
  ! reduce/reduce conflict for DIBUJAR resolved using rule 9 (vars -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 9 (vars -> empty .)
  ! reduce/reduce conflict for LEER resolved using rule 9 (vars -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 9 (vars -> empty .)
  ! reduce/reduce conflict for MUEVE resolved using rule 9 (vars -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 9 (vars -> empty .)
    FUNC            reduce using rule 9 (vars -> empty .)
    INICIO          reduce using rule 9 (vars -> empty .)
    }               reduce using rule 9 (vars -> empty .)
    ID              reduce using rule 9 (vars -> empty .)
    DIBUJAR         reduce using rule 9 (vars -> empty .)
    IF              reduce using rule 9 (vars -> empty .)
    LEER            reduce using rule 9 (vars -> empty .)
    WHILE           reduce using rule 9 (vars -> empty .)
    MUEVE           reduce using rule 9 (vars -> empty .)
    RETURN          reduce using rule 9 (vars -> empty .)

  ! FUNC            [ reduce using rule 11 (masTipos -> empty .) ]
  ! INICIO          [ reduce using rule 11 (masTipos -> empty .) ]
  ! }               [ reduce using rule 11 (masTipos -> empty .) ]
  ! ID              [ reduce using rule 11 (masTipos -> empty .) ]
  ! DIBUJAR         [ reduce using rule 11 (masTipos -> empty .) ]
  ! IF              [ reduce using rule 11 (masTipos -> empty .) ]
  ! LEER            [ reduce using rule 11 (masTipos -> empty .) ]
  ! WHILE           [ reduce using rule 11 (masTipos -> empty .) ]
  ! MUEVE           [ reduce using rule 11 (masTipos -> empty .) ]
  ! RETURN          [ reduce using rule 11 (masTipos -> empty .) ]


state 29

    (13) masIDS -> , . ID guardarIDs masIDS2

    ID              shift and go to state 37


state 30

    (8) vars -> tipo ID guardarIDs arreglo . ; masTipos

    ;               shift and go to state 38


state 31

    (17) arreglo -> [ . CTI ] matriz

    CTI             shift and go to state 39


state 32

    (12) listaIDS -> ID guardarIDs masIDS .

    ;               reduce using rule 12 (listaIDS -> ID guardarIDs masIDS .)


state 33

    (14) masIDS -> empty .

    ;               reduce using rule 14 (masIDS -> empty .)


state 34

    (20) funcion -> FUNC tipo ID funcAgregar . restoFuncion funcion2
    (24) restoFuncion -> . ( param ) bloquefunc

    (               shift and go to state 40

    restoFuncion                   shift and go to state 41

state 35

    (1) programa -> vars funcion INICIO funcAgregarInicio bloque . FIN liberarVar

    FIN             shift and go to state 42


state 36

    (4) bloque -> { . vars guardarCuadruplo estatuto }
    (5) bloque -> { . vars guardarCuadruplo }
    (6) bloque -> { . }
    (7) vars -> . tipo listaIDS ; masTipos
    (8) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (9) vars -> . empty
    (141) tipo -> . ENTERO
    (142) tipo -> . DECIMAL
    (143) tipo -> . BOOL
    (144) tipo -> . VOID
    (145) tipo -> . CUADRADO
    (146) tipo -> . RECTANGULO
    (147) tipo -> . CIRCULO
    (148) tipo -> . LINEA
    (149) tipo -> . ESTRELLA
    (157) empty -> .

  ! shift/reduce conflict for } resolved as shift
    }               shift and go to state 44
    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8
    ID              reduce using rule 157 (empty -> .)
    DIBUJAR         reduce using rule 157 (empty -> .)
    IF              reduce using rule 157 (empty -> .)
    LEER            reduce using rule 157 (empty -> .)
    WHILE           reduce using rule 157 (empty -> .)
    MUEVE           reduce using rule 157 (empty -> .)

  ! }               [ reduce using rule 157 (empty -> .) ]

    vars                           shift and go to state 43
    empty                          shift and go to state 5
    tipo                           shift and go to state 4

state 37

    (13) masIDS -> , ID . guardarIDs masIDS2
    (29) guardarIDs -> .

    ,               reduce using rule 29 (guardarIDs -> .)
    ;               reduce using rule 29 (guardarIDs -> .)

    guardarIDs                     shift and go to state 45

state 38

    (8) vars -> tipo ID guardarIDs arreglo ; . masTipos
    (10) masTipos -> . vars
    (11) masTipos -> . empty
    (7) vars -> . tipo listaIDS ; masTipos
    (8) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (9) vars -> . empty
    (157) empty -> .
    (141) tipo -> . ENTERO
    (142) tipo -> . DECIMAL
    (143) tipo -> . BOOL
    (144) tipo -> . VOID
    (145) tipo -> . CUADRADO
    (146) tipo -> . RECTANGULO
    (147) tipo -> . CIRCULO
    (148) tipo -> . LINEA
    (149) tipo -> . ESTRELLA

    FUNC            reduce using rule 157 (empty -> .)
    INICIO          reduce using rule 157 (empty -> .)
    }               reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    DIBUJAR         reduce using rule 157 (empty -> .)
    IF              reduce using rule 157 (empty -> .)
    LEER            reduce using rule 157 (empty -> .)
    WHILE           reduce using rule 157 (empty -> .)
    MUEVE           reduce using rule 157 (empty -> .)
    RETURN          reduce using rule 157 (empty -> .)
    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8

    masTipos                       shift and go to state 46
    tipo                           shift and go to state 4
    vars                           shift and go to state 27
    empty                          shift and go to state 28

state 39

    (17) arreglo -> [ CTI . ] matriz

    ]               shift and go to state 47


state 40

    (24) restoFuncion -> ( . param ) bloquefunc
    (26) param -> . tipo ID guardarIDParam maspaID
    (27) param -> . empty
    (141) tipo -> . ENTERO
    (142) tipo -> . DECIMAL
    (143) tipo -> . BOOL
    (144) tipo -> . VOID
    (145) tipo -> . CUADRADO
    (146) tipo -> . RECTANGULO
    (147) tipo -> . CIRCULO
    (148) tipo -> . LINEA
    (149) tipo -> . ESTRELLA
    (157) empty -> .

    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8
    )               reduce using rule 157 (empty -> .)

    tipo                           shift and go to state 48
    param                          shift and go to state 49
    empty                          shift and go to state 50

state 41

    (20) funcion -> FUNC tipo ID funcAgregar restoFuncion . funcion2
    (22) funcion2 -> . funcion
    (23) funcion2 -> . empty
    (20) funcion -> . FUNC tipo ID funcAgregar restoFuncion funcion2
    (21) funcion -> . empty
    (157) empty -> .

    FUNC            shift and go to state 15
    INICIO          reduce using rule 157 (empty -> .)

    funcion2                       shift and go to state 51
    empty                          shift and go to state 53
    funcion                        shift and go to state 52

state 42

    (1) programa -> vars funcion INICIO funcAgregarInicio bloque FIN . liberarVar
    (36) liberarVar -> .

    $end            reduce using rule 36 (liberarVar -> .)

    liberarVar                     shift and go to state 54

state 43

    (4) bloque -> { vars . guardarCuadruplo estatuto }
    (5) bloque -> { vars . guardarCuadruplo }
    (37) guardarCuadruplo -> .

    }               reduce using rule 37 (guardarCuadruplo -> .)
    ID              reduce using rule 37 (guardarCuadruplo -> .)
    DIBUJAR         reduce using rule 37 (guardarCuadruplo -> .)
    IF              reduce using rule 37 (guardarCuadruplo -> .)
    LEER            reduce using rule 37 (guardarCuadruplo -> .)
    WHILE           reduce using rule 37 (guardarCuadruplo -> .)
    MUEVE           reduce using rule 37 (guardarCuadruplo -> .)

    guardarCuadruplo               shift and go to state 55

state 44

    (6) bloque -> { } .

    FIN             reduce using rule 6 (bloque -> { } .)


state 45

    (13) masIDS -> , ID guardarIDs . masIDS2
    (15) masIDS2 -> . , ID guardarIDs masIDS
    (16) masIDS2 -> . empty
    (157) empty -> .

    ,               shift and go to state 57
    ;               reduce using rule 157 (empty -> .)

    masIDS2                        shift and go to state 56
    empty                          shift and go to state 58

state 46

    (8) vars -> tipo ID guardarIDs arreglo ; masTipos .

    }               reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    ID              reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    DIBUJAR         reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    IF              reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    LEER            reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    WHILE           reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    MUEVE           reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    FUNC            reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    INICIO          reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    RETURN          reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)


state 47

    (17) arreglo -> [ CTI ] . matriz
    (18) matriz -> . [ CTI ]
    (19) matriz -> . empty
    (157) empty -> .

    [               shift and go to state 59
    ;               reduce using rule 157 (empty -> .)

    empty                          shift and go to state 60
    matriz                         shift and go to state 61

state 48

    (26) param -> tipo . ID guardarIDParam maspaID

    ID              shift and go to state 62


state 49

    (24) restoFuncion -> ( param . ) bloquefunc

    )               shift and go to state 63


state 50

    (27) param -> empty .

    )               reduce using rule 27 (param -> empty .)


state 51

    (20) funcion -> FUNC tipo ID funcAgregar restoFuncion funcion2 .

    INICIO          reduce using rule 20 (funcion -> FUNC tipo ID funcAgregar restoFuncion funcion2 .)


state 52

    (22) funcion2 -> funcion .

    INICIO          reduce using rule 22 (funcion2 -> funcion .)


state 53

    (23) funcion2 -> empty .
    (21) funcion -> empty .

  ! reduce/reduce conflict for INICIO resolved using rule 21 (funcion -> empty .)
    INICIO          reduce using rule 21 (funcion -> empty .)

  ! INICIO          [ reduce using rule 23 (funcion2 -> empty .) ]


state 54

    (1) programa -> vars funcion INICIO funcAgregarInicio bloque FIN liberarVar .

    $end            reduce using rule 1 (programa -> vars funcion INICIO funcAgregarInicio bloque FIN liberarVar .)


state 55

    (4) bloque -> { vars guardarCuadruplo . estatuto }
    (5) bloque -> { vars guardarCuadruplo . }
    (39) estatuto -> . asignacion estatutoAux
    (40) estatuto -> . escritura estatutoAux
    (41) estatuto -> . condicion estatutoAux
    (42) estatuto -> . lectura estatutoAux
    (43) estatuto -> . whiles estatutoAux
    (44) estatuto -> . funcs estatutoAux
    (61) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (62) asignacion -> . ID ;
    (79) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (80) escritura -> . mueve
    (85) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (86) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos
    (73) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (127) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (49) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (50) funcs -> . ID
    (150) mueve -> . MUEVE guardarToken opcionMue

    }               shift and go to state 77
    ID              shift and go to state 72
    DIBUJAR         shift and go to state 76
    IF              shift and go to state 73
    LEER            shift and go to state 74
    WHILE           shift and go to state 65
    MUEVE           shift and go to state 66

    funcs                          shift and go to state 64
    estatuto                       shift and go to state 67
    mueve                          shift and go to state 68
    condicion                      shift and go to state 69
    lectura                        shift and go to state 70
    whiles                         shift and go to state 71
    asignacion                     shift and go to state 75
    escritura                      shift and go to state 78

state 56

    (13) masIDS -> , ID guardarIDs masIDS2 .

    ;               reduce using rule 13 (masIDS -> , ID guardarIDs masIDS2 .)


state 57

    (15) masIDS2 -> , . ID guardarIDs masIDS

    ID              shift and go to state 79


state 58

    (16) masIDS2 -> empty .

    ;               reduce using rule 16 (masIDS2 -> empty .)


state 59

    (18) matriz -> [ . CTI ]

    CTI             shift and go to state 80


state 60

    (19) matriz -> empty .

    ;               reduce using rule 19 (matriz -> empty .)


state 61

    (17) arreglo -> [ CTI ] matriz .

    ;               reduce using rule 17 (arreglo -> [ CTI ] matriz .)


state 62

    (26) param -> tipo ID . guardarIDParam maspaID
    (28) guardarIDParam -> .

    ,               reduce using rule 28 (guardarIDParam -> .)
    )               reduce using rule 28 (guardarIDParam -> .)

    guardarIDParam                 shift and go to state 81

state 63

    (24) restoFuncion -> ( param ) . bloquefunc
    (32) bloquefunc -> . { vars guardarCuadruplo estatuto regresa } liberarVar
    (33) bloquefunc -> . { vars guardarCuadruplo regresa } liberarVar
    (34) bloquefunc -> . { guardarCuadruplo escritura regresa } liberarVar
    (35) bloquefunc -> . { }

    {               shift and go to state 82

    bloquefunc                     shift and go to state 83

state 64

    (44) estatuto -> funcs . estatutoAux
    (45) estatutoAux -> . estatuto
    (46) estatutoAux -> . empty
    (39) estatuto -> . asignacion estatutoAux
    (40) estatuto -> . escritura estatutoAux
    (41) estatuto -> . condicion estatutoAux
    (42) estatuto -> . lectura estatutoAux
    (43) estatuto -> . whiles estatutoAux
    (44) estatuto -> . funcs estatutoAux
    (157) empty -> .
    (61) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (62) asignacion -> . ID ;
    (79) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (80) escritura -> . mueve
    (85) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (86) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos
    (73) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (127) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (49) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (50) funcs -> . ID
    (150) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 157 (empty -> .)
    RETURN          reduce using rule 157 (empty -> .)
    ID              shift and go to state 72
    DIBUJAR         shift and go to state 76
    IF              shift and go to state 73
    LEER            shift and go to state 74
    WHILE           shift and go to state 65
    MUEVE           shift and go to state 66

    funcs                          shift and go to state 64
    estatuto                       shift and go to state 84
    mueve                          shift and go to state 68
    condicion                      shift and go to state 69
    lectura                        shift and go to state 70
    empty                          shift and go to state 85
    whiles                         shift and go to state 71
    estatutoAux                    shift and go to state 86
    asignacion                     shift and go to state 75
    escritura                      shift and go to state 78

state 65

    (127) whiles -> WHILE . checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (128) checarWhile -> .

    (               reduce using rule 128 (checarWhile -> .)

    checarWhile                    shift and go to state 87

state 66

    (150) mueve -> MUEVE . guardarToken opcionMue
    (71) guardarToken -> .

    IZQUIERDA       reduce using rule 71 (guardarToken -> .)
    DERECHA         reduce using rule 71 (guardarToken -> .)
    ARRIBA          reduce using rule 71 (guardarToken -> .)
    ABAJO           reduce using rule 71 (guardarToken -> .)

    guardarToken                   shift and go to state 88

state 67

    (4) bloque -> { vars guardarCuadruplo estatuto . }

    }               shift and go to state 89


state 68

    (80) escritura -> mueve .

    ID              reduce using rule 80 (escritura -> mueve .)
    DIBUJAR         reduce using rule 80 (escritura -> mueve .)
    IF              reduce using rule 80 (escritura -> mueve .)
    LEER            reduce using rule 80 (escritura -> mueve .)
    WHILE           reduce using rule 80 (escritura -> mueve .)
    MUEVE           reduce using rule 80 (escritura -> mueve .)
    }               reduce using rule 80 (escritura -> mueve .)
    RETURN          reduce using rule 80 (escritura -> mueve .)


state 69

    (41) estatuto -> condicion . estatutoAux
    (45) estatutoAux -> . estatuto
    (46) estatutoAux -> . empty
    (39) estatuto -> . asignacion estatutoAux
    (40) estatuto -> . escritura estatutoAux
    (41) estatuto -> . condicion estatutoAux
    (42) estatuto -> . lectura estatutoAux
    (43) estatuto -> . whiles estatutoAux
    (44) estatuto -> . funcs estatutoAux
    (157) empty -> .
    (61) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (62) asignacion -> . ID ;
    (79) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (80) escritura -> . mueve
    (85) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (86) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos
    (73) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (127) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (49) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (50) funcs -> . ID
    (150) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 157 (empty -> .)
    RETURN          reduce using rule 157 (empty -> .)
    ID              shift and go to state 72
    DIBUJAR         shift and go to state 76
    IF              shift and go to state 73
    LEER            shift and go to state 74
    WHILE           shift and go to state 65
    MUEVE           shift and go to state 66

    funcs                          shift and go to state 64
    estatuto                       shift and go to state 84
    mueve                          shift and go to state 68
    condicion                      shift and go to state 69
    lectura                        shift and go to state 70
    empty                          shift and go to state 85
    whiles                         shift and go to state 71
    estatutoAux                    shift and go to state 90
    asignacion                     shift and go to state 75
    escritura                      shift and go to state 78

state 70

    (42) estatuto -> lectura . estatutoAux
    (45) estatutoAux -> . estatuto
    (46) estatutoAux -> . empty
    (39) estatuto -> . asignacion estatutoAux
    (40) estatuto -> . escritura estatutoAux
    (41) estatuto -> . condicion estatutoAux
    (42) estatuto -> . lectura estatutoAux
    (43) estatuto -> . whiles estatutoAux
    (44) estatuto -> . funcs estatutoAux
    (157) empty -> .
    (61) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (62) asignacion -> . ID ;
    (79) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (80) escritura -> . mueve
    (85) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (86) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos
    (73) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (127) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (49) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (50) funcs -> . ID
    (150) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 157 (empty -> .)
    RETURN          reduce using rule 157 (empty -> .)
    ID              shift and go to state 72
    DIBUJAR         shift and go to state 76
    IF              shift and go to state 73
    LEER            shift and go to state 74
    WHILE           shift and go to state 65
    MUEVE           shift and go to state 66

    funcs                          shift and go to state 64
    estatuto                       shift and go to state 84
    mueve                          shift and go to state 68
    condicion                      shift and go to state 69
    lectura                        shift and go to state 70
    empty                          shift and go to state 85
    whiles                         shift and go to state 71
    estatutoAux                    shift and go to state 91
    asignacion                     shift and go to state 75
    escritura                      shift and go to state 78

state 71

    (43) estatuto -> whiles . estatutoAux
    (45) estatutoAux -> . estatuto
    (46) estatutoAux -> . empty
    (39) estatuto -> . asignacion estatutoAux
    (40) estatuto -> . escritura estatutoAux
    (41) estatuto -> . condicion estatutoAux
    (42) estatuto -> . lectura estatutoAux
    (43) estatuto -> . whiles estatutoAux
    (44) estatuto -> . funcs estatutoAux
    (157) empty -> .
    (61) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (62) asignacion -> . ID ;
    (79) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (80) escritura -> . mueve
    (85) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (86) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos
    (73) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (127) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (49) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (50) funcs -> . ID
    (150) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 157 (empty -> .)
    RETURN          reduce using rule 157 (empty -> .)
    ID              shift and go to state 72
    DIBUJAR         shift and go to state 76
    IF              shift and go to state 73
    LEER            shift and go to state 74
    WHILE           shift and go to state 65
    MUEVE           shift and go to state 66

    funcs                          shift and go to state 64
    estatuto                       shift and go to state 84
    mueve                          shift and go to state 68
    condicion                      shift and go to state 69
    lectura                        shift and go to state 70
    empty                          shift and go to state 85
    whiles                         shift and go to state 71
    estatutoAux                    shift and go to state 92
    asignacion                     shift and go to state 75
    escritura                      shift and go to state 78

state 72

    (61) asignacion -> ID . guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (62) asignacion -> ID . ;
    (49) funcs -> ID . guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (50) funcs -> ID .
    (63) guardarIDPila -> .
    (51) guardarIDFunc -> .

  ! shift/reduce conflict for ; resolved as shift
    ;               shift and go to state 95
    ID              reduce using rule 50 (funcs -> ID .)
    DIBUJAR         reduce using rule 50 (funcs -> ID .)
    IF              reduce using rule 50 (funcs -> ID .)
    LEER            reduce using rule 50 (funcs -> ID .)
    WHILE           reduce using rule 50 (funcs -> ID .)
    MUEVE           reduce using rule 50 (funcs -> ID .)
    }               reduce using rule 50 (funcs -> ID .)
    RETURN          reduce using rule 50 (funcs -> ID .)
    [               reduce using rule 63 (guardarIDPila -> .)
    =               reduce using rule 63 (guardarIDPila -> .)
    (               reduce using rule 51 (guardarIDFunc -> .)

  ! ;               [ reduce using rule 63 (guardarIDPila -> .) ]

    guardarIDPila                  shift and go to state 93
    guardarIDFunc                  shift and go to state 94

state 73

    (85) condicion -> IF . ( expresion ) checarIF bloqueCond finPilaSaltos
    (86) condicion -> IF . ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos

    (               shift and go to state 96


state 74

    (73) lectura -> LEER . guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (71) guardarToken -> .

    ID              reduce using rule 71 (guardarToken -> .)

    guardarToken                   shift and go to state 97

state 75

    (39) estatuto -> asignacion . estatutoAux
    (45) estatutoAux -> . estatuto
    (46) estatutoAux -> . empty
    (39) estatuto -> . asignacion estatutoAux
    (40) estatuto -> . escritura estatutoAux
    (41) estatuto -> . condicion estatutoAux
    (42) estatuto -> . lectura estatutoAux
    (43) estatuto -> . whiles estatutoAux
    (44) estatuto -> . funcs estatutoAux
    (157) empty -> .
    (61) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (62) asignacion -> . ID ;
    (79) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (80) escritura -> . mueve
    (85) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (86) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos
    (73) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (127) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (49) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (50) funcs -> . ID
    (150) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 157 (empty -> .)
    RETURN          reduce using rule 157 (empty -> .)
    ID              shift and go to state 72
    DIBUJAR         shift and go to state 76
    IF              shift and go to state 73
    LEER            shift and go to state 74
    WHILE           shift and go to state 65
    MUEVE           shift and go to state 66

    funcs                          shift and go to state 64
    estatuto                       shift and go to state 84
    mueve                          shift and go to state 68
    condicion                      shift and go to state 69
    lectura                        shift and go to state 70
    empty                          shift and go to state 85
    whiles                         shift and go to state 71
    estatutoAux                    shift and go to state 98
    asignacion                     shift and go to state 75
    escritura                      shift and go to state 78

state 76

    (79) escritura -> DIBUJAR . guardarToken ( guardarParametros ) ;
    (71) guardarToken -> .

    (               reduce using rule 71 (guardarToken -> .)

    guardarToken                   shift and go to state 99

state 77

    (5) bloque -> { vars guardarCuadruplo } .

    FIN             reduce using rule 5 (bloque -> { vars guardarCuadruplo } .)


state 78

    (40) estatuto -> escritura . estatutoAux
    (45) estatutoAux -> . estatuto
    (46) estatutoAux -> . empty
    (39) estatuto -> . asignacion estatutoAux
    (40) estatuto -> . escritura estatutoAux
    (41) estatuto -> . condicion estatutoAux
    (42) estatuto -> . lectura estatutoAux
    (43) estatuto -> . whiles estatutoAux
    (44) estatuto -> . funcs estatutoAux
    (157) empty -> .
    (61) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (62) asignacion -> . ID ;
    (79) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (80) escritura -> . mueve
    (85) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (86) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos
    (73) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (127) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (49) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (50) funcs -> . ID
    (150) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 157 (empty -> .)
    RETURN          reduce using rule 157 (empty -> .)
    ID              shift and go to state 72
    DIBUJAR         shift and go to state 76
    IF              shift and go to state 73
    LEER            shift and go to state 74
    WHILE           shift and go to state 65
    MUEVE           shift and go to state 66

    funcs                          shift and go to state 64
    estatuto                       shift and go to state 84
    mueve                          shift and go to state 68
    condicion                      shift and go to state 69
    lectura                        shift and go to state 70
    empty                          shift and go to state 85
    whiles                         shift and go to state 71
    estatutoAux                    shift and go to state 100
    asignacion                     shift and go to state 75
    escritura                      shift and go to state 78

state 79

    (15) masIDS2 -> , ID . guardarIDs masIDS
    (29) guardarIDs -> .

    ,               reduce using rule 29 (guardarIDs -> .)
    ;               reduce using rule 29 (guardarIDs -> .)

    guardarIDs                     shift and go to state 101

state 80

    (18) matriz -> [ CTI . ]

    ]               shift and go to state 102


state 81

    (26) param -> tipo ID guardarIDParam . maspaID
    (30) maspaID -> . , param
    (31) maspaID -> . empty
    (157) empty -> .

    ,               shift and go to state 104
    )               reduce using rule 157 (empty -> .)

    maspaID                        shift and go to state 103
    empty                          shift and go to state 105

state 82

    (32) bloquefunc -> { . vars guardarCuadruplo estatuto regresa } liberarVar
    (33) bloquefunc -> { . vars guardarCuadruplo regresa } liberarVar
    (34) bloquefunc -> { . guardarCuadruplo escritura regresa } liberarVar
    (35) bloquefunc -> { . }
    (7) vars -> . tipo listaIDS ; masTipos
    (8) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (9) vars -> . empty
    (37) guardarCuadruplo -> .
    (141) tipo -> . ENTERO
    (142) tipo -> . DECIMAL
    (143) tipo -> . BOOL
    (144) tipo -> . VOID
    (145) tipo -> . CUADRADO
    (146) tipo -> . RECTANGULO
    (147) tipo -> . CIRCULO
    (148) tipo -> . LINEA
    (149) tipo -> . ESTRELLA
    (157) empty -> .

  ! reduce/reduce conflict for DIBUJAR resolved using rule 37 (guardarCuadruplo -> .)
  ! reduce/reduce conflict for MUEVE resolved using rule 37 (guardarCuadruplo -> .)
    }               shift and go to state 108
    DIBUJAR         reduce using rule 37 (guardarCuadruplo -> .)
    MUEVE           reduce using rule 37 (guardarCuadruplo -> .)
    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8
    RETURN          reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    IF              reduce using rule 157 (empty -> .)
    LEER            reduce using rule 157 (empty -> .)
    WHILE           reduce using rule 157 (empty -> .)

  ! DIBUJAR         [ reduce using rule 157 (empty -> .) ]
  ! MUEVE           [ reduce using rule 157 (empty -> .) ]

    guardarCuadruplo               shift and go to state 107
    vars                           shift and go to state 106
    tipo                           shift and go to state 4
    empty                          shift and go to state 5

state 83

    (24) restoFuncion -> ( param ) bloquefunc .

    FUNC            reduce using rule 24 (restoFuncion -> ( param ) bloquefunc .)
    INICIO          reduce using rule 24 (restoFuncion -> ( param ) bloquefunc .)


state 84

    (45) estatutoAux -> estatuto .

    }               reduce using rule 45 (estatutoAux -> estatuto .)
    RETURN          reduce using rule 45 (estatutoAux -> estatuto .)


state 85

    (46) estatutoAux -> empty .

    }               reduce using rule 46 (estatutoAux -> empty .)
    RETURN          reduce using rule 46 (estatutoAux -> empty .)


state 86

    (44) estatuto -> funcs estatutoAux .

    }               reduce using rule 44 (estatuto -> funcs estatutoAux .)
    RETURN          reduce using rule 44 (estatuto -> funcs estatutoAux .)


state 87

    (127) whiles -> WHILE checarWhile . ( expresion ) checarContenido bloqueCond finPilaSaltosWhile

    (               shift and go to state 109


state 88

    (150) mueve -> MUEVE guardarToken . opcionMue
    (151) opcionMue -> . direccion ID guardarIDPila recibe_CTI checarMover ;
    (152) direccion -> . IZQUIERDA
    (153) direccion -> . DERECHA
    (154) direccion -> . ARRIBA
    (155) direccion -> . ABAJO

    IZQUIERDA       shift and go to state 112
    DERECHA         shift and go to state 114
    ARRIBA          shift and go to state 113
    ABAJO           shift and go to state 110

    direccion                      shift and go to state 111
    opcionMue                      shift and go to state 115

state 89

    (4) bloque -> { vars guardarCuadruplo estatuto } .

    FIN             reduce using rule 4 (bloque -> { vars guardarCuadruplo estatuto } .)


state 90

    (41) estatuto -> condicion estatutoAux .

    }               reduce using rule 41 (estatuto -> condicion estatutoAux .)
    RETURN          reduce using rule 41 (estatuto -> condicion estatutoAux .)


state 91

    (42) estatuto -> lectura estatutoAux .

    }               reduce using rule 42 (estatuto -> lectura estatutoAux .)
    RETURN          reduce using rule 42 (estatuto -> lectura estatutoAux .)


state 92

    (43) estatuto -> whiles estatutoAux .

    }               reduce using rule 43 (estatuto -> whiles estatutoAux .)
    RETURN          reduce using rule 43 (estatuto -> whiles estatutoAux .)


state 93

    (61) asignacion -> ID guardarIDPila . opcionAsignacion valorAsig ; checarOperadorIgual
    (65) opcionAsignacion -> . [ CTI ]
    (66) opcionAsignacion -> . [ CTI ] [ CTI ]
    (67) opcionAsignacion -> . empty
    (157) empty -> .

    [               shift and go to state 117
    =               reduce using rule 157 (empty -> .)
    ;               reduce using rule 157 (empty -> .)

    opcionAsignacion               shift and go to state 116
    empty                          shift and go to state 118

state 94

    (49) funcs -> ID guardarIDFunc . verProc generarERA auxExp checaNumParam generaGOSUB
    (52) verProc -> .

    (               reduce using rule 52 (verProc -> .)

    verProc                        shift and go to state 119

state 95

    (62) asignacion -> ID ; .

    ID              reduce using rule 62 (asignacion -> ID ; .)
    DIBUJAR         reduce using rule 62 (asignacion -> ID ; .)
    IF              reduce using rule 62 (asignacion -> ID ; .)
    LEER            reduce using rule 62 (asignacion -> ID ; .)
    WHILE           reduce using rule 62 (asignacion -> ID ; .)
    MUEVE           reduce using rule 62 (asignacion -> ID ; .)
    }               reduce using rule 62 (asignacion -> ID ; .)
    RETURN          reduce using rule 62 (asignacion -> ID ; .)


state 96

    (85) condicion -> IF ( . expresion ) checarIF bloqueCond finPilaSaltos
    (86) condicion -> IF ( . expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos
    (95) expresion -> . exp operacionLogica checaoperador6
    (96) expresion -> . exp
    (108) exp -> . termino checaroperador4
    (117) termino -> . factor checaroperador5
    (124) factor -> . fondoFalso expresion finFondoFalso
    (125) factor -> . varcte
    (109) fondoFalso -> . (
    (131) varcte -> . recibe_ID
    (132) varcte -> . recibe_CTF
    (133) varcte -> . recibe_CTI
    (134) varcte -> . recibe_TRUE
    (135) varcte -> . recibe_FALSE
    (136) recibe_ID -> . ID
    (137) recibe_CTF -> . CTF
    (138) recibe_CTI -> . CTI
    (139) recibe_TRUE -> . TRUE
    (140) recibe_FALSE -> . FALSE

    (               shift and go to state 127
    ID              shift and go to state 130
    CTF             shift and go to state 120
    CTI             shift and go to state 123
    TRUE            shift and go to state 122
    FALSE           shift and go to state 132

    expresion                      shift and go to state 131
    recibe_TRUE                    shift and go to state 124
    recibe_CTF                     shift and go to state 126
    recibe_CTI                     shift and go to state 133
    varcte                         shift and go to state 125
    factor                         shift and go to state 129
    recibe_ID                      shift and go to state 128
    termino                        shift and go to state 121
    exp                            shift and go to state 134
    recibe_FALSE                   shift and go to state 136
    fondoFalso                     shift and go to state 135

state 97

    (73) lectura -> LEER guardarToken . ID guardarIDPila checarLectura opcionesLectura ;

    ID              shift and go to state 137


state 98

    (39) estatuto -> asignacion estatutoAux .

    }               reduce using rule 39 (estatuto -> asignacion estatutoAux .)
    RETURN          reduce using rule 39 (estatuto -> asignacion estatutoAux .)


state 99

    (79) escritura -> DIBUJAR guardarToken . ( guardarParametros ) ;

    (               shift and go to state 138


state 100

    (40) estatuto -> escritura estatutoAux .

    }               reduce using rule 40 (estatuto -> escritura estatutoAux .)
    RETURN          reduce using rule 40 (estatuto -> escritura estatutoAux .)


state 101

    (15) masIDS2 -> , ID guardarIDs . masIDS
    (13) masIDS -> . , ID guardarIDs masIDS2
    (14) masIDS -> . empty
    (157) empty -> .

    ,               shift and go to state 29
    ;               reduce using rule 157 (empty -> .)

    masIDS                         shift and go to state 139
    empty                          shift and go to state 33

state 102

    (18) matriz -> [ CTI ] .

    ;               reduce using rule 18 (matriz -> [ CTI ] .)


state 103

    (26) param -> tipo ID guardarIDParam maspaID .

    )               reduce using rule 26 (param -> tipo ID guardarIDParam maspaID .)


state 104

    (30) maspaID -> , . param
    (26) param -> . tipo ID guardarIDParam maspaID
    (27) param -> . empty
    (141) tipo -> . ENTERO
    (142) tipo -> . DECIMAL
    (143) tipo -> . BOOL
    (144) tipo -> . VOID
    (145) tipo -> . CUADRADO
    (146) tipo -> . RECTANGULO
    (147) tipo -> . CIRCULO
    (148) tipo -> . LINEA
    (149) tipo -> . ESTRELLA
    (157) empty -> .

    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8
    )               reduce using rule 157 (empty -> .)

    empty                          shift and go to state 50
    tipo                           shift and go to state 48
    param                          shift and go to state 140

state 105

    (31) maspaID -> empty .

    )               reduce using rule 31 (maspaID -> empty .)


state 106

    (32) bloquefunc -> { vars . guardarCuadruplo estatuto regresa } liberarVar
    (33) bloquefunc -> { vars . guardarCuadruplo regresa } liberarVar
    (37) guardarCuadruplo -> .

    RETURN          reduce using rule 37 (guardarCuadruplo -> .)
    ID              reduce using rule 37 (guardarCuadruplo -> .)
    DIBUJAR         reduce using rule 37 (guardarCuadruplo -> .)
    IF              reduce using rule 37 (guardarCuadruplo -> .)
    LEER            reduce using rule 37 (guardarCuadruplo -> .)
    WHILE           reduce using rule 37 (guardarCuadruplo -> .)
    MUEVE           reduce using rule 37 (guardarCuadruplo -> .)

    guardarCuadruplo               shift and go to state 141

state 107

    (34) bloquefunc -> { guardarCuadruplo . escritura regresa } liberarVar
    (79) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (80) escritura -> . mueve
    (150) mueve -> . MUEVE guardarToken opcionMue

    DIBUJAR         shift and go to state 76
    MUEVE           shift and go to state 66

    mueve                          shift and go to state 68
    escritura                      shift and go to state 142

state 108

    (35) bloquefunc -> { } .

    FUNC            reduce using rule 35 (bloquefunc -> { } .)
    INICIO          reduce using rule 35 (bloquefunc -> { } .)


state 109

    (127) whiles -> WHILE checarWhile ( . expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (95) expresion -> . exp operacionLogica checaoperador6
    (96) expresion -> . exp
    (108) exp -> . termino checaroperador4
    (117) termino -> . factor checaroperador5
    (124) factor -> . fondoFalso expresion finFondoFalso
    (125) factor -> . varcte
    (109) fondoFalso -> . (
    (131) varcte -> . recibe_ID
    (132) varcte -> . recibe_CTF
    (133) varcte -> . recibe_CTI
    (134) varcte -> . recibe_TRUE
    (135) varcte -> . recibe_FALSE
    (136) recibe_ID -> . ID
    (137) recibe_CTF -> . CTF
    (138) recibe_CTI -> . CTI
    (139) recibe_TRUE -> . TRUE
    (140) recibe_FALSE -> . FALSE

    (               shift and go to state 127
    ID              shift and go to state 130
    CTF             shift and go to state 120
    CTI             shift and go to state 123
    TRUE            shift and go to state 122
    FALSE           shift and go to state 132

    expresion                      shift and go to state 143
    varcte                         shift and go to state 125
    recibe_TRUE                    shift and go to state 124
    recibe_CTF                     shift and go to state 126
    recibe_CTI                     shift and go to state 133
    factor                         shift and go to state 129
    recibe_ID                      shift and go to state 128
    termino                        shift and go to state 121
    exp                            shift and go to state 134
    recibe_FALSE                   shift and go to state 136
    fondoFalso                     shift and go to state 135

state 110

    (155) direccion -> ABAJO .

    ID              reduce using rule 155 (direccion -> ABAJO .)


state 111

    (151) opcionMue -> direccion . ID guardarIDPila recibe_CTI checarMover ;

    ID              shift and go to state 144


state 112

    (152) direccion -> IZQUIERDA .

    ID              reduce using rule 152 (direccion -> IZQUIERDA .)


state 113

    (154) direccion -> ARRIBA .

    ID              reduce using rule 154 (direccion -> ARRIBA .)


state 114

    (153) direccion -> DERECHA .

    ID              reduce using rule 153 (direccion -> DERECHA .)


state 115

    (150) mueve -> MUEVE guardarToken opcionMue .

    ID              reduce using rule 150 (mueve -> MUEVE guardarToken opcionMue .)
    DIBUJAR         reduce using rule 150 (mueve -> MUEVE guardarToken opcionMue .)
    IF              reduce using rule 150 (mueve -> MUEVE guardarToken opcionMue .)
    LEER            reduce using rule 150 (mueve -> MUEVE guardarToken opcionMue .)
    WHILE           reduce using rule 150 (mueve -> MUEVE guardarToken opcionMue .)
    MUEVE           reduce using rule 150 (mueve -> MUEVE guardarToken opcionMue .)
    }               reduce using rule 150 (mueve -> MUEVE guardarToken opcionMue .)
    RETURN          reduce using rule 150 (mueve -> MUEVE guardarToken opcionMue .)


state 116

    (61) asignacion -> ID guardarIDPila opcionAsignacion . valorAsig ; checarOperadorIgual
    (68) valorAsig -> . = exp
    (69) valorAsig -> . = funcs
    (70) valorAsig -> . empty
    (157) empty -> .

    =               shift and go to state 146
    ;               reduce using rule 157 (empty -> .)

    valorAsig                      shift and go to state 145
    empty                          shift and go to state 147

state 117

    (65) opcionAsignacion -> [ . CTI ]
    (66) opcionAsignacion -> [ . CTI ] [ CTI ]

    CTI             shift and go to state 148


state 118

    (67) opcionAsignacion -> empty .

    =               reduce using rule 67 (opcionAsignacion -> empty .)
    ;               reduce using rule 67 (opcionAsignacion -> empty .)


state 119

    (49) funcs -> ID guardarIDFunc verProc . generarERA auxExp checaNumParam generaGOSUB
    (53) generarERA -> . (

    (               shift and go to state 149

    generarERA                     shift and go to state 150

state 120

    (137) recibe_CTF -> CTF .

    *               reduce using rule 137 (recibe_CTF -> CTF .)
    /               reduce using rule 137 (recibe_CTF -> CTF .)
    +               reduce using rule 137 (recibe_CTF -> CTF .)
    -               reduce using rule 137 (recibe_CTF -> CTF .)
    >               reduce using rule 137 (recibe_CTF -> CTF .)
    <               reduce using rule 137 (recibe_CTF -> CTF .)
    MENORIGUAL      reduce using rule 137 (recibe_CTF -> CTF .)
    MAYORIGUAL      reduce using rule 137 (recibe_CTF -> CTF .)
    IGUALIGUAL      reduce using rule 137 (recibe_CTF -> CTF .)
    DIFERENTE       reduce using rule 137 (recibe_CTF -> CTF .)
    |               reduce using rule 137 (recibe_CTF -> CTF .)
    COAND           reduce using rule 137 (recibe_CTF -> CTF .)
    )               reduce using rule 137 (recibe_CTF -> CTF .)
    ;               reduce using rule 137 (recibe_CTF -> CTF .)
    ,               reduce using rule 137 (recibe_CTF -> CTF .)


state 121

    (108) exp -> termino . checaroperador4
    (111) checaroperador4 -> . signo
    (112) checaroperador4 -> .
    (113) signo -> . push_pm exp
    (114) signo -> .
    (115) push_pm -> . +
    (116) push_pm -> . -

  ! reduce/reduce conflict for > resolved using rule 112 (checaroperador4 -> .)
  ! reduce/reduce conflict for < resolved using rule 112 (checaroperador4 -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 112 (checaroperador4 -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 112 (checaroperador4 -> .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 112 (checaroperador4 -> .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 112 (checaroperador4 -> .)
  ! reduce/reduce conflict for | resolved using rule 112 (checaroperador4 -> .)
  ! reduce/reduce conflict for COAND resolved using rule 112 (checaroperador4 -> .)
  ! reduce/reduce conflict for ) resolved using rule 112 (checaroperador4 -> .)
  ! reduce/reduce conflict for ; resolved using rule 112 (checaroperador4 -> .)
  ! reduce/reduce conflict for , resolved using rule 112 (checaroperador4 -> .)
    >               reduce using rule 112 (checaroperador4 -> .)
    <               reduce using rule 112 (checaroperador4 -> .)
    MENORIGUAL      reduce using rule 112 (checaroperador4 -> .)
    MAYORIGUAL      reduce using rule 112 (checaroperador4 -> .)
    IGUALIGUAL      reduce using rule 112 (checaroperador4 -> .)
    DIFERENTE       reduce using rule 112 (checaroperador4 -> .)
    |               reduce using rule 112 (checaroperador4 -> .)
    COAND           reduce using rule 112 (checaroperador4 -> .)
    )               reduce using rule 112 (checaroperador4 -> .)
    ;               reduce using rule 112 (checaroperador4 -> .)
    ,               reduce using rule 112 (checaroperador4 -> .)
    +               shift and go to state 151
    -               shift and go to state 153

  ! >               [ reduce using rule 114 (signo -> .) ]
  ! <               [ reduce using rule 114 (signo -> .) ]
  ! MENORIGUAL      [ reduce using rule 114 (signo -> .) ]
  ! MAYORIGUAL      [ reduce using rule 114 (signo -> .) ]
  ! IGUALIGUAL      [ reduce using rule 114 (signo -> .) ]
  ! DIFERENTE       [ reduce using rule 114 (signo -> .) ]
  ! |               [ reduce using rule 114 (signo -> .) ]
  ! COAND           [ reduce using rule 114 (signo -> .) ]
  ! )               [ reduce using rule 114 (signo -> .) ]
  ! ;               [ reduce using rule 114 (signo -> .) ]
  ! ,               [ reduce using rule 114 (signo -> .) ]

    push_pm                        shift and go to state 155
    signo                          shift and go to state 152
    checaroperador4                shift and go to state 154

state 122

    (139) recibe_TRUE -> TRUE .

    *               reduce using rule 139 (recibe_TRUE -> TRUE .)
    /               reduce using rule 139 (recibe_TRUE -> TRUE .)
    +               reduce using rule 139 (recibe_TRUE -> TRUE .)
    -               reduce using rule 139 (recibe_TRUE -> TRUE .)
    )               reduce using rule 139 (recibe_TRUE -> TRUE .)
    >               reduce using rule 139 (recibe_TRUE -> TRUE .)
    <               reduce using rule 139 (recibe_TRUE -> TRUE .)
    MENORIGUAL      reduce using rule 139 (recibe_TRUE -> TRUE .)
    MAYORIGUAL      reduce using rule 139 (recibe_TRUE -> TRUE .)
    IGUALIGUAL      reduce using rule 139 (recibe_TRUE -> TRUE .)
    DIFERENTE       reduce using rule 139 (recibe_TRUE -> TRUE .)
    |               reduce using rule 139 (recibe_TRUE -> TRUE .)
    COAND           reduce using rule 139 (recibe_TRUE -> TRUE .)
    ;               reduce using rule 139 (recibe_TRUE -> TRUE .)
    ,               reduce using rule 139 (recibe_TRUE -> TRUE .)


state 123

    (138) recibe_CTI -> CTI .

    *               reduce using rule 138 (recibe_CTI -> CTI .)
    /               reduce using rule 138 (recibe_CTI -> CTI .)
    +               reduce using rule 138 (recibe_CTI -> CTI .)
    -               reduce using rule 138 (recibe_CTI -> CTI .)
    ;               reduce using rule 138 (recibe_CTI -> CTI .)
    )               reduce using rule 138 (recibe_CTI -> CTI .)
    >               reduce using rule 138 (recibe_CTI -> CTI .)
    <               reduce using rule 138 (recibe_CTI -> CTI .)
    MENORIGUAL      reduce using rule 138 (recibe_CTI -> CTI .)
    MAYORIGUAL      reduce using rule 138 (recibe_CTI -> CTI .)
    IGUALIGUAL      reduce using rule 138 (recibe_CTI -> CTI .)
    DIFERENTE       reduce using rule 138 (recibe_CTI -> CTI .)
    |               reduce using rule 138 (recibe_CTI -> CTI .)
    COAND           reduce using rule 138 (recibe_CTI -> CTI .)
    ,               reduce using rule 138 (recibe_CTI -> CTI .)


state 124

    (134) varcte -> recibe_TRUE .

    ,               reduce using rule 134 (varcte -> recibe_TRUE .)
    )               reduce using rule 134 (varcte -> recibe_TRUE .)
    *               reduce using rule 134 (varcte -> recibe_TRUE .)
    /               reduce using rule 134 (varcte -> recibe_TRUE .)
    +               reduce using rule 134 (varcte -> recibe_TRUE .)
    -               reduce using rule 134 (varcte -> recibe_TRUE .)
    >               reduce using rule 134 (varcte -> recibe_TRUE .)
    <               reduce using rule 134 (varcte -> recibe_TRUE .)
    MENORIGUAL      reduce using rule 134 (varcte -> recibe_TRUE .)
    MAYORIGUAL      reduce using rule 134 (varcte -> recibe_TRUE .)
    IGUALIGUAL      reduce using rule 134 (varcte -> recibe_TRUE .)
    DIFERENTE       reduce using rule 134 (varcte -> recibe_TRUE .)
    |               reduce using rule 134 (varcte -> recibe_TRUE .)
    COAND           reduce using rule 134 (varcte -> recibe_TRUE .)
    ;               reduce using rule 134 (varcte -> recibe_TRUE .)


state 125

    (125) factor -> varcte .

    *               reduce using rule 125 (factor -> varcte .)
    /               reduce using rule 125 (factor -> varcte .)
    +               reduce using rule 125 (factor -> varcte .)
    -               reduce using rule 125 (factor -> varcte .)
    >               reduce using rule 125 (factor -> varcte .)
    <               reduce using rule 125 (factor -> varcte .)
    MENORIGUAL      reduce using rule 125 (factor -> varcte .)
    MAYORIGUAL      reduce using rule 125 (factor -> varcte .)
    IGUALIGUAL      reduce using rule 125 (factor -> varcte .)
    DIFERENTE       reduce using rule 125 (factor -> varcte .)
    |               reduce using rule 125 (factor -> varcte .)
    COAND           reduce using rule 125 (factor -> varcte .)
    )               reduce using rule 125 (factor -> varcte .)
    ;               reduce using rule 125 (factor -> varcte .)
    ,               reduce using rule 125 (factor -> varcte .)


state 126

    (132) varcte -> recibe_CTF .

    ,               reduce using rule 132 (varcte -> recibe_CTF .)
    )               reduce using rule 132 (varcte -> recibe_CTF .)
    *               reduce using rule 132 (varcte -> recibe_CTF .)
    /               reduce using rule 132 (varcte -> recibe_CTF .)
    +               reduce using rule 132 (varcte -> recibe_CTF .)
    -               reduce using rule 132 (varcte -> recibe_CTF .)
    >               reduce using rule 132 (varcte -> recibe_CTF .)
    <               reduce using rule 132 (varcte -> recibe_CTF .)
    MENORIGUAL      reduce using rule 132 (varcte -> recibe_CTF .)
    MAYORIGUAL      reduce using rule 132 (varcte -> recibe_CTF .)
    IGUALIGUAL      reduce using rule 132 (varcte -> recibe_CTF .)
    DIFERENTE       reduce using rule 132 (varcte -> recibe_CTF .)
    |               reduce using rule 132 (varcte -> recibe_CTF .)
    COAND           reduce using rule 132 (varcte -> recibe_CTF .)
    ;               reduce using rule 132 (varcte -> recibe_CTF .)


state 127

    (109) fondoFalso -> ( .

    (               reduce using rule 109 (fondoFalso -> ( .)
    ID              reduce using rule 109 (fondoFalso -> ( .)
    CTF             reduce using rule 109 (fondoFalso -> ( .)
    CTI             reduce using rule 109 (fondoFalso -> ( .)
    TRUE            reduce using rule 109 (fondoFalso -> ( .)
    FALSE           reduce using rule 109 (fondoFalso -> ( .)


state 128

    (131) varcte -> recibe_ID .

    ,               reduce using rule 131 (varcte -> recibe_ID .)
    )               reduce using rule 131 (varcte -> recibe_ID .)
    *               reduce using rule 131 (varcte -> recibe_ID .)
    /               reduce using rule 131 (varcte -> recibe_ID .)
    +               reduce using rule 131 (varcte -> recibe_ID .)
    -               reduce using rule 131 (varcte -> recibe_ID .)
    >               reduce using rule 131 (varcte -> recibe_ID .)
    <               reduce using rule 131 (varcte -> recibe_ID .)
    MENORIGUAL      reduce using rule 131 (varcte -> recibe_ID .)
    MAYORIGUAL      reduce using rule 131 (varcte -> recibe_ID .)
    IGUALIGUAL      reduce using rule 131 (varcte -> recibe_ID .)
    DIFERENTE       reduce using rule 131 (varcte -> recibe_ID .)
    |               reduce using rule 131 (varcte -> recibe_ID .)
    COAND           reduce using rule 131 (varcte -> recibe_ID .)
    ;               reduce using rule 131 (varcte -> recibe_ID .)


state 129

    (117) termino -> factor . checaroperador5
    (118) checaroperador5 -> . masop
    (119) checaroperador5 -> .
    (120) masop -> . push_td termino
    (121) masop -> .
    (122) push_td -> . *
    (123) push_td -> . /

  ! reduce/reduce conflict for + resolved using rule 119 (checaroperador5 -> .)
  ! reduce/reduce conflict for - resolved using rule 119 (checaroperador5 -> .)
  ! reduce/reduce conflict for > resolved using rule 119 (checaroperador5 -> .)
  ! reduce/reduce conflict for < resolved using rule 119 (checaroperador5 -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 119 (checaroperador5 -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 119 (checaroperador5 -> .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 119 (checaroperador5 -> .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 119 (checaroperador5 -> .)
  ! reduce/reduce conflict for | resolved using rule 119 (checaroperador5 -> .)
  ! reduce/reduce conflict for COAND resolved using rule 119 (checaroperador5 -> .)
  ! reduce/reduce conflict for ) resolved using rule 119 (checaroperador5 -> .)
  ! reduce/reduce conflict for ; resolved using rule 119 (checaroperador5 -> .)
  ! reduce/reduce conflict for , resolved using rule 119 (checaroperador5 -> .)
    +               reduce using rule 119 (checaroperador5 -> .)
    -               reduce using rule 119 (checaroperador5 -> .)
    >               reduce using rule 119 (checaroperador5 -> .)
    <               reduce using rule 119 (checaroperador5 -> .)
    MENORIGUAL      reduce using rule 119 (checaroperador5 -> .)
    MAYORIGUAL      reduce using rule 119 (checaroperador5 -> .)
    IGUALIGUAL      reduce using rule 119 (checaroperador5 -> .)
    DIFERENTE       reduce using rule 119 (checaroperador5 -> .)
    |               reduce using rule 119 (checaroperador5 -> .)
    COAND           reduce using rule 119 (checaroperador5 -> .)
    )               reduce using rule 119 (checaroperador5 -> .)
    ;               reduce using rule 119 (checaroperador5 -> .)
    ,               reduce using rule 119 (checaroperador5 -> .)
    *               shift and go to state 156
    /               shift and go to state 157

  ! +               [ reduce using rule 121 (masop -> .) ]
  ! -               [ reduce using rule 121 (masop -> .) ]
  ! >               [ reduce using rule 121 (masop -> .) ]
  ! <               [ reduce using rule 121 (masop -> .) ]
  ! MENORIGUAL      [ reduce using rule 121 (masop -> .) ]
  ! MAYORIGUAL      [ reduce using rule 121 (masop -> .) ]
  ! IGUALIGUAL      [ reduce using rule 121 (masop -> .) ]
  ! DIFERENTE       [ reduce using rule 121 (masop -> .) ]
  ! |               [ reduce using rule 121 (masop -> .) ]
  ! COAND           [ reduce using rule 121 (masop -> .) ]
  ! )               [ reduce using rule 121 (masop -> .) ]
  ! ;               [ reduce using rule 121 (masop -> .) ]
  ! ,               [ reduce using rule 121 (masop -> .) ]

    masop                          shift and go to state 158
    push_td                        shift and go to state 160
    checaroperador5                shift and go to state 159

state 130

    (136) recibe_ID -> ID .

    *               reduce using rule 136 (recibe_ID -> ID .)
    /               reduce using rule 136 (recibe_ID -> ID .)
    +               reduce using rule 136 (recibe_ID -> ID .)
    -               reduce using rule 136 (recibe_ID -> ID .)
    >               reduce using rule 136 (recibe_ID -> ID .)
    <               reduce using rule 136 (recibe_ID -> ID .)
    MENORIGUAL      reduce using rule 136 (recibe_ID -> ID .)
    MAYORIGUAL      reduce using rule 136 (recibe_ID -> ID .)
    IGUALIGUAL      reduce using rule 136 (recibe_ID -> ID .)
    DIFERENTE       reduce using rule 136 (recibe_ID -> ID .)
    |               reduce using rule 136 (recibe_ID -> ID .)
    COAND           reduce using rule 136 (recibe_ID -> ID .)
    )               reduce using rule 136 (recibe_ID -> ID .)
    ,               reduce using rule 136 (recibe_ID -> ID .)
    ;               reduce using rule 136 (recibe_ID -> ID .)


state 131

    (85) condicion -> IF ( expresion . ) checarIF bloqueCond finPilaSaltos
    (86) condicion -> IF ( expresion . ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos

    )               shift and go to state 161


state 132

    (140) recibe_FALSE -> FALSE .

    *               reduce using rule 140 (recibe_FALSE -> FALSE .)
    /               reduce using rule 140 (recibe_FALSE -> FALSE .)
    +               reduce using rule 140 (recibe_FALSE -> FALSE .)
    -               reduce using rule 140 (recibe_FALSE -> FALSE .)
    >               reduce using rule 140 (recibe_FALSE -> FALSE .)
    <               reduce using rule 140 (recibe_FALSE -> FALSE .)
    MENORIGUAL      reduce using rule 140 (recibe_FALSE -> FALSE .)
    MAYORIGUAL      reduce using rule 140 (recibe_FALSE -> FALSE .)
    IGUALIGUAL      reduce using rule 140 (recibe_FALSE -> FALSE .)
    DIFERENTE       reduce using rule 140 (recibe_FALSE -> FALSE .)
    |               reduce using rule 140 (recibe_FALSE -> FALSE .)
    COAND           reduce using rule 140 (recibe_FALSE -> FALSE .)
    )               reduce using rule 140 (recibe_FALSE -> FALSE .)
    ;               reduce using rule 140 (recibe_FALSE -> FALSE .)
    ,               reduce using rule 140 (recibe_FALSE -> FALSE .)


state 133

    (133) varcte -> recibe_CTI .

    ,               reduce using rule 133 (varcte -> recibe_CTI .)
    )               reduce using rule 133 (varcte -> recibe_CTI .)
    *               reduce using rule 133 (varcte -> recibe_CTI .)
    /               reduce using rule 133 (varcte -> recibe_CTI .)
    +               reduce using rule 133 (varcte -> recibe_CTI .)
    -               reduce using rule 133 (varcte -> recibe_CTI .)
    >               reduce using rule 133 (varcte -> recibe_CTI .)
    <               reduce using rule 133 (varcte -> recibe_CTI .)
    MENORIGUAL      reduce using rule 133 (varcte -> recibe_CTI .)
    MAYORIGUAL      reduce using rule 133 (varcte -> recibe_CTI .)
    IGUALIGUAL      reduce using rule 133 (varcte -> recibe_CTI .)
    DIFERENTE       reduce using rule 133 (varcte -> recibe_CTI .)
    |               reduce using rule 133 (varcte -> recibe_CTI .)
    COAND           reduce using rule 133 (varcte -> recibe_CTI .)
    ;               reduce using rule 133 (varcte -> recibe_CTI .)


state 134

    (95) expresion -> exp . operacionLogica checaoperador6
    (96) expresion -> exp .
    (105) operacionLogica -> . push_logica exp
    (106) operacionLogica -> .
    (97) push_logica -> . >
    (98) push_logica -> . <
    (99) push_logica -> . MENORIGUAL
    (100) push_logica -> . MAYORIGUAL
    (101) push_logica -> . IGUALIGUAL
    (102) push_logica -> . DIFERENTE
    (103) push_logica -> . |
    (104) push_logica -> . COAND

  ! reduce/reduce conflict for ) resolved using rule 96 (expresion -> exp .)
    )               reduce using rule 96 (expresion -> exp .)
    >               shift and go to state 171
    <               shift and go to state 170
    MENORIGUAL      shift and go to state 169
    MAYORIGUAL      shift and go to state 168
    IGUALIGUAL      shift and go to state 165
    DIFERENTE       shift and go to state 164
    |               shift and go to state 163
    COAND           shift and go to state 162

  ! )               [ reduce using rule 106 (operacionLogica -> .) ]

    operacionLogica                shift and go to state 166
    push_logica                    shift and go to state 167

state 135

    (124) factor -> fondoFalso . expresion finFondoFalso
    (95) expresion -> . exp operacionLogica checaoperador6
    (96) expresion -> . exp
    (108) exp -> . termino checaroperador4
    (117) termino -> . factor checaroperador5
    (124) factor -> . fondoFalso expresion finFondoFalso
    (125) factor -> . varcte
    (109) fondoFalso -> . (
    (131) varcte -> . recibe_ID
    (132) varcte -> . recibe_CTF
    (133) varcte -> . recibe_CTI
    (134) varcte -> . recibe_TRUE
    (135) varcte -> . recibe_FALSE
    (136) recibe_ID -> . ID
    (137) recibe_CTF -> . CTF
    (138) recibe_CTI -> . CTI
    (139) recibe_TRUE -> . TRUE
    (140) recibe_FALSE -> . FALSE

    (               shift and go to state 127
    ID              shift and go to state 130
    CTF             shift and go to state 120
    CTI             shift and go to state 123
    TRUE            shift and go to state 122
    FALSE           shift and go to state 132

    expresion                      shift and go to state 172
    recibe_TRUE                    shift and go to state 124
    exp                            shift and go to state 134
    recibe_CTF                     shift and go to state 126
    recibe_CTI                     shift and go to state 133
    varcte                         shift and go to state 125
    factor                         shift and go to state 129
    recibe_ID                      shift and go to state 128
    termino                        shift and go to state 121
    fondoFalso                     shift and go to state 135
    recibe_FALSE                   shift and go to state 136

state 136

    (135) varcte -> recibe_FALSE .

    ,               reduce using rule 135 (varcte -> recibe_FALSE .)
    )               reduce using rule 135 (varcte -> recibe_FALSE .)
    *               reduce using rule 135 (varcte -> recibe_FALSE .)
    /               reduce using rule 135 (varcte -> recibe_FALSE .)
    +               reduce using rule 135 (varcte -> recibe_FALSE .)
    -               reduce using rule 135 (varcte -> recibe_FALSE .)
    >               reduce using rule 135 (varcte -> recibe_FALSE .)
    <               reduce using rule 135 (varcte -> recibe_FALSE .)
    MENORIGUAL      reduce using rule 135 (varcte -> recibe_FALSE .)
    MAYORIGUAL      reduce using rule 135 (varcte -> recibe_FALSE .)
    IGUALIGUAL      reduce using rule 135 (varcte -> recibe_FALSE .)
    DIFERENTE       reduce using rule 135 (varcte -> recibe_FALSE .)
    |               reduce using rule 135 (varcte -> recibe_FALSE .)
    COAND           reduce using rule 135 (varcte -> recibe_FALSE .)
    ;               reduce using rule 135 (varcte -> recibe_FALSE .)


state 137

    (73) lectura -> LEER guardarToken ID . guardarIDPila checarLectura opcionesLectura ;
    (63) guardarIDPila -> .

    [               reduce using rule 63 (guardarIDPila -> .)
    ;               reduce using rule 63 (guardarIDPila -> .)

    guardarIDPila                  shift and go to state 173

state 138

    (79) escritura -> DIBUJAR guardarToken ( . guardarParametros ) ;
    (77) guardarParametros -> . ID guardarIDPila pos color checarDibujar

    ID              shift and go to state 175

    guardarParametros              shift and go to state 174

state 139

    (15) masIDS2 -> , ID guardarIDs masIDS .

    ;               reduce using rule 15 (masIDS2 -> , ID guardarIDs masIDS .)


state 140

    (30) maspaID -> , param .

    )               reduce using rule 30 (maspaID -> , param .)


state 141

    (32) bloquefunc -> { vars guardarCuadruplo . estatuto regresa } liberarVar
    (33) bloquefunc -> { vars guardarCuadruplo . regresa } liberarVar
    (39) estatuto -> . asignacion estatutoAux
    (40) estatuto -> . escritura estatutoAux
    (41) estatuto -> . condicion estatutoAux
    (42) estatuto -> . lectura estatutoAux
    (43) estatuto -> . whiles estatutoAux
    (44) estatuto -> . funcs estatutoAux
    (38) regresa -> . RETURN ID
    (61) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (62) asignacion -> . ID ;
    (79) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (80) escritura -> . mueve
    (85) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (86) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos
    (73) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (127) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (49) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (50) funcs -> . ID
    (150) mueve -> . MUEVE guardarToken opcionMue

    RETURN          shift and go to state 176
    ID              shift and go to state 72
    DIBUJAR         shift and go to state 76
    IF              shift and go to state 73
    LEER            shift and go to state 74
    WHILE           shift and go to state 65
    MUEVE           shift and go to state 66

    funcs                          shift and go to state 64
    estatuto                       shift and go to state 177
    mueve                          shift and go to state 68
    condicion                      shift and go to state 69
    lectura                        shift and go to state 70
    whiles                         shift and go to state 71
    asignacion                     shift and go to state 75
    regresa                        shift and go to state 178
    escritura                      shift and go to state 78

state 142

    (34) bloquefunc -> { guardarCuadruplo escritura . regresa } liberarVar
    (38) regresa -> . RETURN ID

    RETURN          shift and go to state 176

    regresa                        shift and go to state 179

state 143

    (127) whiles -> WHILE checarWhile ( expresion . ) checarContenido bloqueCond finPilaSaltosWhile

    )               shift and go to state 180


state 144

    (151) opcionMue -> direccion ID . guardarIDPila recibe_CTI checarMover ;
    (63) guardarIDPila -> .

    CTI             reduce using rule 63 (guardarIDPila -> .)

    guardarIDPila                  shift and go to state 181

state 145

    (61) asignacion -> ID guardarIDPila opcionAsignacion valorAsig . ; checarOperadorIgual

    ;               shift and go to state 182


state 146

    (68) valorAsig -> = . exp
    (69) valorAsig -> = . funcs
    (108) exp -> . termino checaroperador4
    (49) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (50) funcs -> . ID
    (117) termino -> . factor checaroperador5
    (124) factor -> . fondoFalso expresion finFondoFalso
    (125) factor -> . varcte
    (109) fondoFalso -> . (
    (131) varcte -> . recibe_ID
    (132) varcte -> . recibe_CTF
    (133) varcte -> . recibe_CTI
    (134) varcte -> . recibe_TRUE
    (135) varcte -> . recibe_FALSE
    (136) recibe_ID -> . ID
    (137) recibe_CTF -> . CTF
    (138) recibe_CTI -> . CTI
    (139) recibe_TRUE -> . TRUE
    (140) recibe_FALSE -> . FALSE

    ID              shift and go to state 184
    (               shift and go to state 127
    CTF             shift and go to state 120
    CTI             shift and go to state 123
    TRUE            shift and go to state 122
    FALSE           shift and go to state 132

    funcs                          shift and go to state 183
    recibe_TRUE                    shift and go to state 124
    recibe_CTF                     shift and go to state 126
    recibe_CTI                     shift and go to state 133
    varcte                         shift and go to state 125
    recibe_ID                      shift and go to state 128
    termino                        shift and go to state 121
    exp                            shift and go to state 185
    factor                         shift and go to state 129
    recibe_FALSE                   shift and go to state 136
    fondoFalso                     shift and go to state 135

state 147

    (70) valorAsig -> empty .

    ;               reduce using rule 70 (valorAsig -> empty .)


state 148

    (65) opcionAsignacion -> [ CTI . ]
    (66) opcionAsignacion -> [ CTI . ] [ CTI ]

    ]               shift and go to state 186


state 149

    (53) generarERA -> ( .

    (               reduce using rule 53 (generarERA -> ( .)
    ID              reduce using rule 53 (generarERA -> ( .)
    CTF             reduce using rule 53 (generarERA -> ( .)
    CTI             reduce using rule 53 (generarERA -> ( .)
    TRUE            reduce using rule 53 (generarERA -> ( .)
    FALSE           reduce using rule 53 (generarERA -> ( .)


state 150

    (49) funcs -> ID guardarIDFunc verProc generarERA . auxExp checaNumParam generaGOSUB
    (54) auxExp -> . listaExp llegaComa
    (55) auxExp -> . listaExp
    (58) listaExp -> . exp verificarTiposFunc masExps
    (108) exp -> . termino checaroperador4
    (117) termino -> . factor checaroperador5
    (124) factor -> . fondoFalso expresion finFondoFalso
    (125) factor -> . varcte
    (109) fondoFalso -> . (
    (131) varcte -> . recibe_ID
    (132) varcte -> . recibe_CTF
    (133) varcte -> . recibe_CTI
    (134) varcte -> . recibe_TRUE
    (135) varcte -> . recibe_FALSE
    (136) recibe_ID -> . ID
    (137) recibe_CTF -> . CTF
    (138) recibe_CTI -> . CTI
    (139) recibe_TRUE -> . TRUE
    (140) recibe_FALSE -> . FALSE

    (               shift and go to state 127
    ID              shift and go to state 130
    CTF             shift and go to state 120
    CTI             shift and go to state 123
    TRUE            shift and go to state 122
    FALSE           shift and go to state 132

    listaExp                       shift and go to state 187
    termino                        shift and go to state 121
    recibe_TRUE                    shift and go to state 124
    varcte                         shift and go to state 125
    recibe_CTF                     shift and go to state 126
    recibe_CTI                     shift and go to state 133
    recibe_ID                      shift and go to state 128
    factor                         shift and go to state 129
    exp                            shift and go to state 188
    auxExp                         shift and go to state 189
    fondoFalso                     shift and go to state 135
    recibe_FALSE                   shift and go to state 136

state 151

    (115) push_pm -> + .

    (               reduce using rule 115 (push_pm -> + .)
    ID              reduce using rule 115 (push_pm -> + .)
    CTF             reduce using rule 115 (push_pm -> + .)
    CTI             reduce using rule 115 (push_pm -> + .)
    TRUE            reduce using rule 115 (push_pm -> + .)
    FALSE           reduce using rule 115 (push_pm -> + .)


state 152

    (111) checaroperador4 -> signo .

    >               reduce using rule 111 (checaroperador4 -> signo .)
    <               reduce using rule 111 (checaroperador4 -> signo .)
    MENORIGUAL      reduce using rule 111 (checaroperador4 -> signo .)
    MAYORIGUAL      reduce using rule 111 (checaroperador4 -> signo .)
    IGUALIGUAL      reduce using rule 111 (checaroperador4 -> signo .)
    DIFERENTE       reduce using rule 111 (checaroperador4 -> signo .)
    |               reduce using rule 111 (checaroperador4 -> signo .)
    COAND           reduce using rule 111 (checaroperador4 -> signo .)
    )               reduce using rule 111 (checaroperador4 -> signo .)
    ;               reduce using rule 111 (checaroperador4 -> signo .)
    ,               reduce using rule 111 (checaroperador4 -> signo .)


state 153

    (116) push_pm -> - .

    (               reduce using rule 116 (push_pm -> - .)
    ID              reduce using rule 116 (push_pm -> - .)
    CTF             reduce using rule 116 (push_pm -> - .)
    CTI             reduce using rule 116 (push_pm -> - .)
    TRUE            reduce using rule 116 (push_pm -> - .)
    FALSE           reduce using rule 116 (push_pm -> - .)


state 154

    (108) exp -> termino checaroperador4 .

    >               reduce using rule 108 (exp -> termino checaroperador4 .)
    <               reduce using rule 108 (exp -> termino checaroperador4 .)
    MENORIGUAL      reduce using rule 108 (exp -> termino checaroperador4 .)
    MAYORIGUAL      reduce using rule 108 (exp -> termino checaroperador4 .)
    IGUALIGUAL      reduce using rule 108 (exp -> termino checaroperador4 .)
    DIFERENTE       reduce using rule 108 (exp -> termino checaroperador4 .)
    |               reduce using rule 108 (exp -> termino checaroperador4 .)
    COAND           reduce using rule 108 (exp -> termino checaroperador4 .)
    )               reduce using rule 108 (exp -> termino checaroperador4 .)
    ;               reduce using rule 108 (exp -> termino checaroperador4 .)
    ,               reduce using rule 108 (exp -> termino checaroperador4 .)


state 155

    (113) signo -> push_pm . exp
    (108) exp -> . termino checaroperador4
    (117) termino -> . factor checaroperador5
    (124) factor -> . fondoFalso expresion finFondoFalso
    (125) factor -> . varcte
    (109) fondoFalso -> . (
    (131) varcte -> . recibe_ID
    (132) varcte -> . recibe_CTF
    (133) varcte -> . recibe_CTI
    (134) varcte -> . recibe_TRUE
    (135) varcte -> . recibe_FALSE
    (136) recibe_ID -> . ID
    (137) recibe_CTF -> . CTF
    (138) recibe_CTI -> . CTI
    (139) recibe_TRUE -> . TRUE
    (140) recibe_FALSE -> . FALSE

    (               shift and go to state 127
    ID              shift and go to state 130
    CTF             shift and go to state 120
    CTI             shift and go to state 123
    TRUE            shift and go to state 122
    FALSE           shift and go to state 132

    varcte                         shift and go to state 125
    recibe_TRUE                    shift and go to state 124
    exp                            shift and go to state 190
    recibe_CTF                     shift and go to state 126
    recibe_CTI                     shift and go to state 133
    recibe_ID                      shift and go to state 128
    termino                        shift and go to state 121
    factor                         shift and go to state 129
    recibe_FALSE                   shift and go to state 136
    fondoFalso                     shift and go to state 135

state 156

    (122) push_td -> * .

    (               reduce using rule 122 (push_td -> * .)
    ID              reduce using rule 122 (push_td -> * .)
    CTF             reduce using rule 122 (push_td -> * .)
    CTI             reduce using rule 122 (push_td -> * .)
    TRUE            reduce using rule 122 (push_td -> * .)
    FALSE           reduce using rule 122 (push_td -> * .)


state 157

    (123) push_td -> / .

    (               reduce using rule 123 (push_td -> / .)
    ID              reduce using rule 123 (push_td -> / .)
    CTF             reduce using rule 123 (push_td -> / .)
    CTI             reduce using rule 123 (push_td -> / .)
    TRUE            reduce using rule 123 (push_td -> / .)
    FALSE           reduce using rule 123 (push_td -> / .)


state 158

    (118) checaroperador5 -> masop .

    +               reduce using rule 118 (checaroperador5 -> masop .)
    -               reduce using rule 118 (checaroperador5 -> masop .)
    >               reduce using rule 118 (checaroperador5 -> masop .)
    <               reduce using rule 118 (checaroperador5 -> masop .)
    MENORIGUAL      reduce using rule 118 (checaroperador5 -> masop .)
    MAYORIGUAL      reduce using rule 118 (checaroperador5 -> masop .)
    IGUALIGUAL      reduce using rule 118 (checaroperador5 -> masop .)
    DIFERENTE       reduce using rule 118 (checaroperador5 -> masop .)
    |               reduce using rule 118 (checaroperador5 -> masop .)
    COAND           reduce using rule 118 (checaroperador5 -> masop .)
    )               reduce using rule 118 (checaroperador5 -> masop .)
    ;               reduce using rule 118 (checaroperador5 -> masop .)
    ,               reduce using rule 118 (checaroperador5 -> masop .)


state 159

    (117) termino -> factor checaroperador5 .

    +               reduce using rule 117 (termino -> factor checaroperador5 .)
    -               reduce using rule 117 (termino -> factor checaroperador5 .)
    >               reduce using rule 117 (termino -> factor checaroperador5 .)
    <               reduce using rule 117 (termino -> factor checaroperador5 .)
    MENORIGUAL      reduce using rule 117 (termino -> factor checaroperador5 .)
    MAYORIGUAL      reduce using rule 117 (termino -> factor checaroperador5 .)
    IGUALIGUAL      reduce using rule 117 (termino -> factor checaroperador5 .)
    DIFERENTE       reduce using rule 117 (termino -> factor checaroperador5 .)
    |               reduce using rule 117 (termino -> factor checaroperador5 .)
    COAND           reduce using rule 117 (termino -> factor checaroperador5 .)
    )               reduce using rule 117 (termino -> factor checaroperador5 .)
    ,               reduce using rule 117 (termino -> factor checaroperador5 .)
    ;               reduce using rule 117 (termino -> factor checaroperador5 .)


state 160

    (120) masop -> push_td . termino
    (117) termino -> . factor checaroperador5
    (124) factor -> . fondoFalso expresion finFondoFalso
    (125) factor -> . varcte
    (109) fondoFalso -> . (
    (131) varcte -> . recibe_ID
    (132) varcte -> . recibe_CTF
    (133) varcte -> . recibe_CTI
    (134) varcte -> . recibe_TRUE
    (135) varcte -> . recibe_FALSE
    (136) recibe_ID -> . ID
    (137) recibe_CTF -> . CTF
    (138) recibe_CTI -> . CTI
    (139) recibe_TRUE -> . TRUE
    (140) recibe_FALSE -> . FALSE

    (               shift and go to state 127
    ID              shift and go to state 130
    CTF             shift and go to state 120
    CTI             shift and go to state 123
    TRUE            shift and go to state 122
    FALSE           shift and go to state 132

    recibe_TRUE                    shift and go to state 124
    varcte                         shift and go to state 125
    recibe_CTF                     shift and go to state 126
    recibe_CTI                     shift and go to state 133
    recibe_ID                      shift and go to state 128
    termino                        shift and go to state 191
    factor                         shift and go to state 129
    recibe_FALSE                   shift and go to state 136
    fondoFalso                     shift and go to state 135

state 161

    (85) condicion -> IF ( expresion ) . checarIF bloqueCond finPilaSaltos
    (86) condicion -> IF ( expresion ) . checarIF bloqueCond checarElse bloqueCond finPilaSaltos
    (92) checarIF -> .

    {               reduce using rule 92 (checarIF -> .)

    checarIF                       shift and go to state 192

state 162

    (104) push_logica -> COAND .

    (               reduce using rule 104 (push_logica -> COAND .)
    ID              reduce using rule 104 (push_logica -> COAND .)
    CTF             reduce using rule 104 (push_logica -> COAND .)
    CTI             reduce using rule 104 (push_logica -> COAND .)
    TRUE            reduce using rule 104 (push_logica -> COAND .)
    FALSE           reduce using rule 104 (push_logica -> COAND .)


state 163

    (103) push_logica -> | .

    (               reduce using rule 103 (push_logica -> | .)
    ID              reduce using rule 103 (push_logica -> | .)
    CTF             reduce using rule 103 (push_logica -> | .)
    CTI             reduce using rule 103 (push_logica -> | .)
    TRUE            reduce using rule 103 (push_logica -> | .)
    FALSE           reduce using rule 103 (push_logica -> | .)


state 164

    (102) push_logica -> DIFERENTE .

    (               reduce using rule 102 (push_logica -> DIFERENTE .)
    ID              reduce using rule 102 (push_logica -> DIFERENTE .)
    CTF             reduce using rule 102 (push_logica -> DIFERENTE .)
    CTI             reduce using rule 102 (push_logica -> DIFERENTE .)
    TRUE            reduce using rule 102 (push_logica -> DIFERENTE .)
    FALSE           reduce using rule 102 (push_logica -> DIFERENTE .)


state 165

    (101) push_logica -> IGUALIGUAL .

    (               reduce using rule 101 (push_logica -> IGUALIGUAL .)
    ID              reduce using rule 101 (push_logica -> IGUALIGUAL .)
    CTF             reduce using rule 101 (push_logica -> IGUALIGUAL .)
    CTI             reduce using rule 101 (push_logica -> IGUALIGUAL .)
    TRUE            reduce using rule 101 (push_logica -> IGUALIGUAL .)
    FALSE           reduce using rule 101 (push_logica -> IGUALIGUAL .)


state 166

    (95) expresion -> exp operacionLogica . checaoperador6
    (107) checaoperador6 -> .

    )               reduce using rule 107 (checaoperador6 -> .)

    checaoperador6                 shift and go to state 193

state 167

    (105) operacionLogica -> push_logica . exp
    (108) exp -> . termino checaroperador4
    (117) termino -> . factor checaroperador5
    (124) factor -> . fondoFalso expresion finFondoFalso
    (125) factor -> . varcte
    (109) fondoFalso -> . (
    (131) varcte -> . recibe_ID
    (132) varcte -> . recibe_CTF
    (133) varcte -> . recibe_CTI
    (134) varcte -> . recibe_TRUE
    (135) varcte -> . recibe_FALSE
    (136) recibe_ID -> . ID
    (137) recibe_CTF -> . CTF
    (138) recibe_CTI -> . CTI
    (139) recibe_TRUE -> . TRUE
    (140) recibe_FALSE -> . FALSE

    (               shift and go to state 127
    ID              shift and go to state 130
    CTF             shift and go to state 120
    CTI             shift and go to state 123
    TRUE            shift and go to state 122
    FALSE           shift and go to state 132

    varcte                         shift and go to state 125
    recibe_TRUE                    shift and go to state 124
    exp                            shift and go to state 194
    recibe_CTF                     shift and go to state 126
    recibe_CTI                     shift and go to state 133
    recibe_ID                      shift and go to state 128
    termino                        shift and go to state 121
    factor                         shift and go to state 129
    recibe_FALSE                   shift and go to state 136
    fondoFalso                     shift and go to state 135

state 168

    (100) push_logica -> MAYORIGUAL .

    (               reduce using rule 100 (push_logica -> MAYORIGUAL .)
    ID              reduce using rule 100 (push_logica -> MAYORIGUAL .)
    CTF             reduce using rule 100 (push_logica -> MAYORIGUAL .)
    CTI             reduce using rule 100 (push_logica -> MAYORIGUAL .)
    TRUE            reduce using rule 100 (push_logica -> MAYORIGUAL .)
    FALSE           reduce using rule 100 (push_logica -> MAYORIGUAL .)


state 169

    (99) push_logica -> MENORIGUAL .

    (               reduce using rule 99 (push_logica -> MENORIGUAL .)
    ID              reduce using rule 99 (push_logica -> MENORIGUAL .)
    CTF             reduce using rule 99 (push_logica -> MENORIGUAL .)
    CTI             reduce using rule 99 (push_logica -> MENORIGUAL .)
    TRUE            reduce using rule 99 (push_logica -> MENORIGUAL .)
    FALSE           reduce using rule 99 (push_logica -> MENORIGUAL .)


state 170

    (98) push_logica -> < .

    (               reduce using rule 98 (push_logica -> < .)
    ID              reduce using rule 98 (push_logica -> < .)
    CTF             reduce using rule 98 (push_logica -> < .)
    CTI             reduce using rule 98 (push_logica -> < .)
    TRUE            reduce using rule 98 (push_logica -> < .)
    FALSE           reduce using rule 98 (push_logica -> < .)


state 171

    (97) push_logica -> > .

    (               reduce using rule 97 (push_logica -> > .)
    ID              reduce using rule 97 (push_logica -> > .)
    CTF             reduce using rule 97 (push_logica -> > .)
    CTI             reduce using rule 97 (push_logica -> > .)
    TRUE            reduce using rule 97 (push_logica -> > .)
    FALSE           reduce using rule 97 (push_logica -> > .)


state 172

    (124) factor -> fondoFalso expresion . finFondoFalso
    (110) finFondoFalso -> . )

    )               shift and go to state 195

    finFondoFalso                  shift and go to state 196

state 173

    (73) lectura -> LEER guardarToken ID guardarIDPila . checarLectura opcionesLectura ;
    (72) checarLectura -> .

    [               reduce using rule 72 (checarLectura -> .)
    ;               reduce using rule 72 (checarLectura -> .)

    checarLectura                  shift and go to state 197

state 174

    (79) escritura -> DIBUJAR guardarToken ( guardarParametros . ) ;

    )               shift and go to state 198


state 175

    (77) guardarParametros -> ID . guardarIDPila pos color checarDibujar
    (63) guardarIDPila -> .

    (               reduce using rule 63 (guardarIDPila -> .)

    guardarIDPila                  shift and go to state 199

state 176

    (38) regresa -> RETURN . ID

    ID              shift and go to state 200


state 177

    (32) bloquefunc -> { vars guardarCuadruplo estatuto . regresa } liberarVar
    (38) regresa -> . RETURN ID

    RETURN          shift and go to state 176

    regresa                        shift and go to state 201

state 178

    (33) bloquefunc -> { vars guardarCuadruplo regresa . } liberarVar

    }               shift and go to state 202


state 179

    (34) bloquefunc -> { guardarCuadruplo escritura regresa . } liberarVar

    }               shift and go to state 203


state 180

    (127) whiles -> WHILE checarWhile ( expresion ) . checarContenido bloqueCond finPilaSaltosWhile
    (129) checarContenido -> .

    {               reduce using rule 129 (checarContenido -> .)

    checarContenido                shift and go to state 204

state 181

    (151) opcionMue -> direccion ID guardarIDPila . recibe_CTI checarMover ;
    (138) recibe_CTI -> . CTI

    CTI             shift and go to state 123

    recibe_CTI                     shift and go to state 205

state 182

    (61) asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; . checarOperadorIgual
    (64) checarOperadorIgual -> .

    ID              reduce using rule 64 (checarOperadorIgual -> .)
    DIBUJAR         reduce using rule 64 (checarOperadorIgual -> .)
    IF              reduce using rule 64 (checarOperadorIgual -> .)
    LEER            reduce using rule 64 (checarOperadorIgual -> .)
    WHILE           reduce using rule 64 (checarOperadorIgual -> .)
    MUEVE           reduce using rule 64 (checarOperadorIgual -> .)
    }               reduce using rule 64 (checarOperadorIgual -> .)
    RETURN          reduce using rule 64 (checarOperadorIgual -> .)

    checarOperadorIgual            shift and go to state 206

state 183

    (69) valorAsig -> = funcs .

    ;               reduce using rule 69 (valorAsig -> = funcs .)


state 184

    (49) funcs -> ID . guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (50) funcs -> ID .
    (136) recibe_ID -> ID .
    (51) guardarIDFunc -> .

  ! reduce/reduce conflict for ; resolved using rule 50 (funcs -> ID .)
    ;               reduce using rule 50 (funcs -> ID .)
    *               reduce using rule 136 (recibe_ID -> ID .)
    /               reduce using rule 136 (recibe_ID -> ID .)
    +               reduce using rule 136 (recibe_ID -> ID .)
    -               reduce using rule 136 (recibe_ID -> ID .)
    (               reduce using rule 51 (guardarIDFunc -> .)

  ! ;               [ reduce using rule 136 (recibe_ID -> ID .) ]

    guardarIDFunc                  shift and go to state 94

state 185

    (68) valorAsig -> = exp .

    ;               reduce using rule 68 (valorAsig -> = exp .)


state 186

    (65) opcionAsignacion -> [ CTI ] .
    (66) opcionAsignacion -> [ CTI ] . [ CTI ]

    =               reduce using rule 65 (opcionAsignacion -> [ CTI ] .)
    ;               reduce using rule 65 (opcionAsignacion -> [ CTI ] .)
    [               shift and go to state 207


state 187

    (54) auxExp -> listaExp . llegaComa
    (55) auxExp -> listaExp .
    (56) llegaComa -> . ,

    )               reduce using rule 55 (auxExp -> listaExp .)
    ,               shift and go to state 209

    llegaComa                      shift and go to state 208

state 188

    (58) listaExp -> exp . verificarTiposFunc masExps
    (57) verificarTiposFunc -> .

    ,               reduce using rule 57 (verificarTiposFunc -> .)
    )               reduce using rule 57 (verificarTiposFunc -> .)

    verificarTiposFunc             shift and go to state 210

state 189

    (49) funcs -> ID guardarIDFunc verProc generarERA auxExp . checaNumParam generaGOSUB
    (47) checaNumParam -> . )

    )               shift and go to state 211

    checaNumParam                  shift and go to state 212

state 190

    (113) signo -> push_pm exp .

    >               reduce using rule 113 (signo -> push_pm exp .)
    <               reduce using rule 113 (signo -> push_pm exp .)
    MENORIGUAL      reduce using rule 113 (signo -> push_pm exp .)
    MAYORIGUAL      reduce using rule 113 (signo -> push_pm exp .)
    IGUALIGUAL      reduce using rule 113 (signo -> push_pm exp .)
    DIFERENTE       reduce using rule 113 (signo -> push_pm exp .)
    |               reduce using rule 113 (signo -> push_pm exp .)
    COAND           reduce using rule 113 (signo -> push_pm exp .)
    )               reduce using rule 113 (signo -> push_pm exp .)
    ;               reduce using rule 113 (signo -> push_pm exp .)
    ,               reduce using rule 113 (signo -> push_pm exp .)


state 191

    (120) masop -> push_td termino .

    +               reduce using rule 120 (masop -> push_td termino .)
    -               reduce using rule 120 (masop -> push_td termino .)
    >               reduce using rule 120 (masop -> push_td termino .)
    <               reduce using rule 120 (masop -> push_td termino .)
    MENORIGUAL      reduce using rule 120 (masop -> push_td termino .)
    MAYORIGUAL      reduce using rule 120 (masop -> push_td termino .)
    IGUALIGUAL      reduce using rule 120 (masop -> push_td termino .)
    DIFERENTE       reduce using rule 120 (masop -> push_td termino .)
    |               reduce using rule 120 (masop -> push_td termino .)
    COAND           reduce using rule 120 (masop -> push_td termino .)
    )               reduce using rule 120 (masop -> push_td termino .)
    ;               reduce using rule 120 (masop -> push_td termino .)
    ,               reduce using rule 120 (masop -> push_td termino .)


state 192

    (85) condicion -> IF ( expresion ) checarIF . bloqueCond finPilaSaltos
    (86) condicion -> IF ( expresion ) checarIF . bloqueCond checarElse bloqueCond finPilaSaltos
    (87) bloqueCond -> . { estatuto regresaCond }
    (88) bloqueCond -> . { regresaCond }
    (89) bloqueCond -> . { }

    {               shift and go to state 213

    bloqueCond                     shift and go to state 214

state 193

    (95) expresion -> exp operacionLogica checaoperador6 .

    )               reduce using rule 95 (expresion -> exp operacionLogica checaoperador6 .)


state 194

    (105) operacionLogica -> push_logica exp .

    )               reduce using rule 105 (operacionLogica -> push_logica exp .)


state 195

    (110) finFondoFalso -> ) .

    *               reduce using rule 110 (finFondoFalso -> ) .)
    /               reduce using rule 110 (finFondoFalso -> ) .)
    +               reduce using rule 110 (finFondoFalso -> ) .)
    -               reduce using rule 110 (finFondoFalso -> ) .)
    >               reduce using rule 110 (finFondoFalso -> ) .)
    <               reduce using rule 110 (finFondoFalso -> ) .)
    MENORIGUAL      reduce using rule 110 (finFondoFalso -> ) .)
    MAYORIGUAL      reduce using rule 110 (finFondoFalso -> ) .)
    IGUALIGUAL      reduce using rule 110 (finFondoFalso -> ) .)
    DIFERENTE       reduce using rule 110 (finFondoFalso -> ) .)
    |               reduce using rule 110 (finFondoFalso -> ) .)
    COAND           reduce using rule 110 (finFondoFalso -> ) .)
    )               reduce using rule 110 (finFondoFalso -> ) .)
    ;               reduce using rule 110 (finFondoFalso -> ) .)
    ,               reduce using rule 110 (finFondoFalso -> ) .)


state 196

    (124) factor -> fondoFalso expresion finFondoFalso .

    *               reduce using rule 124 (factor -> fondoFalso expresion finFondoFalso .)
    /               reduce using rule 124 (factor -> fondoFalso expresion finFondoFalso .)
    +               reduce using rule 124 (factor -> fondoFalso expresion finFondoFalso .)
    -               reduce using rule 124 (factor -> fondoFalso expresion finFondoFalso .)
    >               reduce using rule 124 (factor -> fondoFalso expresion finFondoFalso .)
    <               reduce using rule 124 (factor -> fondoFalso expresion finFondoFalso .)
    MENORIGUAL      reduce using rule 124 (factor -> fondoFalso expresion finFondoFalso .)
    MAYORIGUAL      reduce using rule 124 (factor -> fondoFalso expresion finFondoFalso .)
    IGUALIGUAL      reduce using rule 124 (factor -> fondoFalso expresion finFondoFalso .)
    DIFERENTE       reduce using rule 124 (factor -> fondoFalso expresion finFondoFalso .)
    |               reduce using rule 124 (factor -> fondoFalso expresion finFondoFalso .)
    COAND           reduce using rule 124 (factor -> fondoFalso expresion finFondoFalso .)
    )               reduce using rule 124 (factor -> fondoFalso expresion finFondoFalso .)
    ;               reduce using rule 124 (factor -> fondoFalso expresion finFondoFalso .)
    ,               reduce using rule 124 (factor -> fondoFalso expresion finFondoFalso .)


state 197

    (73) lectura -> LEER guardarToken ID guardarIDPila checarLectura . opcionesLectura ;
    (74) opcionesLectura -> . [ CTI ]
    (75) opcionesLectura -> . [ CTI ] [ CTI ]
    (76) opcionesLectura -> . empty
    (157) empty -> .

    [               shift and go to state 215
    ;               reduce using rule 157 (empty -> .)

    empty                          shift and go to state 217
    opcionesLectura                shift and go to state 216

state 198

    (79) escritura -> DIBUJAR guardarToken ( guardarParametros ) . ;

    ;               shift and go to state 218


state 199

    (77) guardarParametros -> ID guardarIDPila . pos color checarDibujar
    (126) pos -> . ( varcte , varcte )

    (               shift and go to state 219

    pos                            shift and go to state 220

state 200

    (38) regresa -> RETURN ID .

    }               reduce using rule 38 (regresa -> RETURN ID .)


state 201

    (32) bloquefunc -> { vars guardarCuadruplo estatuto regresa . } liberarVar

    }               shift and go to state 221


state 202

    (33) bloquefunc -> { vars guardarCuadruplo regresa } . liberarVar
    (36) liberarVar -> .

    FUNC            reduce using rule 36 (liberarVar -> .)
    INICIO          reduce using rule 36 (liberarVar -> .)

    liberarVar                     shift and go to state 222

state 203

    (34) bloquefunc -> { guardarCuadruplo escritura regresa } . liberarVar
    (36) liberarVar -> .

    FUNC            reduce using rule 36 (liberarVar -> .)
    INICIO          reduce using rule 36 (liberarVar -> .)

    liberarVar                     shift and go to state 223

state 204

    (127) whiles -> WHILE checarWhile ( expresion ) checarContenido . bloqueCond finPilaSaltosWhile
    (87) bloqueCond -> . { estatuto regresaCond }
    (88) bloqueCond -> . { regresaCond }
    (89) bloqueCond -> . { }

    {               shift and go to state 213

    bloqueCond                     shift and go to state 224

state 205

    (151) opcionMue -> direccion ID guardarIDPila recibe_CTI . checarMover ;
    (156) checarMover -> .

    ;               reduce using rule 156 (checarMover -> .)

    checarMover                    shift and go to state 225

state 206

    (61) asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .

    ID              reduce using rule 61 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    DIBUJAR         reduce using rule 61 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    IF              reduce using rule 61 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    LEER            reduce using rule 61 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    WHILE           reduce using rule 61 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    MUEVE           reduce using rule 61 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    }               reduce using rule 61 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    RETURN          reduce using rule 61 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)


state 207

    (66) opcionAsignacion -> [ CTI ] [ . CTI ]

    CTI             shift and go to state 226


state 208

    (54) auxExp -> listaExp llegaComa .

    )               reduce using rule 54 (auxExp -> listaExp llegaComa .)


state 209

    (56) llegaComa -> , .

    )               reduce using rule 56 (llegaComa -> , .)
    (               reduce using rule 56 (llegaComa -> , .)
    ID              reduce using rule 56 (llegaComa -> , .)
    CTF             reduce using rule 56 (llegaComa -> , .)
    CTI             reduce using rule 56 (llegaComa -> , .)
    TRUE            reduce using rule 56 (llegaComa -> , .)
    FALSE           reduce using rule 56 (llegaComa -> , .)


state 210

    (58) listaExp -> exp verificarTiposFunc . masExps
    (59) masExps -> . llegaComa listaExp
    (60) masExps -> .
    (56) llegaComa -> . ,

  ! shift/reduce conflict for , resolved as shift
    )               reduce using rule 60 (masExps -> .)
    ,               shift and go to state 209

  ! ,               [ reduce using rule 60 (masExps -> .) ]

    llegaComa                      shift and go to state 227
    masExps                        shift and go to state 228

state 211

    (47) checaNumParam -> ) .

    ID              reduce using rule 47 (checaNumParam -> ) .)
    DIBUJAR         reduce using rule 47 (checaNumParam -> ) .)
    IF              reduce using rule 47 (checaNumParam -> ) .)
    LEER            reduce using rule 47 (checaNumParam -> ) .)
    WHILE           reduce using rule 47 (checaNumParam -> ) .)
    MUEVE           reduce using rule 47 (checaNumParam -> ) .)
    }               reduce using rule 47 (checaNumParam -> ) .)
    RETURN          reduce using rule 47 (checaNumParam -> ) .)
    ;               reduce using rule 47 (checaNumParam -> ) .)


state 212

    (49) funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam . generaGOSUB
    (48) generaGOSUB -> .

    ID              reduce using rule 48 (generaGOSUB -> .)
    DIBUJAR         reduce using rule 48 (generaGOSUB -> .)
    IF              reduce using rule 48 (generaGOSUB -> .)
    LEER            reduce using rule 48 (generaGOSUB -> .)
    WHILE           reduce using rule 48 (generaGOSUB -> .)
    MUEVE           reduce using rule 48 (generaGOSUB -> .)
    }               reduce using rule 48 (generaGOSUB -> .)
    RETURN          reduce using rule 48 (generaGOSUB -> .)
    ;               reduce using rule 48 (generaGOSUB -> .)

    generaGOSUB                    shift and go to state 229

state 213

    (87) bloqueCond -> { . estatuto regresaCond }
    (88) bloqueCond -> { . regresaCond }
    (89) bloqueCond -> { . }
    (39) estatuto -> . asignacion estatutoAux
    (40) estatuto -> . escritura estatutoAux
    (41) estatuto -> . condicion estatutoAux
    (42) estatuto -> . lectura estatutoAux
    (43) estatuto -> . whiles estatutoAux
    (44) estatuto -> . funcs estatutoAux
    (90) regresaCond -> . RETURN ID
    (91) regresaCond -> . empty
    (61) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (62) asignacion -> . ID ;
    (79) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (80) escritura -> . mueve
    (85) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (86) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos
    (73) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (127) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (49) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (50) funcs -> . ID
    (157) empty -> .
    (150) mueve -> . MUEVE guardarToken opcionMue

  ! shift/reduce conflict for } resolved as shift
    }               shift and go to state 234
    RETURN          shift and go to state 230
    ID              shift and go to state 72
    DIBUJAR         shift and go to state 76
    IF              shift and go to state 73
    LEER            shift and go to state 74
    WHILE           shift and go to state 65
    MUEVE           shift and go to state 66

  ! }               [ reduce using rule 157 (empty -> .) ]

    funcs                          shift and go to state 64
    estatuto                       shift and go to state 231
    mueve                          shift and go to state 68
    condicion                      shift and go to state 69
    lectura                        shift and go to state 70
    empty                          shift and go to state 232
    whiles                         shift and go to state 71
    asignacion                     shift and go to state 75
    regresaCond                    shift and go to state 233
    escritura                      shift and go to state 78

state 214

    (85) condicion -> IF ( expresion ) checarIF bloqueCond . finPilaSaltos
    (86) condicion -> IF ( expresion ) checarIF bloqueCond . checarElse bloqueCond finPilaSaltos
    (94) finPilaSaltos -> .
    (93) checarElse -> . ELSE

    ID              reduce using rule 94 (finPilaSaltos -> .)
    DIBUJAR         reduce using rule 94 (finPilaSaltos -> .)
    IF              reduce using rule 94 (finPilaSaltos -> .)
    LEER            reduce using rule 94 (finPilaSaltos -> .)
    WHILE           reduce using rule 94 (finPilaSaltos -> .)
    MUEVE           reduce using rule 94 (finPilaSaltos -> .)
    }               reduce using rule 94 (finPilaSaltos -> .)
    RETURN          reduce using rule 94 (finPilaSaltos -> .)
    ELSE            shift and go to state 236

    finPilaSaltos                  shift and go to state 237
    checarElse                     shift and go to state 235

state 215

    (74) opcionesLectura -> [ . CTI ]
    (75) opcionesLectura -> [ . CTI ] [ CTI ]

    CTI             shift and go to state 238


state 216

    (73) lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura . ;

    ;               shift and go to state 239


state 217

    (76) opcionesLectura -> empty .

    ;               reduce using rule 76 (opcionesLectura -> empty .)


state 218

    (79) escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .

    ID              reduce using rule 79 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    DIBUJAR         reduce using rule 79 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    IF              reduce using rule 79 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    LEER            reduce using rule 79 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    WHILE           reduce using rule 79 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    MUEVE           reduce using rule 79 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    }               reduce using rule 79 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    RETURN          reduce using rule 79 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)


state 219

    (126) pos -> ( . varcte , varcte )
    (131) varcte -> . recibe_ID
    (132) varcte -> . recibe_CTF
    (133) varcte -> . recibe_CTI
    (134) varcte -> . recibe_TRUE
    (135) varcte -> . recibe_FALSE
    (136) recibe_ID -> . ID
    (137) recibe_CTF -> . CTF
    (138) recibe_CTI -> . CTI
    (139) recibe_TRUE -> . TRUE
    (140) recibe_FALSE -> . FALSE

    ID              shift and go to state 130
    CTF             shift and go to state 120
    CTI             shift and go to state 123
    TRUE            shift and go to state 122
    FALSE           shift and go to state 132

    recibe_TRUE                    shift and go to state 124
    varcte                         shift and go to state 240
    recibe_CTF                     shift and go to state 126
    recibe_CTI                     shift and go to state 133
    recibe_ID                      shift and go to state 128
    recibe_FALSE                   shift and go to state 136

state 220

    (77) guardarParametros -> ID guardarIDPila pos . color checarDibujar
    (81) color -> . AMARILLO
    (82) color -> . VERDE
    (83) color -> . ROJO
    (84) color -> . AZUL

    AMARILLO        shift and go to state 242
    VERDE           shift and go to state 245
    ROJO            shift and go to state 243
    AZUL            shift and go to state 244

    color                          shift and go to state 241

state 221

    (32) bloquefunc -> { vars guardarCuadruplo estatuto regresa } . liberarVar
    (36) liberarVar -> .

    FUNC            reduce using rule 36 (liberarVar -> .)
    INICIO          reduce using rule 36 (liberarVar -> .)

    liberarVar                     shift and go to state 246

state 222

    (33) bloquefunc -> { vars guardarCuadruplo regresa } liberarVar .

    FUNC            reduce using rule 33 (bloquefunc -> { vars guardarCuadruplo regresa } liberarVar .)
    INICIO          reduce using rule 33 (bloquefunc -> { vars guardarCuadruplo regresa } liberarVar .)


state 223

    (34) bloquefunc -> { guardarCuadruplo escritura regresa } liberarVar .

    FUNC            reduce using rule 34 (bloquefunc -> { guardarCuadruplo escritura regresa } liberarVar .)
    INICIO          reduce using rule 34 (bloquefunc -> { guardarCuadruplo escritura regresa } liberarVar .)


state 224

    (127) whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond . finPilaSaltosWhile
    (130) finPilaSaltosWhile -> .

    ID              reduce using rule 130 (finPilaSaltosWhile -> .)
    DIBUJAR         reduce using rule 130 (finPilaSaltosWhile -> .)
    IF              reduce using rule 130 (finPilaSaltosWhile -> .)
    LEER            reduce using rule 130 (finPilaSaltosWhile -> .)
    WHILE           reduce using rule 130 (finPilaSaltosWhile -> .)
    MUEVE           reduce using rule 130 (finPilaSaltosWhile -> .)
    }               reduce using rule 130 (finPilaSaltosWhile -> .)
    RETURN          reduce using rule 130 (finPilaSaltosWhile -> .)

    finPilaSaltosWhile             shift and go to state 247

state 225

    (151) opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover . ;

    ;               shift and go to state 248


state 226

    (66) opcionAsignacion -> [ CTI ] [ CTI . ]

    ]               shift and go to state 249


state 227

    (59) masExps -> llegaComa . listaExp
    (58) listaExp -> . exp verificarTiposFunc masExps
    (108) exp -> . termino checaroperador4
    (117) termino -> . factor checaroperador5
    (124) factor -> . fondoFalso expresion finFondoFalso
    (125) factor -> . varcte
    (109) fondoFalso -> . (
    (131) varcte -> . recibe_ID
    (132) varcte -> . recibe_CTF
    (133) varcte -> . recibe_CTI
    (134) varcte -> . recibe_TRUE
    (135) varcte -> . recibe_FALSE
    (136) recibe_ID -> . ID
    (137) recibe_CTF -> . CTF
    (138) recibe_CTI -> . CTI
    (139) recibe_TRUE -> . TRUE
    (140) recibe_FALSE -> . FALSE

    (               shift and go to state 127
    ID              shift and go to state 130
    CTF             shift and go to state 120
    CTI             shift and go to state 123
    TRUE            shift and go to state 122
    FALSE           shift and go to state 132

    recibe_TRUE                    shift and go to state 124
    recibe_CTF                     shift and go to state 126
    recibe_CTI                     shift and go to state 133
    varcte                         shift and go to state 125
    factor                         shift and go to state 129
    listaExp                       shift and go to state 250
    recibe_ID                      shift and go to state 128
    termino                        shift and go to state 121
    exp                            shift and go to state 188
    recibe_FALSE                   shift and go to state 136
    fondoFalso                     shift and go to state 135

state 228

    (58) listaExp -> exp verificarTiposFunc masExps .

    ,               reduce using rule 58 (listaExp -> exp verificarTiposFunc masExps .)
    )               reduce using rule 58 (listaExp -> exp verificarTiposFunc masExps .)


state 229

    (49) funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .

    ID              reduce using rule 49 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    DIBUJAR         reduce using rule 49 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    IF              reduce using rule 49 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    LEER            reduce using rule 49 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    WHILE           reduce using rule 49 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    MUEVE           reduce using rule 49 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    }               reduce using rule 49 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    RETURN          reduce using rule 49 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    ;               reduce using rule 49 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)


state 230

    (90) regresaCond -> RETURN . ID

    ID              shift and go to state 251


state 231

    (87) bloqueCond -> { estatuto . regresaCond }
    (90) regresaCond -> . RETURN ID
    (91) regresaCond -> . empty
    (157) empty -> .

    RETURN          shift and go to state 230
    }               reduce using rule 157 (empty -> .)

    regresaCond                    shift and go to state 252
    empty                          shift and go to state 232

state 232

    (91) regresaCond -> empty .

    }               reduce using rule 91 (regresaCond -> empty .)


state 233

    (88) bloqueCond -> { regresaCond . }

    }               shift and go to state 253


state 234

    (89) bloqueCond -> { } .

    ELSE            reduce using rule 89 (bloqueCond -> { } .)
    ID              reduce using rule 89 (bloqueCond -> { } .)
    DIBUJAR         reduce using rule 89 (bloqueCond -> { } .)
    IF              reduce using rule 89 (bloqueCond -> { } .)
    LEER            reduce using rule 89 (bloqueCond -> { } .)
    WHILE           reduce using rule 89 (bloqueCond -> { } .)
    MUEVE           reduce using rule 89 (bloqueCond -> { } .)
    }               reduce using rule 89 (bloqueCond -> { } .)
    RETURN          reduce using rule 89 (bloqueCond -> { } .)


state 235

    (86) condicion -> IF ( expresion ) checarIF bloqueCond checarElse . bloqueCond finPilaSaltos
    (87) bloqueCond -> . { estatuto regresaCond }
    (88) bloqueCond -> . { regresaCond }
    (89) bloqueCond -> . { }

    {               shift and go to state 213

    bloqueCond                     shift and go to state 254

state 236

    (93) checarElse -> ELSE .

    {               reduce using rule 93 (checarElse -> ELSE .)


state 237

    (85) condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .

    ID              reduce using rule 85 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)
    DIBUJAR         reduce using rule 85 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)
    IF              reduce using rule 85 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)
    LEER            reduce using rule 85 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)
    WHILE           reduce using rule 85 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)
    MUEVE           reduce using rule 85 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)
    RETURN          reduce using rule 85 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)
    }               reduce using rule 85 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)


state 238

    (74) opcionesLectura -> [ CTI . ]
    (75) opcionesLectura -> [ CTI . ] [ CTI ]

    ]               shift and go to state 255


state 239

    (73) lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .

    ID              reduce using rule 73 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    DIBUJAR         reduce using rule 73 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    IF              reduce using rule 73 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    LEER            reduce using rule 73 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    WHILE           reduce using rule 73 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    MUEVE           reduce using rule 73 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    RETURN          reduce using rule 73 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    }               reduce using rule 73 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)


state 240

    (126) pos -> ( varcte . , varcte )

    ,               shift and go to state 256


state 241

    (77) guardarParametros -> ID guardarIDPila pos color . checarDibujar
    (78) checarDibujar -> .

    )               reduce using rule 78 (checarDibujar -> .)

    checarDibujar                  shift and go to state 257

state 242

    (81) color -> AMARILLO .

    )               reduce using rule 81 (color -> AMARILLO .)


state 243

    (83) color -> ROJO .

    )               reduce using rule 83 (color -> ROJO .)


state 244

    (84) color -> AZUL .

    )               reduce using rule 84 (color -> AZUL .)


state 245

    (82) color -> VERDE .

    )               reduce using rule 82 (color -> VERDE .)


state 246

    (32) bloquefunc -> { vars guardarCuadruplo estatuto regresa } liberarVar .

    FUNC            reduce using rule 32 (bloquefunc -> { vars guardarCuadruplo estatuto regresa } liberarVar .)
    INICIO          reduce using rule 32 (bloquefunc -> { vars guardarCuadruplo estatuto regresa } liberarVar .)


state 247

    (127) whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .

    ID              reduce using rule 127 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    DIBUJAR         reduce using rule 127 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    IF              reduce using rule 127 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    LEER            reduce using rule 127 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    WHILE           reduce using rule 127 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    MUEVE           reduce using rule 127 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    }               reduce using rule 127 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    RETURN          reduce using rule 127 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)


state 248

    (151) opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .

    ID              reduce using rule 151 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    DIBUJAR         reduce using rule 151 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    IF              reduce using rule 151 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    LEER            reduce using rule 151 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    WHILE           reduce using rule 151 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    MUEVE           reduce using rule 151 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    }               reduce using rule 151 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    RETURN          reduce using rule 151 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)


state 249

    (66) opcionAsignacion -> [ CTI ] [ CTI ] .

    =               reduce using rule 66 (opcionAsignacion -> [ CTI ] [ CTI ] .)
    ;               reduce using rule 66 (opcionAsignacion -> [ CTI ] [ CTI ] .)


state 250

    (59) masExps -> llegaComa listaExp .

    ,               reduce using rule 59 (masExps -> llegaComa listaExp .)
    )               reduce using rule 59 (masExps -> llegaComa listaExp .)


state 251

    (90) regresaCond -> RETURN ID .

    }               reduce using rule 90 (regresaCond -> RETURN ID .)


state 252

    (87) bloqueCond -> { estatuto regresaCond . }

    }               shift and go to state 258


state 253

    (88) bloqueCond -> { regresaCond } .

    ELSE            reduce using rule 88 (bloqueCond -> { regresaCond } .)
    ID              reduce using rule 88 (bloqueCond -> { regresaCond } .)
    DIBUJAR         reduce using rule 88 (bloqueCond -> { regresaCond } .)
    IF              reduce using rule 88 (bloqueCond -> { regresaCond } .)
    LEER            reduce using rule 88 (bloqueCond -> { regresaCond } .)
    WHILE           reduce using rule 88 (bloqueCond -> { regresaCond } .)
    MUEVE           reduce using rule 88 (bloqueCond -> { regresaCond } .)
    }               reduce using rule 88 (bloqueCond -> { regresaCond } .)
    RETURN          reduce using rule 88 (bloqueCond -> { regresaCond } .)


state 254

    (86) condicion -> IF ( expresion ) checarIF bloqueCond checarElse bloqueCond . finPilaSaltos
    (94) finPilaSaltos -> .

    ID              reduce using rule 94 (finPilaSaltos -> .)
    DIBUJAR         reduce using rule 94 (finPilaSaltos -> .)
    IF              reduce using rule 94 (finPilaSaltos -> .)
    LEER            reduce using rule 94 (finPilaSaltos -> .)
    WHILE           reduce using rule 94 (finPilaSaltos -> .)
    MUEVE           reduce using rule 94 (finPilaSaltos -> .)
    }               reduce using rule 94 (finPilaSaltos -> .)
    RETURN          reduce using rule 94 (finPilaSaltos -> .)

    finPilaSaltos                  shift and go to state 259

state 255

    (74) opcionesLectura -> [ CTI ] .
    (75) opcionesLectura -> [ CTI ] . [ CTI ]

    ;               reduce using rule 74 (opcionesLectura -> [ CTI ] .)
    [               shift and go to state 260


state 256

    (126) pos -> ( varcte , . varcte )
    (131) varcte -> . recibe_ID
    (132) varcte -> . recibe_CTF
    (133) varcte -> . recibe_CTI
    (134) varcte -> . recibe_TRUE
    (135) varcte -> . recibe_FALSE
    (136) recibe_ID -> . ID
    (137) recibe_CTF -> . CTF
    (138) recibe_CTI -> . CTI
    (139) recibe_TRUE -> . TRUE
    (140) recibe_FALSE -> . FALSE

    ID              shift and go to state 130
    CTF             shift and go to state 120
    CTI             shift and go to state 123
    TRUE            shift and go to state 122
    FALSE           shift and go to state 132

    recibe_TRUE                    shift and go to state 124
    varcte                         shift and go to state 261
    recibe_CTF                     shift and go to state 126
    recibe_CTI                     shift and go to state 133
    recibe_ID                      shift and go to state 128
    recibe_FALSE                   shift and go to state 136

state 257

    (77) guardarParametros -> ID guardarIDPila pos color checarDibujar .

    )               reduce using rule 77 (guardarParametros -> ID guardarIDPila pos color checarDibujar .)


state 258

    (87) bloqueCond -> { estatuto regresaCond } .

    ELSE            reduce using rule 87 (bloqueCond -> { estatuto regresaCond } .)
    ID              reduce using rule 87 (bloqueCond -> { estatuto regresaCond } .)
    DIBUJAR         reduce using rule 87 (bloqueCond -> { estatuto regresaCond } .)
    IF              reduce using rule 87 (bloqueCond -> { estatuto regresaCond } .)
    LEER            reduce using rule 87 (bloqueCond -> { estatuto regresaCond } .)
    WHILE           reduce using rule 87 (bloqueCond -> { estatuto regresaCond } .)
    MUEVE           reduce using rule 87 (bloqueCond -> { estatuto regresaCond } .)
    }               reduce using rule 87 (bloqueCond -> { estatuto regresaCond } .)
    RETURN          reduce using rule 87 (bloqueCond -> { estatuto regresaCond } .)


state 259

    (86) condicion -> IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos .

    ID              reduce using rule 86 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos .)
    DIBUJAR         reduce using rule 86 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos .)
    IF              reduce using rule 86 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos .)
    LEER            reduce using rule 86 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos .)
    WHILE           reduce using rule 86 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos .)
    MUEVE           reduce using rule 86 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos .)
    RETURN          reduce using rule 86 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos .)
    }               reduce using rule 86 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos .)


state 260

    (75) opcionesLectura -> [ CTI ] [ . CTI ]

    CTI             shift and go to state 262


state 261

    (126) pos -> ( varcte , varcte . )

    )               shift and go to state 263


state 262

    (75) opcionesLectura -> [ CTI ] [ CTI . ]

    ]               shift and go to state 264


state 263

    (126) pos -> ( varcte , varcte ) .

    AMARILLO        reduce using rule 126 (pos -> ( varcte , varcte ) .)
    VERDE           reduce using rule 126 (pos -> ( varcte , varcte ) .)
    ROJO            reduce using rule 126 (pos -> ( varcte , varcte ) .)
    AZUL            reduce using rule 126 (pos -> ( varcte , varcte ) .)


state 264

    (75) opcionesLectura -> [ CTI ] [ CTI ] .

    ;               reduce using rule 75 (opcionesLectura -> [ CTI ] [ CTI ] .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for } in state 36 resolved as shift
WARNING: shift/reduce conflict for ; in state 72 resolved as shift
WARNING: shift/reduce conflict for , in state 210 resolved as shift
WARNING: shift/reduce conflict for } in state 213 resolved as shift
WARNING: reduce/reduce conflict in state 28 resolved using rule (vars -> empty)
WARNING: rejected rule (masTipos -> empty) in state 28
WARNING: reduce/reduce conflict in state 53 resolved using rule (funcion -> empty)
WARNING: rejected rule (funcion2 -> empty) in state 53
WARNING: reduce/reduce conflict in state 82 resolved using rule (guardarCuadruplo -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 82
WARNING: reduce/reduce conflict in state 121 resolved using rule (checaroperador4 -> <empty>)
WARNING: rejected rule (signo -> <empty>) in state 121
WARNING: reduce/reduce conflict in state 129 resolved using rule (checaroperador5 -> <empty>)
WARNING: rejected rule (masop -> <empty>) in state 129
WARNING: reduce/reduce conflict in state 134 resolved using rule (expresion -> exp)
WARNING: rejected rule (operacionLogica -> <empty>) in state 134
WARNING: reduce/reduce conflict in state 184 resolved using rule (funcs -> ID)
WARNING: rejected rule (recibe_ID -> ID) in state 184
WARNING: Rule (masTipos -> empty) is never reduced
WARNING: Rule (funcion2 -> empty) is never reduced
WARNING: Rule (signo -> <empty>) is never reduced
WARNING: Rule (masop -> <empty>) is never reduced
WARNING: Rule (operacionLogica -> <empty>) is never reduced

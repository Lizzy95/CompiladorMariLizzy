Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Unused terminals:

    COOR

Grammar

Rule 0     S' -> programa
Rule 1     programa -> vars funcion INICIO funcAgregarInicio bloque FIN liberarVar
Rule 2     programa -> vars funcion INICIO FIN
Rule 3     funcAgregarInicio -> <empty>
Rule 4     bloque -> { vars guardarCuadruplo estatuto }
Rule 5     bloque -> { vars guardarCuadruplo }
Rule 6     bloque -> { }
Rule 7     vars -> tipo listaIDS ; masTipos
Rule 8     vars -> tipo ID guardarIDs arreglo ; masTipos
Rule 9     vars -> empty
Rule 10    masTipos -> vars
Rule 11    masTipos -> empty
Rule 12    listaIDS -> ID guardarIDs masIDS
Rule 13    masIDS -> , ID guardarIDs masIDS2
Rule 14    masIDS -> empty
Rule 15    masIDS2 -> , ID guardarIDs masIDS
Rule 16    masIDS2 -> empty
Rule 17    arreglo -> [ CTI ] matriz
Rule 18    matriz -> [ CTI ]
Rule 19    matriz -> empty
Rule 20    funcion -> FUNC tipo ID funcAgregar restoFuncion funcion2
Rule 21    funcion -> empty
Rule 22    funcion2 -> funcion
Rule 23    funcion2 -> empty
Rule 24    restoFuncion -> ( param ) bloquefunc
Rule 25    funcAgregar -> <empty>
Rule 26    param -> tipo ID guardarIDParam maspaID
Rule 27    param -> empty
Rule 28    guardarIDParam -> <empty>
Rule 29    guardarIDs -> <empty>
Rule 30    maspaID -> , param
Rule 31    maspaID -> empty
Rule 32    bloquefunc -> { vars guardarCuadruplo estatuto regresa } liberarVar
Rule 33    bloquefunc -> { vars guardarCuadruplo regresa } liberarVar
Rule 34    bloquefunc -> { guardarCuadruplo escritura regresa } liberarVar
Rule 35    bloquefunc -> { }
Rule 36    liberarVar -> <empty>
Rule 37    guardarCuadruplo -> <empty>
Rule 38    regresa -> RETURN ID generarCuadRetorno
Rule 39    generarCuadRetorno -> <empty>
Rule 40    estatuto -> asignacion estatutoAux
Rule 41    estatuto -> escritura estatutoAux
Rule 42    estatuto -> condicion estatutoAux
Rule 43    estatuto -> lectura estatutoAux
Rule 44    estatuto -> whiles estatutoAux
Rule 45    estatuto -> funcs estatutoAux
Rule 46    estatutoAux -> estatuto
Rule 47    estatutoAux -> empty
Rule 48    checaNumParam -> finFondoFalso
Rule 49    generaGOSUB -> <empty>
Rule 50    funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
Rule 51    guardarIDFunc -> <empty>
Rule 52    verProc -> <empty>
Rule 53    generarERA -> fondoFalso
Rule 54    auxExp -> listaExp llegaComa
Rule 55    auxExp -> listaExp
Rule 56    llegaComa -> ,
Rule 57    verificarTiposFunc -> <empty>
Rule 58    listaExp -> expresion verificarTiposFunc masExps
Rule 59    masExps -> llegaComa listaExp
Rule 60    masExps -> <empty>
Rule 61    asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
Rule 62    guardarIDPila -> <empty>
Rule 63    checarOperadorIgual -> <empty>
Rule 64    opcionAsignacion -> [ CTI ]
Rule 65    opcionAsignacion -> [ CTI ] [ CTI ]
Rule 66    opcionAsignacion -> empty
Rule 67    valorAsig -> = expresion
Rule 68    valorAsig -> empty
Rule 69    guardarToken -> <empty>
Rule 70    checarLectura -> <empty>
Rule 71    lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
Rule 72    opcionesLectura -> [ CTI ]
Rule 73    opcionesLectura -> [ CTI ] [ CTI ]
Rule 74    opcionesLectura -> empty
Rule 75    guardarParametros -> ID guardarIDPila pos color checarDibujar
Rule 76    checarDibujar -> <empty>
Rule 77    escritura -> DIBUJAR guardarToken ( guardarParametros ) ;
Rule 78    escritura -> mueve
Rule 79    color -> AMARILLO
Rule 80    color -> VERDE
Rule 81    color -> ROJO
Rule 82    color -> AZUL
Rule 83    condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos
Rule 84    condicion -> IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos
Rule 85    bloqueCond -> { estatuto regresaCond }
Rule 86    bloqueCond -> { regresaCond }
Rule 87    bloqueCond -> { }
Rule 88    regresaCond -> RETURN ID generarCuadRetorno
Rule 89    regresaCond -> empty
Rule 90    checarIF -> <empty>
Rule 91    checarElse -> ELSE
Rule 92    finPilaSaltos -> <empty>
Rule 93    expresion -> exp operacionLogica checaoperador6
Rule 94    expresion -> exp
Rule 95    push_logica -> >
Rule 96    push_logica -> <
Rule 97    push_logica -> MENORIGUAL
Rule 98    push_logica -> MAYORIGUAL
Rule 99    push_logica -> IGUALIGUAL
Rule 100   push_logica -> DIFERENTE
Rule 101   push_logica -> |
Rule 102   push_logica -> COAND
Rule 103   operacionLogica -> push_logica exp
Rule 104   operacionLogica -> <empty>
Rule 105   checaoperador6 -> <empty>
Rule 106   exp -> termino checaroperador4
Rule 107   fondoFalso -> (
Rule 108   finFondoFalso -> )
Rule 109   checaroperador4 -> signo
Rule 110   checaroperador4 -> <empty>
Rule 111   signo -> push_pm exp
Rule 112   signo -> <empty>
Rule 113   push_pm -> +
Rule 114   push_pm -> -
Rule 115   termino -> factor checaroperador5
Rule 116   checaroperador5 -> masop
Rule 117   checaroperador5 -> <empty>
Rule 118   masop -> push_td termino
Rule 119   masop -> <empty>
Rule 120   push_td -> *
Rule 121   push_td -> /
Rule 122   factor -> fondoFalso expresion finFondoFalso
Rule 123   factor -> varcte
Rule 124   pos -> ( varcte , varcte )
Rule 125   whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
Rule 126   checarWhile -> <empty>
Rule 127   checarContenido -> <empty>
Rule 128   finPilaSaltosWhile -> <empty>
Rule 129   varcte -> recibe_ID
Rule 130   varcte -> recibe_CTF
Rule 131   varcte -> recibe_CTI
Rule 132   varcte -> recibe_TRUE
Rule 133   varcte -> recibe_FALSE
Rule 134   varcte -> funcs
Rule 135   recibe_ID -> ID
Rule 136   recibe_CTF -> CTF
Rule 137   recibe_CTI -> CTI
Rule 138   recibe_TRUE -> TRUE
Rule 139   recibe_FALSE -> FALSE
Rule 140   tipo -> ENTERO
Rule 141   tipo -> DECIMAL
Rule 142   tipo -> BOOL
Rule 143   tipo -> VOID
Rule 144   tipo -> CUADRADO
Rule 145   tipo -> RECTANGULO
Rule 146   tipo -> CIRCULO
Rule 147   tipo -> LINEA
Rule 148   tipo -> ESTRELLA
Rule 149   mueve -> MUEVE guardarToken opcionMue
Rule 150   opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ;
Rule 151   direccion -> IZQUIERDA
Rule 152   direccion -> DERECHA
Rule 153   direccion -> ARRIBA
Rule 154   direccion -> ABAJO
Rule 155   checarMover -> <empty>
Rule 156   empty -> <empty>

Terminals, with rules where they appear

(                    : 24 77 83 84 107 124 125
)                    : 24 77 83 84 108 124 125
*                    : 120
+                    : 113
,                    : 13 15 30 56 124
-                    : 114
/                    : 121
;                    : 7 8 61 71 77 150
<                    : 96
=                    : 67
>                    : 95
ABAJO                : 154
AMARILLO             : 79
ARRIBA               : 153
AZUL                 : 82
BOOL                 : 142
CIRCULO              : 146
COAND                : 102
COOR                 : 
CTF                  : 136
CTI                  : 17 18 64 65 65 72 73 73 137
CUADRADO             : 144
DECIMAL              : 141
DERECHA              : 152
DIBUJAR              : 77
DIFERENTE            : 100
ELSE                 : 91
ENTERO               : 140
ESTRELLA             : 148
FALSE                : 139
FIN                  : 1 2
FUNC                 : 20
ID                   : 8 12 13 15 20 26 38 50 61 71 75 88 135 150
IF                   : 83 84
IGUALIGUAL           : 99
INICIO               : 1 2
IZQUIERDA            : 151
LEER                 : 71
LINEA                : 147
MAYORIGUAL           : 98
MENORIGUAL           : 97
MUEVE                : 149
RECTANGULO           : 145
RETURN               : 38 88
ROJO                 : 81
TRUE                 : 138
VERDE                : 80
VOID                 : 143
WHILE                : 125
[                    : 17 18 64 65 65 72 73 73
]                    : 17 18 64 65 65 72 73 73
error                : 
{                    : 4 5 6 32 33 34 35 85 86 87
|                    : 101
}                    : 4 5 6 32 33 34 35 85 86 87

Nonterminals, with rules where they appear

arreglo              : 8
asignacion           : 40
auxExp               : 50
bloque               : 1
bloqueCond           : 83 84 84 125
bloquefunc           : 24
checaNumParam        : 50
checaoperador6       : 93
checarContenido      : 125
checarDibujar        : 75
checarElse           : 84
checarIF             : 83 84
checarLectura        : 71
checarMover          : 150
checarOperadorIgual  : 61
checarWhile          : 125
checaroperador4      : 106
checaroperador5      : 115
color                : 75
condicion            : 42
direccion            : 150
empty                : 9 11 14 16 19 21 23 27 31 47 66 68 74 89
escritura            : 34 41
estatuto             : 4 32 46 85
estatutoAux          : 40 41 42 43 44 45
exp                  : 93 94 103 111
expresion            : 58 67 83 84 122 125
factor               : 115
finFondoFalso        : 48 122
finPilaSaltos        : 83 84
finPilaSaltosWhile   : 125
fondoFalso           : 53 122
funcAgregar          : 20
funcAgregarInicio    : 1
funcion              : 1 2 22
funcion2             : 20
funcs                : 45 134
generaGOSUB          : 50
generarCuadRetorno   : 38 88
generarERA           : 50
guardarCuadruplo     : 4 5 32 33 34
guardarIDFunc        : 50
guardarIDParam       : 26
guardarIDPila        : 61 71 75 150
guardarIDs           : 8 12 13 15
guardarParametros    : 77
guardarToken         : 71 77 149
lectura              : 43
liberarVar           : 1 32 33 34
listaExp             : 54 55 59
listaIDS             : 7
llegaComa            : 54 59
masExps              : 58
masIDS               : 12 15
masIDS2              : 13
masTipos             : 7 8
masop                : 116
maspaID              : 26
matriz               : 17
mueve                : 78
opcionAsignacion     : 61
opcionMue            : 149
opcionesLectura      : 71
operacionLogica      : 93
param                : 24 30
pos                  : 75
programa             : 0
push_logica          : 103
push_pm              : 111
push_td              : 118
recibe_CTF           : 130
recibe_CTI           : 131 150
recibe_FALSE         : 133
recibe_ID            : 129
recibe_TRUE          : 132
regresa              : 32 33 34
regresaCond          : 85 86
restoFuncion         : 20
signo                : 109
termino              : 106 118
tipo                 : 7 8 20 26
valorAsig            : 61
varcte               : 123 124 124
vars                 : 1 2 4 5 10 32 33
verProc              : 50
verificarTiposFunc   : 58
whiles               : 44

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . vars funcion INICIO funcAgregarInicio bloque FIN liberarVar
    (2) programa -> . vars funcion INICIO FIN
    (7) vars -> . tipo listaIDS ; masTipos
    (8) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (9) vars -> . empty
    (140) tipo -> . ENTERO
    (141) tipo -> . DECIMAL
    (142) tipo -> . BOOL
    (143) tipo -> . VOID
    (144) tipo -> . CUADRADO
    (145) tipo -> . RECTANGULO
    (146) tipo -> . CIRCULO
    (147) tipo -> . LINEA
    (148) tipo -> . ESTRELLA
    (156) empty -> .

    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8
    FUNC            reduce using rule 156 (empty -> .)
    INICIO          reduce using rule 156 (empty -> .)

    tipo                           shift and go to state 4
    vars                           shift and go to state 1
    empty                          shift and go to state 5
    programa                       shift and go to state 11

state 1

    (1) programa -> vars . funcion INICIO funcAgregarInicio bloque FIN liberarVar
    (2) programa -> vars . funcion INICIO FIN
    (20) funcion -> . FUNC tipo ID funcAgregar restoFuncion funcion2
    (21) funcion -> . empty
    (156) empty -> .

    FUNC            shift and go to state 15
    INICIO          reduce using rule 156 (empty -> .)

    empty                          shift and go to state 14
    funcion                        shift and go to state 16

state 2

    (143) tipo -> VOID .

    ID              reduce using rule 143 (tipo -> VOID .)


state 3

    (147) tipo -> LINEA .

    ID              reduce using rule 147 (tipo -> LINEA .)


state 4

    (7) vars -> tipo . listaIDS ; masTipos
    (8) vars -> tipo . ID guardarIDs arreglo ; masTipos
    (12) listaIDS -> . ID guardarIDs masIDS

    ID              shift and go to state 18

    listaIDS                       shift and go to state 17

state 5

    (9) vars -> empty .

    }               reduce using rule 9 (vars -> empty .)
    ID              reduce using rule 9 (vars -> empty .)
    DIBUJAR         reduce using rule 9 (vars -> empty .)
    IF              reduce using rule 9 (vars -> empty .)
    LEER            reduce using rule 9 (vars -> empty .)
    WHILE           reduce using rule 9 (vars -> empty .)
    MUEVE           reduce using rule 9 (vars -> empty .)
    FUNC            reduce using rule 9 (vars -> empty .)
    INICIO          reduce using rule 9 (vars -> empty .)
    RETURN          reduce using rule 9 (vars -> empty .)


state 6

    (140) tipo -> ENTERO .

    ID              reduce using rule 140 (tipo -> ENTERO .)


state 7

    (141) tipo -> DECIMAL .

    ID              reduce using rule 141 (tipo -> DECIMAL .)


state 8

    (148) tipo -> ESTRELLA .

    ID              reduce using rule 148 (tipo -> ESTRELLA .)


state 9

    (144) tipo -> CUADRADO .

    ID              reduce using rule 144 (tipo -> CUADRADO .)


state 10

    (142) tipo -> BOOL .

    ID              reduce using rule 142 (tipo -> BOOL .)


state 11

    (0) S' -> programa .



state 12

    (145) tipo -> RECTANGULO .

    ID              reduce using rule 145 (tipo -> RECTANGULO .)


state 13

    (146) tipo -> CIRCULO .

    ID              reduce using rule 146 (tipo -> CIRCULO .)


state 14

    (21) funcion -> empty .

    INICIO          reduce using rule 21 (funcion -> empty .)


state 15

    (20) funcion -> FUNC . tipo ID funcAgregar restoFuncion funcion2
    (140) tipo -> . ENTERO
    (141) tipo -> . DECIMAL
    (142) tipo -> . BOOL
    (143) tipo -> . VOID
    (144) tipo -> . CUADRADO
    (145) tipo -> . RECTANGULO
    (146) tipo -> . CIRCULO
    (147) tipo -> . LINEA
    (148) tipo -> . ESTRELLA

    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8

    tipo                           shift and go to state 19

state 16

    (1) programa -> vars funcion . INICIO funcAgregarInicio bloque FIN liberarVar
    (2) programa -> vars funcion . INICIO FIN

    INICIO          shift and go to state 20


state 17

    (7) vars -> tipo listaIDS . ; masTipos

    ;               shift and go to state 21


state 18

    (8) vars -> tipo ID . guardarIDs arreglo ; masTipos
    (12) listaIDS -> ID . guardarIDs masIDS
    (29) guardarIDs -> .

    [               reduce using rule 29 (guardarIDs -> .)
    ,               reduce using rule 29 (guardarIDs -> .)
    ;               reduce using rule 29 (guardarIDs -> .)

    guardarIDs                     shift and go to state 22

state 19

    (20) funcion -> FUNC tipo . ID funcAgregar restoFuncion funcion2

    ID              shift and go to state 23


state 20

    (1) programa -> vars funcion INICIO . funcAgregarInicio bloque FIN liberarVar
    (2) programa -> vars funcion INICIO . FIN
    (3) funcAgregarInicio -> .

    FIN             shift and go to state 25
    {               reduce using rule 3 (funcAgregarInicio -> .)

    funcAgregarInicio              shift and go to state 24

state 21

    (7) vars -> tipo listaIDS ; . masTipos
    (10) masTipos -> . vars
    (11) masTipos -> . empty
    (7) vars -> . tipo listaIDS ; masTipos
    (8) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (9) vars -> . empty
    (156) empty -> .
    (140) tipo -> . ENTERO
    (141) tipo -> . DECIMAL
    (142) tipo -> . BOOL
    (143) tipo -> . VOID
    (144) tipo -> . CUADRADO
    (145) tipo -> . RECTANGULO
    (146) tipo -> . CIRCULO
    (147) tipo -> . LINEA
    (148) tipo -> . ESTRELLA

    FUNC            reduce using rule 156 (empty -> .)
    INICIO          reduce using rule 156 (empty -> .)
    }               reduce using rule 156 (empty -> .)
    ID              reduce using rule 156 (empty -> .)
    DIBUJAR         reduce using rule 156 (empty -> .)
    IF              reduce using rule 156 (empty -> .)
    LEER            reduce using rule 156 (empty -> .)
    WHILE           reduce using rule 156 (empty -> .)
    MUEVE           reduce using rule 156 (empty -> .)
    RETURN          reduce using rule 156 (empty -> .)
    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8

    masTipos                       shift and go to state 26
    tipo                           shift and go to state 4
    vars                           shift and go to state 27
    empty                          shift and go to state 28

state 22

    (8) vars -> tipo ID guardarIDs . arreglo ; masTipos
    (12) listaIDS -> ID guardarIDs . masIDS
    (17) arreglo -> . [ CTI ] matriz
    (13) masIDS -> . , ID guardarIDs masIDS2
    (14) masIDS -> . empty
    (156) empty -> .

    [               shift and go to state 31
    ,               shift and go to state 29
    ;               reduce using rule 156 (empty -> .)

    arreglo                        shift and go to state 30
    masIDS                         shift and go to state 32
    empty                          shift and go to state 33

state 23

    (20) funcion -> FUNC tipo ID . funcAgregar restoFuncion funcion2
    (25) funcAgregar -> .

    (               reduce using rule 25 (funcAgregar -> .)

    funcAgregar                    shift and go to state 34

state 24

    (1) programa -> vars funcion INICIO funcAgregarInicio . bloque FIN liberarVar
    (4) bloque -> . { vars guardarCuadruplo estatuto }
    (5) bloque -> . { vars guardarCuadruplo }
    (6) bloque -> . { }

    {               shift and go to state 36

    bloque                         shift and go to state 35

state 25

    (2) programa -> vars funcion INICIO FIN .

    $end            reduce using rule 2 (programa -> vars funcion INICIO FIN .)


state 26

    (7) vars -> tipo listaIDS ; masTipos .

    }               reduce using rule 7 (vars -> tipo listaIDS ; masTipos .)
    ID              reduce using rule 7 (vars -> tipo listaIDS ; masTipos .)
    DIBUJAR         reduce using rule 7 (vars -> tipo listaIDS ; masTipos .)
    IF              reduce using rule 7 (vars -> tipo listaIDS ; masTipos .)
    LEER            reduce using rule 7 (vars -> tipo listaIDS ; masTipos .)
    WHILE           reduce using rule 7 (vars -> tipo listaIDS ; masTipos .)
    MUEVE           reduce using rule 7 (vars -> tipo listaIDS ; masTipos .)
    FUNC            reduce using rule 7 (vars -> tipo listaIDS ; masTipos .)
    INICIO          reduce using rule 7 (vars -> tipo listaIDS ; masTipos .)
    RETURN          reduce using rule 7 (vars -> tipo listaIDS ; masTipos .)


state 27

    (10) masTipos -> vars .

    FUNC            reduce using rule 10 (masTipos -> vars .)
    INICIO          reduce using rule 10 (masTipos -> vars .)
    }               reduce using rule 10 (masTipos -> vars .)
    ID              reduce using rule 10 (masTipos -> vars .)
    DIBUJAR         reduce using rule 10 (masTipos -> vars .)
    IF              reduce using rule 10 (masTipos -> vars .)
    LEER            reduce using rule 10 (masTipos -> vars .)
    WHILE           reduce using rule 10 (masTipos -> vars .)
    MUEVE           reduce using rule 10 (masTipos -> vars .)
    RETURN          reduce using rule 10 (masTipos -> vars .)


state 28

    (11) masTipos -> empty .
    (9) vars -> empty .

  ! reduce/reduce conflict for FUNC resolved using rule 9 (vars -> empty .)
  ! reduce/reduce conflict for INICIO resolved using rule 9 (vars -> empty .)
  ! reduce/reduce conflict for } resolved using rule 9 (vars -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 9 (vars -> empty .)
  ! reduce/reduce conflict for DIBUJAR resolved using rule 9 (vars -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 9 (vars -> empty .)
  ! reduce/reduce conflict for LEER resolved using rule 9 (vars -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 9 (vars -> empty .)
  ! reduce/reduce conflict for MUEVE resolved using rule 9 (vars -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 9 (vars -> empty .)
    FUNC            reduce using rule 9 (vars -> empty .)
    INICIO          reduce using rule 9 (vars -> empty .)
    }               reduce using rule 9 (vars -> empty .)
    ID              reduce using rule 9 (vars -> empty .)
    DIBUJAR         reduce using rule 9 (vars -> empty .)
    IF              reduce using rule 9 (vars -> empty .)
    LEER            reduce using rule 9 (vars -> empty .)
    WHILE           reduce using rule 9 (vars -> empty .)
    MUEVE           reduce using rule 9 (vars -> empty .)
    RETURN          reduce using rule 9 (vars -> empty .)

  ! FUNC            [ reduce using rule 11 (masTipos -> empty .) ]
  ! INICIO          [ reduce using rule 11 (masTipos -> empty .) ]
  ! }               [ reduce using rule 11 (masTipos -> empty .) ]
  ! ID              [ reduce using rule 11 (masTipos -> empty .) ]
  ! DIBUJAR         [ reduce using rule 11 (masTipos -> empty .) ]
  ! IF              [ reduce using rule 11 (masTipos -> empty .) ]
  ! LEER            [ reduce using rule 11 (masTipos -> empty .) ]
  ! WHILE           [ reduce using rule 11 (masTipos -> empty .) ]
  ! MUEVE           [ reduce using rule 11 (masTipos -> empty .) ]
  ! RETURN          [ reduce using rule 11 (masTipos -> empty .) ]


state 29

    (13) masIDS -> , . ID guardarIDs masIDS2

    ID              shift and go to state 37


state 30

    (8) vars -> tipo ID guardarIDs arreglo . ; masTipos

    ;               shift and go to state 38


state 31

    (17) arreglo -> [ . CTI ] matriz

    CTI             shift and go to state 39


state 32

    (12) listaIDS -> ID guardarIDs masIDS .

    ;               reduce using rule 12 (listaIDS -> ID guardarIDs masIDS .)


state 33

    (14) masIDS -> empty .

    ;               reduce using rule 14 (masIDS -> empty .)


state 34

    (20) funcion -> FUNC tipo ID funcAgregar . restoFuncion funcion2
    (24) restoFuncion -> . ( param ) bloquefunc

    (               shift and go to state 40

    restoFuncion                   shift and go to state 41

state 35

    (1) programa -> vars funcion INICIO funcAgregarInicio bloque . FIN liberarVar

    FIN             shift and go to state 42


state 36

    (4) bloque -> { . vars guardarCuadruplo estatuto }
    (5) bloque -> { . vars guardarCuadruplo }
    (6) bloque -> { . }
    (7) vars -> . tipo listaIDS ; masTipos
    (8) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (9) vars -> . empty
    (140) tipo -> . ENTERO
    (141) tipo -> . DECIMAL
    (142) tipo -> . BOOL
    (143) tipo -> . VOID
    (144) tipo -> . CUADRADO
    (145) tipo -> . RECTANGULO
    (146) tipo -> . CIRCULO
    (147) tipo -> . LINEA
    (148) tipo -> . ESTRELLA
    (156) empty -> .

  ! shift/reduce conflict for } resolved as shift
    }               shift and go to state 44
    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8
    ID              reduce using rule 156 (empty -> .)
    DIBUJAR         reduce using rule 156 (empty -> .)
    IF              reduce using rule 156 (empty -> .)
    LEER            reduce using rule 156 (empty -> .)
    WHILE           reduce using rule 156 (empty -> .)
    MUEVE           reduce using rule 156 (empty -> .)

  ! }               [ reduce using rule 156 (empty -> .) ]

    vars                           shift and go to state 43
    empty                          shift and go to state 5
    tipo                           shift and go to state 4

state 37

    (13) masIDS -> , ID . guardarIDs masIDS2
    (29) guardarIDs -> .

    ,               reduce using rule 29 (guardarIDs -> .)
    ;               reduce using rule 29 (guardarIDs -> .)

    guardarIDs                     shift and go to state 45

state 38

    (8) vars -> tipo ID guardarIDs arreglo ; . masTipos
    (10) masTipos -> . vars
    (11) masTipos -> . empty
    (7) vars -> . tipo listaIDS ; masTipos
    (8) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (9) vars -> . empty
    (156) empty -> .
    (140) tipo -> . ENTERO
    (141) tipo -> . DECIMAL
    (142) tipo -> . BOOL
    (143) tipo -> . VOID
    (144) tipo -> . CUADRADO
    (145) tipo -> . RECTANGULO
    (146) tipo -> . CIRCULO
    (147) tipo -> . LINEA
    (148) tipo -> . ESTRELLA

    FUNC            reduce using rule 156 (empty -> .)
    INICIO          reduce using rule 156 (empty -> .)
    }               reduce using rule 156 (empty -> .)
    ID              reduce using rule 156 (empty -> .)
    DIBUJAR         reduce using rule 156 (empty -> .)
    IF              reduce using rule 156 (empty -> .)
    LEER            reduce using rule 156 (empty -> .)
    WHILE           reduce using rule 156 (empty -> .)
    MUEVE           reduce using rule 156 (empty -> .)
    RETURN          reduce using rule 156 (empty -> .)
    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8

    masTipos                       shift and go to state 46
    tipo                           shift and go to state 4
    vars                           shift and go to state 27
    empty                          shift and go to state 28

state 39

    (17) arreglo -> [ CTI . ] matriz

    ]               shift and go to state 47


state 40

    (24) restoFuncion -> ( . param ) bloquefunc
    (26) param -> . tipo ID guardarIDParam maspaID
    (27) param -> . empty
    (140) tipo -> . ENTERO
    (141) tipo -> . DECIMAL
    (142) tipo -> . BOOL
    (143) tipo -> . VOID
    (144) tipo -> . CUADRADO
    (145) tipo -> . RECTANGULO
    (146) tipo -> . CIRCULO
    (147) tipo -> . LINEA
    (148) tipo -> . ESTRELLA
    (156) empty -> .

    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8
    )               reduce using rule 156 (empty -> .)

    tipo                           shift and go to state 48
    param                          shift and go to state 49
    empty                          shift and go to state 50

state 41

    (20) funcion -> FUNC tipo ID funcAgregar restoFuncion . funcion2
    (22) funcion2 -> . funcion
    (23) funcion2 -> . empty
    (20) funcion -> . FUNC tipo ID funcAgregar restoFuncion funcion2
    (21) funcion -> . empty
    (156) empty -> .

    FUNC            shift and go to state 15
    INICIO          reduce using rule 156 (empty -> .)

    funcion2                       shift and go to state 51
    empty                          shift and go to state 53
    funcion                        shift and go to state 52

state 42

    (1) programa -> vars funcion INICIO funcAgregarInicio bloque FIN . liberarVar
    (36) liberarVar -> .

    $end            reduce using rule 36 (liberarVar -> .)

    liberarVar                     shift and go to state 54

state 43

    (4) bloque -> { vars . guardarCuadruplo estatuto }
    (5) bloque -> { vars . guardarCuadruplo }
    (37) guardarCuadruplo -> .

    }               reduce using rule 37 (guardarCuadruplo -> .)
    ID              reduce using rule 37 (guardarCuadruplo -> .)
    DIBUJAR         reduce using rule 37 (guardarCuadruplo -> .)
    IF              reduce using rule 37 (guardarCuadruplo -> .)
    LEER            reduce using rule 37 (guardarCuadruplo -> .)
    WHILE           reduce using rule 37 (guardarCuadruplo -> .)
    MUEVE           reduce using rule 37 (guardarCuadruplo -> .)

    guardarCuadruplo               shift and go to state 55

state 44

    (6) bloque -> { } .

    FIN             reduce using rule 6 (bloque -> { } .)


state 45

    (13) masIDS -> , ID guardarIDs . masIDS2
    (15) masIDS2 -> . , ID guardarIDs masIDS
    (16) masIDS2 -> . empty
    (156) empty -> .

    ,               shift and go to state 57
    ;               reduce using rule 156 (empty -> .)

    masIDS2                        shift and go to state 56
    empty                          shift and go to state 58

state 46

    (8) vars -> tipo ID guardarIDs arreglo ; masTipos .

    }               reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    ID              reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    DIBUJAR         reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    IF              reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    LEER            reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    WHILE           reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    MUEVE           reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    FUNC            reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    INICIO          reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    RETURN          reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)


state 47

    (17) arreglo -> [ CTI ] . matriz
    (18) matriz -> . [ CTI ]
    (19) matriz -> . empty
    (156) empty -> .

    [               shift and go to state 59
    ;               reduce using rule 156 (empty -> .)

    empty                          shift and go to state 60
    matriz                         shift and go to state 61

state 48

    (26) param -> tipo . ID guardarIDParam maspaID

    ID              shift and go to state 62


state 49

    (24) restoFuncion -> ( param . ) bloquefunc

    )               shift and go to state 63


state 50

    (27) param -> empty .

    )               reduce using rule 27 (param -> empty .)


state 51

    (20) funcion -> FUNC tipo ID funcAgregar restoFuncion funcion2 .

    INICIO          reduce using rule 20 (funcion -> FUNC tipo ID funcAgregar restoFuncion funcion2 .)


state 52

    (22) funcion2 -> funcion .

    INICIO          reduce using rule 22 (funcion2 -> funcion .)


state 53

    (23) funcion2 -> empty .
    (21) funcion -> empty .

  ! reduce/reduce conflict for INICIO resolved using rule 21 (funcion -> empty .)
    INICIO          reduce using rule 21 (funcion -> empty .)

  ! INICIO          [ reduce using rule 23 (funcion2 -> empty .) ]


state 54

    (1) programa -> vars funcion INICIO funcAgregarInicio bloque FIN liberarVar .

    $end            reduce using rule 1 (programa -> vars funcion INICIO funcAgregarInicio bloque FIN liberarVar .)


state 55

    (4) bloque -> { vars guardarCuadruplo . estatuto }
    (5) bloque -> { vars guardarCuadruplo . }
    (40) estatuto -> . asignacion estatutoAux
    (41) estatuto -> . escritura estatutoAux
    (42) estatuto -> . condicion estatutoAux
    (43) estatuto -> . lectura estatutoAux
    (44) estatuto -> . whiles estatutoAux
    (45) estatuto -> . funcs estatutoAux
    (61) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (77) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (78) escritura -> . mueve
    (83) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (84) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos
    (71) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (125) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (50) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (149) mueve -> . MUEVE guardarToken opcionMue

    }               shift and go to state 77
    ID              shift and go to state 72
    DIBUJAR         shift and go to state 76
    IF              shift and go to state 73
    LEER            shift and go to state 74
    WHILE           shift and go to state 65
    MUEVE           shift and go to state 66

    funcs                          shift and go to state 64
    estatuto                       shift and go to state 67
    mueve                          shift and go to state 68
    condicion                      shift and go to state 69
    lectura                        shift and go to state 70
    whiles                         shift and go to state 71
    asignacion                     shift and go to state 75
    escritura                      shift and go to state 78

state 56

    (13) masIDS -> , ID guardarIDs masIDS2 .

    ;               reduce using rule 13 (masIDS -> , ID guardarIDs masIDS2 .)


state 57

    (15) masIDS2 -> , . ID guardarIDs masIDS

    ID              shift and go to state 79


state 58

    (16) masIDS2 -> empty .

    ;               reduce using rule 16 (masIDS2 -> empty .)


state 59

    (18) matriz -> [ . CTI ]

    CTI             shift and go to state 80


state 60

    (19) matriz -> empty .

    ;               reduce using rule 19 (matriz -> empty .)


state 61

    (17) arreglo -> [ CTI ] matriz .

    ;               reduce using rule 17 (arreglo -> [ CTI ] matriz .)


state 62

    (26) param -> tipo ID . guardarIDParam maspaID
    (28) guardarIDParam -> .

    ,               reduce using rule 28 (guardarIDParam -> .)
    )               reduce using rule 28 (guardarIDParam -> .)

    guardarIDParam                 shift and go to state 81

state 63

    (24) restoFuncion -> ( param ) . bloquefunc
    (32) bloquefunc -> . { vars guardarCuadruplo estatuto regresa } liberarVar
    (33) bloquefunc -> . { vars guardarCuadruplo regresa } liberarVar
    (34) bloquefunc -> . { guardarCuadruplo escritura regresa } liberarVar
    (35) bloquefunc -> . { }

    {               shift and go to state 82

    bloquefunc                     shift and go to state 83

state 64

    (45) estatuto -> funcs . estatutoAux
    (46) estatutoAux -> . estatuto
    (47) estatutoAux -> . empty
    (40) estatuto -> . asignacion estatutoAux
    (41) estatuto -> . escritura estatutoAux
    (42) estatuto -> . condicion estatutoAux
    (43) estatuto -> . lectura estatutoAux
    (44) estatuto -> . whiles estatutoAux
    (45) estatuto -> . funcs estatutoAux
    (156) empty -> .
    (61) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (77) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (78) escritura -> . mueve
    (83) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (84) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos
    (71) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (125) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (50) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (149) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 156 (empty -> .)
    RETURN          reduce using rule 156 (empty -> .)
    ID              shift and go to state 72
    DIBUJAR         shift and go to state 76
    IF              shift and go to state 73
    LEER            shift and go to state 74
    WHILE           shift and go to state 65
    MUEVE           shift and go to state 66

    funcs                          shift and go to state 64
    estatuto                       shift and go to state 84
    mueve                          shift and go to state 68
    condicion                      shift and go to state 69
    lectura                        shift and go to state 70
    empty                          shift and go to state 85
    whiles                         shift and go to state 71
    estatutoAux                    shift and go to state 86
    asignacion                     shift and go to state 75
    escritura                      shift and go to state 78

state 65

    (125) whiles -> WHILE . checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (126) checarWhile -> .

    (               reduce using rule 126 (checarWhile -> .)

    checarWhile                    shift and go to state 87

state 66

    (149) mueve -> MUEVE . guardarToken opcionMue
    (69) guardarToken -> .

    IZQUIERDA       reduce using rule 69 (guardarToken -> .)
    DERECHA         reduce using rule 69 (guardarToken -> .)
    ARRIBA          reduce using rule 69 (guardarToken -> .)
    ABAJO           reduce using rule 69 (guardarToken -> .)

    guardarToken                   shift and go to state 88

state 67

    (4) bloque -> { vars guardarCuadruplo estatuto . }

    }               shift and go to state 89


state 68

    (78) escritura -> mueve .

    ID              reduce using rule 78 (escritura -> mueve .)
    DIBUJAR         reduce using rule 78 (escritura -> mueve .)
    IF              reduce using rule 78 (escritura -> mueve .)
    LEER            reduce using rule 78 (escritura -> mueve .)
    WHILE           reduce using rule 78 (escritura -> mueve .)
    MUEVE           reduce using rule 78 (escritura -> mueve .)
    }               reduce using rule 78 (escritura -> mueve .)
    RETURN          reduce using rule 78 (escritura -> mueve .)


state 69

    (42) estatuto -> condicion . estatutoAux
    (46) estatutoAux -> . estatuto
    (47) estatutoAux -> . empty
    (40) estatuto -> . asignacion estatutoAux
    (41) estatuto -> . escritura estatutoAux
    (42) estatuto -> . condicion estatutoAux
    (43) estatuto -> . lectura estatutoAux
    (44) estatuto -> . whiles estatutoAux
    (45) estatuto -> . funcs estatutoAux
    (156) empty -> .
    (61) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (77) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (78) escritura -> . mueve
    (83) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (84) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos
    (71) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (125) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (50) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (149) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 156 (empty -> .)
    RETURN          reduce using rule 156 (empty -> .)
    ID              shift and go to state 72
    DIBUJAR         shift and go to state 76
    IF              shift and go to state 73
    LEER            shift and go to state 74
    WHILE           shift and go to state 65
    MUEVE           shift and go to state 66

    funcs                          shift and go to state 64
    estatuto                       shift and go to state 84
    mueve                          shift and go to state 68
    condicion                      shift and go to state 69
    lectura                        shift and go to state 70
    empty                          shift and go to state 85
    whiles                         shift and go to state 71
    estatutoAux                    shift and go to state 90
    asignacion                     shift and go to state 75
    escritura                      shift and go to state 78

state 70

    (43) estatuto -> lectura . estatutoAux
    (46) estatutoAux -> . estatuto
    (47) estatutoAux -> . empty
    (40) estatuto -> . asignacion estatutoAux
    (41) estatuto -> . escritura estatutoAux
    (42) estatuto -> . condicion estatutoAux
    (43) estatuto -> . lectura estatutoAux
    (44) estatuto -> . whiles estatutoAux
    (45) estatuto -> . funcs estatutoAux
    (156) empty -> .
    (61) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (77) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (78) escritura -> . mueve
    (83) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (84) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos
    (71) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (125) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (50) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (149) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 156 (empty -> .)
    RETURN          reduce using rule 156 (empty -> .)
    ID              shift and go to state 72
    DIBUJAR         shift and go to state 76
    IF              shift and go to state 73
    LEER            shift and go to state 74
    WHILE           shift and go to state 65
    MUEVE           shift and go to state 66

    funcs                          shift and go to state 64
    estatuto                       shift and go to state 84
    mueve                          shift and go to state 68
    condicion                      shift and go to state 69
    lectura                        shift and go to state 70
    empty                          shift and go to state 85
    whiles                         shift and go to state 71
    estatutoAux                    shift and go to state 91
    asignacion                     shift and go to state 75
    escritura                      shift and go to state 78

state 71

    (44) estatuto -> whiles . estatutoAux
    (46) estatutoAux -> . estatuto
    (47) estatutoAux -> . empty
    (40) estatuto -> . asignacion estatutoAux
    (41) estatuto -> . escritura estatutoAux
    (42) estatuto -> . condicion estatutoAux
    (43) estatuto -> . lectura estatutoAux
    (44) estatuto -> . whiles estatutoAux
    (45) estatuto -> . funcs estatutoAux
    (156) empty -> .
    (61) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (77) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (78) escritura -> . mueve
    (83) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (84) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos
    (71) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (125) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (50) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (149) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 156 (empty -> .)
    RETURN          reduce using rule 156 (empty -> .)
    ID              shift and go to state 72
    DIBUJAR         shift and go to state 76
    IF              shift and go to state 73
    LEER            shift and go to state 74
    WHILE           shift and go to state 65
    MUEVE           shift and go to state 66

    funcs                          shift and go to state 64
    estatuto                       shift and go to state 84
    mueve                          shift and go to state 68
    condicion                      shift and go to state 69
    lectura                        shift and go to state 70
    empty                          shift and go to state 85
    whiles                         shift and go to state 71
    estatutoAux                    shift and go to state 92
    asignacion                     shift and go to state 75
    escritura                      shift and go to state 78

state 72

    (61) asignacion -> ID . guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (50) funcs -> ID . guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (62) guardarIDPila -> .
    (51) guardarIDFunc -> .

    [               reduce using rule 62 (guardarIDPila -> .)
    =               reduce using rule 62 (guardarIDPila -> .)
    ;               reduce using rule 62 (guardarIDPila -> .)
    (               reduce using rule 51 (guardarIDFunc -> .)

    guardarIDPila                  shift and go to state 93
    guardarIDFunc                  shift and go to state 94

state 73

    (83) condicion -> IF . ( expresion ) checarIF bloqueCond finPilaSaltos
    (84) condicion -> IF . ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos

    (               shift and go to state 95


state 74

    (71) lectura -> LEER . guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (69) guardarToken -> .

    ID              reduce using rule 69 (guardarToken -> .)

    guardarToken                   shift and go to state 96

state 75

    (40) estatuto -> asignacion . estatutoAux
    (46) estatutoAux -> . estatuto
    (47) estatutoAux -> . empty
    (40) estatuto -> . asignacion estatutoAux
    (41) estatuto -> . escritura estatutoAux
    (42) estatuto -> . condicion estatutoAux
    (43) estatuto -> . lectura estatutoAux
    (44) estatuto -> . whiles estatutoAux
    (45) estatuto -> . funcs estatutoAux
    (156) empty -> .
    (61) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (77) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (78) escritura -> . mueve
    (83) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (84) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos
    (71) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (125) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (50) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (149) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 156 (empty -> .)
    RETURN          reduce using rule 156 (empty -> .)
    ID              shift and go to state 72
    DIBUJAR         shift and go to state 76
    IF              shift and go to state 73
    LEER            shift and go to state 74
    WHILE           shift and go to state 65
    MUEVE           shift and go to state 66

    funcs                          shift and go to state 64
    estatuto                       shift and go to state 84
    mueve                          shift and go to state 68
    condicion                      shift and go to state 69
    lectura                        shift and go to state 70
    empty                          shift and go to state 85
    whiles                         shift and go to state 71
    estatutoAux                    shift and go to state 97
    asignacion                     shift and go to state 75
    escritura                      shift and go to state 78

state 76

    (77) escritura -> DIBUJAR . guardarToken ( guardarParametros ) ;
    (69) guardarToken -> .

    (               reduce using rule 69 (guardarToken -> .)

    guardarToken                   shift and go to state 98

state 77

    (5) bloque -> { vars guardarCuadruplo } .

    FIN             reduce using rule 5 (bloque -> { vars guardarCuadruplo } .)


state 78

    (41) estatuto -> escritura . estatutoAux
    (46) estatutoAux -> . estatuto
    (47) estatutoAux -> . empty
    (40) estatuto -> . asignacion estatutoAux
    (41) estatuto -> . escritura estatutoAux
    (42) estatuto -> . condicion estatutoAux
    (43) estatuto -> . lectura estatutoAux
    (44) estatuto -> . whiles estatutoAux
    (45) estatuto -> . funcs estatutoAux
    (156) empty -> .
    (61) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (77) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (78) escritura -> . mueve
    (83) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (84) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos
    (71) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (125) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (50) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (149) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 156 (empty -> .)
    RETURN          reduce using rule 156 (empty -> .)
    ID              shift and go to state 72
    DIBUJAR         shift and go to state 76
    IF              shift and go to state 73
    LEER            shift and go to state 74
    WHILE           shift and go to state 65
    MUEVE           shift and go to state 66

    funcs                          shift and go to state 64
    estatuto                       shift and go to state 84
    mueve                          shift and go to state 68
    condicion                      shift and go to state 69
    lectura                        shift and go to state 70
    empty                          shift and go to state 85
    whiles                         shift and go to state 71
    estatutoAux                    shift and go to state 99
    asignacion                     shift and go to state 75
    escritura                      shift and go to state 78

state 79

    (15) masIDS2 -> , ID . guardarIDs masIDS
    (29) guardarIDs -> .

    ,               reduce using rule 29 (guardarIDs -> .)
    ;               reduce using rule 29 (guardarIDs -> .)

    guardarIDs                     shift and go to state 100

state 80

    (18) matriz -> [ CTI . ]

    ]               shift and go to state 101


state 81

    (26) param -> tipo ID guardarIDParam . maspaID
    (30) maspaID -> . , param
    (31) maspaID -> . empty
    (156) empty -> .

    ,               shift and go to state 103
    )               reduce using rule 156 (empty -> .)

    maspaID                        shift and go to state 102
    empty                          shift and go to state 104

state 82

    (32) bloquefunc -> { . vars guardarCuadruplo estatuto regresa } liberarVar
    (33) bloquefunc -> { . vars guardarCuadruplo regresa } liberarVar
    (34) bloquefunc -> { . guardarCuadruplo escritura regresa } liberarVar
    (35) bloquefunc -> { . }
    (7) vars -> . tipo listaIDS ; masTipos
    (8) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (9) vars -> . empty
    (37) guardarCuadruplo -> .
    (140) tipo -> . ENTERO
    (141) tipo -> . DECIMAL
    (142) tipo -> . BOOL
    (143) tipo -> . VOID
    (144) tipo -> . CUADRADO
    (145) tipo -> . RECTANGULO
    (146) tipo -> . CIRCULO
    (147) tipo -> . LINEA
    (148) tipo -> . ESTRELLA
    (156) empty -> .

  ! reduce/reduce conflict for DIBUJAR resolved using rule 37 (guardarCuadruplo -> .)
  ! reduce/reduce conflict for MUEVE resolved using rule 37 (guardarCuadruplo -> .)
    }               shift and go to state 107
    DIBUJAR         reduce using rule 37 (guardarCuadruplo -> .)
    MUEVE           reduce using rule 37 (guardarCuadruplo -> .)
    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8
    RETURN          reduce using rule 156 (empty -> .)
    ID              reduce using rule 156 (empty -> .)
    IF              reduce using rule 156 (empty -> .)
    LEER            reduce using rule 156 (empty -> .)
    WHILE           reduce using rule 156 (empty -> .)

  ! DIBUJAR         [ reduce using rule 156 (empty -> .) ]
  ! MUEVE           [ reduce using rule 156 (empty -> .) ]

    guardarCuadruplo               shift and go to state 106
    vars                           shift and go to state 105
    tipo                           shift and go to state 4
    empty                          shift and go to state 5

state 83

    (24) restoFuncion -> ( param ) bloquefunc .

    FUNC            reduce using rule 24 (restoFuncion -> ( param ) bloquefunc .)
    INICIO          reduce using rule 24 (restoFuncion -> ( param ) bloquefunc .)


state 84

    (46) estatutoAux -> estatuto .

    }               reduce using rule 46 (estatutoAux -> estatuto .)
    RETURN          reduce using rule 46 (estatutoAux -> estatuto .)


state 85

    (47) estatutoAux -> empty .

    }               reduce using rule 47 (estatutoAux -> empty .)
    RETURN          reduce using rule 47 (estatutoAux -> empty .)


state 86

    (45) estatuto -> funcs estatutoAux .

    }               reduce using rule 45 (estatuto -> funcs estatutoAux .)
    RETURN          reduce using rule 45 (estatuto -> funcs estatutoAux .)


state 87

    (125) whiles -> WHILE checarWhile . ( expresion ) checarContenido bloqueCond finPilaSaltosWhile

    (               shift and go to state 108


state 88

    (149) mueve -> MUEVE guardarToken . opcionMue
    (150) opcionMue -> . direccion ID guardarIDPila recibe_CTI checarMover ;
    (151) direccion -> . IZQUIERDA
    (152) direccion -> . DERECHA
    (153) direccion -> . ARRIBA
    (154) direccion -> . ABAJO

    IZQUIERDA       shift and go to state 111
    DERECHA         shift and go to state 113
    ARRIBA          shift and go to state 112
    ABAJO           shift and go to state 109

    direccion                      shift and go to state 110
    opcionMue                      shift and go to state 114

state 89

    (4) bloque -> { vars guardarCuadruplo estatuto } .

    FIN             reduce using rule 4 (bloque -> { vars guardarCuadruplo estatuto } .)


state 90

    (42) estatuto -> condicion estatutoAux .

    }               reduce using rule 42 (estatuto -> condicion estatutoAux .)
    RETURN          reduce using rule 42 (estatuto -> condicion estatutoAux .)


state 91

    (43) estatuto -> lectura estatutoAux .

    }               reduce using rule 43 (estatuto -> lectura estatutoAux .)
    RETURN          reduce using rule 43 (estatuto -> lectura estatutoAux .)


state 92

    (44) estatuto -> whiles estatutoAux .

    }               reduce using rule 44 (estatuto -> whiles estatutoAux .)
    RETURN          reduce using rule 44 (estatuto -> whiles estatutoAux .)


state 93

    (61) asignacion -> ID guardarIDPila . opcionAsignacion valorAsig ; checarOperadorIgual
    (64) opcionAsignacion -> . [ CTI ]
    (65) opcionAsignacion -> . [ CTI ] [ CTI ]
    (66) opcionAsignacion -> . empty
    (156) empty -> .

    [               shift and go to state 116
    =               reduce using rule 156 (empty -> .)
    ;               reduce using rule 156 (empty -> .)

    opcionAsignacion               shift and go to state 115
    empty                          shift and go to state 117

state 94

    (50) funcs -> ID guardarIDFunc . verProc generarERA auxExp checaNumParam generaGOSUB
    (52) verProc -> .

    (               reduce using rule 52 (verProc -> .)

    verProc                        shift and go to state 118

state 95

    (83) condicion -> IF ( . expresion ) checarIF bloqueCond finPilaSaltos
    (84) condicion -> IF ( . expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos
    (93) expresion -> . exp operacionLogica checaoperador6
    (94) expresion -> . exp
    (106) exp -> . termino checaroperador4
    (115) termino -> . factor checaroperador5
    (122) factor -> . fondoFalso expresion finFondoFalso
    (123) factor -> . varcte
    (107) fondoFalso -> . (
    (129) varcte -> . recibe_ID
    (130) varcte -> . recibe_CTF
    (131) varcte -> . recibe_CTI
    (132) varcte -> . recibe_TRUE
    (133) varcte -> . recibe_FALSE
    (134) varcte -> . funcs
    (135) recibe_ID -> . ID
    (136) recibe_CTF -> . CTF
    (137) recibe_CTI -> . CTI
    (138) recibe_TRUE -> . TRUE
    (139) recibe_FALSE -> . FALSE
    (50) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB

    (               shift and go to state 127
    ID              shift and go to state 130
    CTF             shift and go to state 120
    CTI             shift and go to state 123
    TRUE            shift and go to state 122
    FALSE           shift and go to state 132

    funcs                          shift and go to state 119
    termino                        shift and go to state 121
    recibe_TRUE                    shift and go to state 124
    varcte                         shift and go to state 125
    recibe_CTF                     shift and go to state 126
    recibe_CTI                     shift and go to state 133
    recibe_ID                      shift and go to state 128
    factor                         shift and go to state 129
    expresion                      shift and go to state 131
    exp                            shift and go to state 134
    fondoFalso                     shift and go to state 135
    recibe_FALSE                   shift and go to state 136

state 96

    (71) lectura -> LEER guardarToken . ID guardarIDPila checarLectura opcionesLectura ;

    ID              shift and go to state 137


state 97

    (40) estatuto -> asignacion estatutoAux .

    }               reduce using rule 40 (estatuto -> asignacion estatutoAux .)
    RETURN          reduce using rule 40 (estatuto -> asignacion estatutoAux .)


state 98

    (77) escritura -> DIBUJAR guardarToken . ( guardarParametros ) ;

    (               shift and go to state 138


state 99

    (41) estatuto -> escritura estatutoAux .

    }               reduce using rule 41 (estatuto -> escritura estatutoAux .)
    RETURN          reduce using rule 41 (estatuto -> escritura estatutoAux .)


state 100

    (15) masIDS2 -> , ID guardarIDs . masIDS
    (13) masIDS -> . , ID guardarIDs masIDS2
    (14) masIDS -> . empty
    (156) empty -> .

    ,               shift and go to state 29
    ;               reduce using rule 156 (empty -> .)

    masIDS                         shift and go to state 139
    empty                          shift and go to state 33

state 101

    (18) matriz -> [ CTI ] .

    ;               reduce using rule 18 (matriz -> [ CTI ] .)


state 102

    (26) param -> tipo ID guardarIDParam maspaID .

    )               reduce using rule 26 (param -> tipo ID guardarIDParam maspaID .)


state 103

    (30) maspaID -> , . param
    (26) param -> . tipo ID guardarIDParam maspaID
    (27) param -> . empty
    (140) tipo -> . ENTERO
    (141) tipo -> . DECIMAL
    (142) tipo -> . BOOL
    (143) tipo -> . VOID
    (144) tipo -> . CUADRADO
    (145) tipo -> . RECTANGULO
    (146) tipo -> . CIRCULO
    (147) tipo -> . LINEA
    (148) tipo -> . ESTRELLA
    (156) empty -> .

    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8
    )               reduce using rule 156 (empty -> .)

    empty                          shift and go to state 50
    tipo                           shift and go to state 48
    param                          shift and go to state 140

state 104

    (31) maspaID -> empty .

    )               reduce using rule 31 (maspaID -> empty .)


state 105

    (32) bloquefunc -> { vars . guardarCuadruplo estatuto regresa } liberarVar
    (33) bloquefunc -> { vars . guardarCuadruplo regresa } liberarVar
    (37) guardarCuadruplo -> .

    RETURN          reduce using rule 37 (guardarCuadruplo -> .)
    ID              reduce using rule 37 (guardarCuadruplo -> .)
    DIBUJAR         reduce using rule 37 (guardarCuadruplo -> .)
    IF              reduce using rule 37 (guardarCuadruplo -> .)
    LEER            reduce using rule 37 (guardarCuadruplo -> .)
    WHILE           reduce using rule 37 (guardarCuadruplo -> .)
    MUEVE           reduce using rule 37 (guardarCuadruplo -> .)

    guardarCuadruplo               shift and go to state 141

state 106

    (34) bloquefunc -> { guardarCuadruplo . escritura regresa } liberarVar
    (77) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (78) escritura -> . mueve
    (149) mueve -> . MUEVE guardarToken opcionMue

    DIBUJAR         shift and go to state 76
    MUEVE           shift and go to state 66

    mueve                          shift and go to state 68
    escritura                      shift and go to state 142

state 107

    (35) bloquefunc -> { } .

    FUNC            reduce using rule 35 (bloquefunc -> { } .)
    INICIO          reduce using rule 35 (bloquefunc -> { } .)


state 108

    (125) whiles -> WHILE checarWhile ( . expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (93) expresion -> . exp operacionLogica checaoperador6
    (94) expresion -> . exp
    (106) exp -> . termino checaroperador4
    (115) termino -> . factor checaroperador5
    (122) factor -> . fondoFalso expresion finFondoFalso
    (123) factor -> . varcte
    (107) fondoFalso -> . (
    (129) varcte -> . recibe_ID
    (130) varcte -> . recibe_CTF
    (131) varcte -> . recibe_CTI
    (132) varcte -> . recibe_TRUE
    (133) varcte -> . recibe_FALSE
    (134) varcte -> . funcs
    (135) recibe_ID -> . ID
    (136) recibe_CTF -> . CTF
    (137) recibe_CTI -> . CTI
    (138) recibe_TRUE -> . TRUE
    (139) recibe_FALSE -> . FALSE
    (50) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB

    (               shift and go to state 127
    ID              shift and go to state 130
    CTF             shift and go to state 120
    CTI             shift and go to state 123
    TRUE            shift and go to state 122
    FALSE           shift and go to state 132

    funcs                          shift and go to state 119
    termino                        shift and go to state 121
    recibe_TRUE                    shift and go to state 124
    varcte                         shift and go to state 125
    recibe_CTF                     shift and go to state 126
    recibe_CTI                     shift and go to state 133
    recibe_ID                      shift and go to state 128
    factor                         shift and go to state 129
    expresion                      shift and go to state 143
    exp                            shift and go to state 134
    fondoFalso                     shift and go to state 135
    recibe_FALSE                   shift and go to state 136

state 109

    (154) direccion -> ABAJO .

    ID              reduce using rule 154 (direccion -> ABAJO .)


state 110

    (150) opcionMue -> direccion . ID guardarIDPila recibe_CTI checarMover ;

    ID              shift and go to state 144


state 111

    (151) direccion -> IZQUIERDA .

    ID              reduce using rule 151 (direccion -> IZQUIERDA .)


state 112

    (153) direccion -> ARRIBA .

    ID              reduce using rule 153 (direccion -> ARRIBA .)


state 113

    (152) direccion -> DERECHA .

    ID              reduce using rule 152 (direccion -> DERECHA .)


state 114

    (149) mueve -> MUEVE guardarToken opcionMue .

    ID              reduce using rule 149 (mueve -> MUEVE guardarToken opcionMue .)
    DIBUJAR         reduce using rule 149 (mueve -> MUEVE guardarToken opcionMue .)
    IF              reduce using rule 149 (mueve -> MUEVE guardarToken opcionMue .)
    LEER            reduce using rule 149 (mueve -> MUEVE guardarToken opcionMue .)
    WHILE           reduce using rule 149 (mueve -> MUEVE guardarToken opcionMue .)
    MUEVE           reduce using rule 149 (mueve -> MUEVE guardarToken opcionMue .)
    }               reduce using rule 149 (mueve -> MUEVE guardarToken opcionMue .)
    RETURN          reduce using rule 149 (mueve -> MUEVE guardarToken opcionMue .)


state 115

    (61) asignacion -> ID guardarIDPila opcionAsignacion . valorAsig ; checarOperadorIgual
    (67) valorAsig -> . = expresion
    (68) valorAsig -> . empty
    (156) empty -> .

    =               shift and go to state 146
    ;               reduce using rule 156 (empty -> .)

    valorAsig                      shift and go to state 145
    empty                          shift and go to state 147

state 116

    (64) opcionAsignacion -> [ . CTI ]
    (65) opcionAsignacion -> [ . CTI ] [ CTI ]

    CTI             shift and go to state 148


state 117

    (66) opcionAsignacion -> empty .

    =               reduce using rule 66 (opcionAsignacion -> empty .)
    ;               reduce using rule 66 (opcionAsignacion -> empty .)


state 118

    (50) funcs -> ID guardarIDFunc verProc . generarERA auxExp checaNumParam generaGOSUB
    (53) generarERA -> . fondoFalso
    (107) fondoFalso -> . (

    (               shift and go to state 127

    generarERA                     shift and go to state 149
    fondoFalso                     shift and go to state 150

state 119

    (134) varcte -> funcs .

    *               reduce using rule 134 (varcte -> funcs .)
    /               reduce using rule 134 (varcte -> funcs .)
    +               reduce using rule 134 (varcte -> funcs .)
    -               reduce using rule 134 (varcte -> funcs .)
    )               reduce using rule 134 (varcte -> funcs .)
    ;               reduce using rule 134 (varcte -> funcs .)
    ,               reduce using rule 134 (varcte -> funcs .)
    >               reduce using rule 134 (varcte -> funcs .)
    <               reduce using rule 134 (varcte -> funcs .)
    MENORIGUAL      reduce using rule 134 (varcte -> funcs .)
    MAYORIGUAL      reduce using rule 134 (varcte -> funcs .)
    IGUALIGUAL      reduce using rule 134 (varcte -> funcs .)
    DIFERENTE       reduce using rule 134 (varcte -> funcs .)
    |               reduce using rule 134 (varcte -> funcs .)
    COAND           reduce using rule 134 (varcte -> funcs .)


state 120

    (136) recibe_CTF -> CTF .

    ,               reduce using rule 136 (recibe_CTF -> CTF .)
    *               reduce using rule 136 (recibe_CTF -> CTF .)
    /               reduce using rule 136 (recibe_CTF -> CTF .)
    +               reduce using rule 136 (recibe_CTF -> CTF .)
    -               reduce using rule 136 (recibe_CTF -> CTF .)
    >               reduce using rule 136 (recibe_CTF -> CTF .)
    <               reduce using rule 136 (recibe_CTF -> CTF .)
    MENORIGUAL      reduce using rule 136 (recibe_CTF -> CTF .)
    MAYORIGUAL      reduce using rule 136 (recibe_CTF -> CTF .)
    IGUALIGUAL      reduce using rule 136 (recibe_CTF -> CTF .)
    DIFERENTE       reduce using rule 136 (recibe_CTF -> CTF .)
    |               reduce using rule 136 (recibe_CTF -> CTF .)
    COAND           reduce using rule 136 (recibe_CTF -> CTF .)
    )               reduce using rule 136 (recibe_CTF -> CTF .)
    ;               reduce using rule 136 (recibe_CTF -> CTF .)


state 121

    (106) exp -> termino . checaroperador4
    (109) checaroperador4 -> . signo
    (110) checaroperador4 -> .
    (111) signo -> . push_pm exp
    (112) signo -> .
    (113) push_pm -> . +
    (114) push_pm -> . -

  ! reduce/reduce conflict for > resolved using rule 110 (checaroperador4 -> .)
  ! reduce/reduce conflict for < resolved using rule 110 (checaroperador4 -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 110 (checaroperador4 -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 110 (checaroperador4 -> .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 110 (checaroperador4 -> .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 110 (checaroperador4 -> .)
  ! reduce/reduce conflict for | resolved using rule 110 (checaroperador4 -> .)
  ! reduce/reduce conflict for COAND resolved using rule 110 (checaroperador4 -> .)
  ! reduce/reduce conflict for ) resolved using rule 110 (checaroperador4 -> .)
  ! reduce/reduce conflict for ; resolved using rule 110 (checaroperador4 -> .)
  ! reduce/reduce conflict for , resolved using rule 110 (checaroperador4 -> .)
    >               reduce using rule 110 (checaroperador4 -> .)
    <               reduce using rule 110 (checaroperador4 -> .)
    MENORIGUAL      reduce using rule 110 (checaroperador4 -> .)
    MAYORIGUAL      reduce using rule 110 (checaroperador4 -> .)
    IGUALIGUAL      reduce using rule 110 (checaroperador4 -> .)
    DIFERENTE       reduce using rule 110 (checaroperador4 -> .)
    |               reduce using rule 110 (checaroperador4 -> .)
    COAND           reduce using rule 110 (checaroperador4 -> .)
    )               reduce using rule 110 (checaroperador4 -> .)
    ;               reduce using rule 110 (checaroperador4 -> .)
    ,               reduce using rule 110 (checaroperador4 -> .)
    +               shift and go to state 151
    -               shift and go to state 153

  ! >               [ reduce using rule 112 (signo -> .) ]
  ! <               [ reduce using rule 112 (signo -> .) ]
  ! MENORIGUAL      [ reduce using rule 112 (signo -> .) ]
  ! MAYORIGUAL      [ reduce using rule 112 (signo -> .) ]
  ! IGUALIGUAL      [ reduce using rule 112 (signo -> .) ]
  ! DIFERENTE       [ reduce using rule 112 (signo -> .) ]
  ! |               [ reduce using rule 112 (signo -> .) ]
  ! COAND           [ reduce using rule 112 (signo -> .) ]
  ! )               [ reduce using rule 112 (signo -> .) ]
  ! ;               [ reduce using rule 112 (signo -> .) ]
  ! ,               [ reduce using rule 112 (signo -> .) ]

    push_pm                        shift and go to state 155
    signo                          shift and go to state 152
    checaroperador4                shift and go to state 154

state 122

    (138) recibe_TRUE -> TRUE .

    *               reduce using rule 138 (recibe_TRUE -> TRUE .)
    /               reduce using rule 138 (recibe_TRUE -> TRUE .)
    +               reduce using rule 138 (recibe_TRUE -> TRUE .)
    -               reduce using rule 138 (recibe_TRUE -> TRUE .)
    >               reduce using rule 138 (recibe_TRUE -> TRUE .)
    <               reduce using rule 138 (recibe_TRUE -> TRUE .)
    MENORIGUAL      reduce using rule 138 (recibe_TRUE -> TRUE .)
    MAYORIGUAL      reduce using rule 138 (recibe_TRUE -> TRUE .)
    IGUALIGUAL      reduce using rule 138 (recibe_TRUE -> TRUE .)
    DIFERENTE       reduce using rule 138 (recibe_TRUE -> TRUE .)
    |               reduce using rule 138 (recibe_TRUE -> TRUE .)
    COAND           reduce using rule 138 (recibe_TRUE -> TRUE .)
    )               reduce using rule 138 (recibe_TRUE -> TRUE .)
    ,               reduce using rule 138 (recibe_TRUE -> TRUE .)
    ;               reduce using rule 138 (recibe_TRUE -> TRUE .)


state 123

    (137) recibe_CTI -> CTI .

    *               reduce using rule 137 (recibe_CTI -> CTI .)
    /               reduce using rule 137 (recibe_CTI -> CTI .)
    +               reduce using rule 137 (recibe_CTI -> CTI .)
    -               reduce using rule 137 (recibe_CTI -> CTI .)
    >               reduce using rule 137 (recibe_CTI -> CTI .)
    <               reduce using rule 137 (recibe_CTI -> CTI .)
    MENORIGUAL      reduce using rule 137 (recibe_CTI -> CTI .)
    MAYORIGUAL      reduce using rule 137 (recibe_CTI -> CTI .)
    IGUALIGUAL      reduce using rule 137 (recibe_CTI -> CTI .)
    DIFERENTE       reduce using rule 137 (recibe_CTI -> CTI .)
    |               reduce using rule 137 (recibe_CTI -> CTI .)
    COAND           reduce using rule 137 (recibe_CTI -> CTI .)
    ;               reduce using rule 137 (recibe_CTI -> CTI .)
    )               reduce using rule 137 (recibe_CTI -> CTI .)
    ,               reduce using rule 137 (recibe_CTI -> CTI .)


state 124

    (132) varcte -> recibe_TRUE .

    *               reduce using rule 132 (varcte -> recibe_TRUE .)
    /               reduce using rule 132 (varcte -> recibe_TRUE .)
    +               reduce using rule 132 (varcte -> recibe_TRUE .)
    -               reduce using rule 132 (varcte -> recibe_TRUE .)
    )               reduce using rule 132 (varcte -> recibe_TRUE .)
    ;               reduce using rule 132 (varcte -> recibe_TRUE .)
    ,               reduce using rule 132 (varcte -> recibe_TRUE .)
    >               reduce using rule 132 (varcte -> recibe_TRUE .)
    <               reduce using rule 132 (varcte -> recibe_TRUE .)
    MENORIGUAL      reduce using rule 132 (varcte -> recibe_TRUE .)
    MAYORIGUAL      reduce using rule 132 (varcte -> recibe_TRUE .)
    IGUALIGUAL      reduce using rule 132 (varcte -> recibe_TRUE .)
    DIFERENTE       reduce using rule 132 (varcte -> recibe_TRUE .)
    |               reduce using rule 132 (varcte -> recibe_TRUE .)
    COAND           reduce using rule 132 (varcte -> recibe_TRUE .)


state 125

    (123) factor -> varcte .

    *               reduce using rule 123 (factor -> varcte .)
    /               reduce using rule 123 (factor -> varcte .)
    +               reduce using rule 123 (factor -> varcte .)
    -               reduce using rule 123 (factor -> varcte .)
    >               reduce using rule 123 (factor -> varcte .)
    <               reduce using rule 123 (factor -> varcte .)
    MENORIGUAL      reduce using rule 123 (factor -> varcte .)
    MAYORIGUAL      reduce using rule 123 (factor -> varcte .)
    IGUALIGUAL      reduce using rule 123 (factor -> varcte .)
    DIFERENTE       reduce using rule 123 (factor -> varcte .)
    |               reduce using rule 123 (factor -> varcte .)
    COAND           reduce using rule 123 (factor -> varcte .)
    )               reduce using rule 123 (factor -> varcte .)
    ;               reduce using rule 123 (factor -> varcte .)
    ,               reduce using rule 123 (factor -> varcte .)


state 126

    (130) varcte -> recibe_CTF .

    *               reduce using rule 130 (varcte -> recibe_CTF .)
    /               reduce using rule 130 (varcte -> recibe_CTF .)
    +               reduce using rule 130 (varcte -> recibe_CTF .)
    -               reduce using rule 130 (varcte -> recibe_CTF .)
    )               reduce using rule 130 (varcte -> recibe_CTF .)
    ;               reduce using rule 130 (varcte -> recibe_CTF .)
    ,               reduce using rule 130 (varcte -> recibe_CTF .)
    >               reduce using rule 130 (varcte -> recibe_CTF .)
    <               reduce using rule 130 (varcte -> recibe_CTF .)
    MENORIGUAL      reduce using rule 130 (varcte -> recibe_CTF .)
    MAYORIGUAL      reduce using rule 130 (varcte -> recibe_CTF .)
    IGUALIGUAL      reduce using rule 130 (varcte -> recibe_CTF .)
    DIFERENTE       reduce using rule 130 (varcte -> recibe_CTF .)
    |               reduce using rule 130 (varcte -> recibe_CTF .)
    COAND           reduce using rule 130 (varcte -> recibe_CTF .)


state 127

    (107) fondoFalso -> ( .

    (               reduce using rule 107 (fondoFalso -> ( .)
    ID              reduce using rule 107 (fondoFalso -> ( .)
    CTF             reduce using rule 107 (fondoFalso -> ( .)
    CTI             reduce using rule 107 (fondoFalso -> ( .)
    TRUE            reduce using rule 107 (fondoFalso -> ( .)
    FALSE           reduce using rule 107 (fondoFalso -> ( .)


state 128

    (129) varcte -> recibe_ID .

    *               reduce using rule 129 (varcte -> recibe_ID .)
    /               reduce using rule 129 (varcte -> recibe_ID .)
    +               reduce using rule 129 (varcte -> recibe_ID .)
    -               reduce using rule 129 (varcte -> recibe_ID .)
    )               reduce using rule 129 (varcte -> recibe_ID .)
    ;               reduce using rule 129 (varcte -> recibe_ID .)
    ,               reduce using rule 129 (varcte -> recibe_ID .)
    >               reduce using rule 129 (varcte -> recibe_ID .)
    <               reduce using rule 129 (varcte -> recibe_ID .)
    MENORIGUAL      reduce using rule 129 (varcte -> recibe_ID .)
    MAYORIGUAL      reduce using rule 129 (varcte -> recibe_ID .)
    IGUALIGUAL      reduce using rule 129 (varcte -> recibe_ID .)
    DIFERENTE       reduce using rule 129 (varcte -> recibe_ID .)
    |               reduce using rule 129 (varcte -> recibe_ID .)
    COAND           reduce using rule 129 (varcte -> recibe_ID .)


state 129

    (115) termino -> factor . checaroperador5
    (116) checaroperador5 -> . masop
    (117) checaroperador5 -> .
    (118) masop -> . push_td termino
    (119) masop -> .
    (120) push_td -> . *
    (121) push_td -> . /

  ! reduce/reduce conflict for + resolved using rule 117 (checaroperador5 -> .)
  ! reduce/reduce conflict for - resolved using rule 117 (checaroperador5 -> .)
  ! reduce/reduce conflict for > resolved using rule 117 (checaroperador5 -> .)
  ! reduce/reduce conflict for < resolved using rule 117 (checaroperador5 -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 117 (checaroperador5 -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 117 (checaroperador5 -> .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 117 (checaroperador5 -> .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 117 (checaroperador5 -> .)
  ! reduce/reduce conflict for | resolved using rule 117 (checaroperador5 -> .)
  ! reduce/reduce conflict for COAND resolved using rule 117 (checaroperador5 -> .)
  ! reduce/reduce conflict for ) resolved using rule 117 (checaroperador5 -> .)
  ! reduce/reduce conflict for ; resolved using rule 117 (checaroperador5 -> .)
  ! reduce/reduce conflict for , resolved using rule 117 (checaroperador5 -> .)
    +               reduce using rule 117 (checaroperador5 -> .)
    -               reduce using rule 117 (checaroperador5 -> .)
    >               reduce using rule 117 (checaroperador5 -> .)
    <               reduce using rule 117 (checaroperador5 -> .)
    MENORIGUAL      reduce using rule 117 (checaroperador5 -> .)
    MAYORIGUAL      reduce using rule 117 (checaroperador5 -> .)
    IGUALIGUAL      reduce using rule 117 (checaroperador5 -> .)
    DIFERENTE       reduce using rule 117 (checaroperador5 -> .)
    |               reduce using rule 117 (checaroperador5 -> .)
    COAND           reduce using rule 117 (checaroperador5 -> .)
    )               reduce using rule 117 (checaroperador5 -> .)
    ;               reduce using rule 117 (checaroperador5 -> .)
    ,               reduce using rule 117 (checaroperador5 -> .)
    *               shift and go to state 156
    /               shift and go to state 157

  ! +               [ reduce using rule 119 (masop -> .) ]
  ! -               [ reduce using rule 119 (masop -> .) ]
  ! >               [ reduce using rule 119 (masop -> .) ]
  ! <               [ reduce using rule 119 (masop -> .) ]
  ! MENORIGUAL      [ reduce using rule 119 (masop -> .) ]
  ! MAYORIGUAL      [ reduce using rule 119 (masop -> .) ]
  ! IGUALIGUAL      [ reduce using rule 119 (masop -> .) ]
  ! DIFERENTE       [ reduce using rule 119 (masop -> .) ]
  ! |               [ reduce using rule 119 (masop -> .) ]
  ! COAND           [ reduce using rule 119 (masop -> .) ]
  ! )               [ reduce using rule 119 (masop -> .) ]
  ! ;               [ reduce using rule 119 (masop -> .) ]
  ! ,               [ reduce using rule 119 (masop -> .) ]

    masop                          shift and go to state 158
    push_td                        shift and go to state 160
    checaroperador5                shift and go to state 159

state 130

    (135) recibe_ID -> ID .
    (50) funcs -> ID . guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (51) guardarIDFunc -> .

    *               reduce using rule 135 (recibe_ID -> ID .)
    /               reduce using rule 135 (recibe_ID -> ID .)
    +               reduce using rule 135 (recibe_ID -> ID .)
    -               reduce using rule 135 (recibe_ID -> ID .)
    >               reduce using rule 135 (recibe_ID -> ID .)
    <               reduce using rule 135 (recibe_ID -> ID .)
    MENORIGUAL      reduce using rule 135 (recibe_ID -> ID .)
    MAYORIGUAL      reduce using rule 135 (recibe_ID -> ID .)
    IGUALIGUAL      reduce using rule 135 (recibe_ID -> ID .)
    DIFERENTE       reduce using rule 135 (recibe_ID -> ID .)
    |               reduce using rule 135 (recibe_ID -> ID .)
    COAND           reduce using rule 135 (recibe_ID -> ID .)
    ;               reduce using rule 135 (recibe_ID -> ID .)
    ,               reduce using rule 135 (recibe_ID -> ID .)
    )               reduce using rule 135 (recibe_ID -> ID .)
    (               reduce using rule 51 (guardarIDFunc -> .)

    guardarIDFunc                  shift and go to state 94

state 131

    (83) condicion -> IF ( expresion . ) checarIF bloqueCond finPilaSaltos
    (84) condicion -> IF ( expresion . ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos

    )               shift and go to state 161


state 132

    (139) recibe_FALSE -> FALSE .

    *               reduce using rule 139 (recibe_FALSE -> FALSE .)
    /               reduce using rule 139 (recibe_FALSE -> FALSE .)
    +               reduce using rule 139 (recibe_FALSE -> FALSE .)
    -               reduce using rule 139 (recibe_FALSE -> FALSE .)
    >               reduce using rule 139 (recibe_FALSE -> FALSE .)
    <               reduce using rule 139 (recibe_FALSE -> FALSE .)
    MENORIGUAL      reduce using rule 139 (recibe_FALSE -> FALSE .)
    MAYORIGUAL      reduce using rule 139 (recibe_FALSE -> FALSE .)
    IGUALIGUAL      reduce using rule 139 (recibe_FALSE -> FALSE .)
    DIFERENTE       reduce using rule 139 (recibe_FALSE -> FALSE .)
    |               reduce using rule 139 (recibe_FALSE -> FALSE .)
    COAND           reduce using rule 139 (recibe_FALSE -> FALSE .)
    )               reduce using rule 139 (recibe_FALSE -> FALSE .)
    ;               reduce using rule 139 (recibe_FALSE -> FALSE .)
    ,               reduce using rule 139 (recibe_FALSE -> FALSE .)


state 133

    (131) varcte -> recibe_CTI .

    *               reduce using rule 131 (varcte -> recibe_CTI .)
    /               reduce using rule 131 (varcte -> recibe_CTI .)
    +               reduce using rule 131 (varcte -> recibe_CTI .)
    -               reduce using rule 131 (varcte -> recibe_CTI .)
    )               reduce using rule 131 (varcte -> recibe_CTI .)
    ;               reduce using rule 131 (varcte -> recibe_CTI .)
    ,               reduce using rule 131 (varcte -> recibe_CTI .)
    >               reduce using rule 131 (varcte -> recibe_CTI .)
    <               reduce using rule 131 (varcte -> recibe_CTI .)
    MENORIGUAL      reduce using rule 131 (varcte -> recibe_CTI .)
    MAYORIGUAL      reduce using rule 131 (varcte -> recibe_CTI .)
    IGUALIGUAL      reduce using rule 131 (varcte -> recibe_CTI .)
    DIFERENTE       reduce using rule 131 (varcte -> recibe_CTI .)
    |               reduce using rule 131 (varcte -> recibe_CTI .)
    COAND           reduce using rule 131 (varcte -> recibe_CTI .)


state 134

    (93) expresion -> exp . operacionLogica checaoperador6
    (94) expresion -> exp .
    (103) operacionLogica -> . push_logica exp
    (104) operacionLogica -> .
    (95) push_logica -> . >
    (96) push_logica -> . <
    (97) push_logica -> . MENORIGUAL
    (98) push_logica -> . MAYORIGUAL
    (99) push_logica -> . IGUALIGUAL
    (100) push_logica -> . DIFERENTE
    (101) push_logica -> . |
    (102) push_logica -> . COAND

  ! reduce/reduce conflict for ) resolved using rule 94 (expresion -> exp .)
  ! reduce/reduce conflict for ; resolved using rule 94 (expresion -> exp .)
  ! reduce/reduce conflict for , resolved using rule 94 (expresion -> exp .)
    )               reduce using rule 94 (expresion -> exp .)
    ,               reduce using rule 94 (expresion -> exp .)
    ;               reduce using rule 94 (expresion -> exp .)
    >               shift and go to state 171
    <               shift and go to state 170
    MENORIGUAL      shift and go to state 169
    MAYORIGUAL      shift and go to state 168
    IGUALIGUAL      shift and go to state 165
    DIFERENTE       shift and go to state 164
    |               shift and go to state 163
    COAND           shift and go to state 162

  ! )               [ reduce using rule 104 (operacionLogica -> .) ]
  ! ;               [ reduce using rule 104 (operacionLogica -> .) ]
  ! ,               [ reduce using rule 104 (operacionLogica -> .) ]

    operacionLogica                shift and go to state 166
    push_logica                    shift and go to state 167

state 135

    (122) factor -> fondoFalso . expresion finFondoFalso
    (93) expresion -> . exp operacionLogica checaoperador6
    (94) expresion -> . exp
    (106) exp -> . termino checaroperador4
    (115) termino -> . factor checaroperador5
    (122) factor -> . fondoFalso expresion finFondoFalso
    (123) factor -> . varcte
    (107) fondoFalso -> . (
    (129) varcte -> . recibe_ID
    (130) varcte -> . recibe_CTF
    (131) varcte -> . recibe_CTI
    (132) varcte -> . recibe_TRUE
    (133) varcte -> . recibe_FALSE
    (134) varcte -> . funcs
    (135) recibe_ID -> . ID
    (136) recibe_CTF -> . CTF
    (137) recibe_CTI -> . CTI
    (138) recibe_TRUE -> . TRUE
    (139) recibe_FALSE -> . FALSE
    (50) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB

    (               shift and go to state 127
    ID              shift and go to state 130
    CTF             shift and go to state 120
    CTI             shift and go to state 123
    TRUE            shift and go to state 122
    FALSE           shift and go to state 132

    funcs                          shift and go to state 119
    termino                        shift and go to state 121
    recibe_TRUE                    shift and go to state 124
    varcte                         shift and go to state 125
    recibe_CTF                     shift and go to state 126
    recibe_CTI                     shift and go to state 133
    recibe_ID                      shift and go to state 128
    factor                         shift and go to state 129
    exp                            shift and go to state 134
    expresion                      shift and go to state 172
    recibe_FALSE                   shift and go to state 136
    fondoFalso                     shift and go to state 135

state 136

    (133) varcte -> recibe_FALSE .

    *               reduce using rule 133 (varcte -> recibe_FALSE .)
    /               reduce using rule 133 (varcte -> recibe_FALSE .)
    +               reduce using rule 133 (varcte -> recibe_FALSE .)
    -               reduce using rule 133 (varcte -> recibe_FALSE .)
    )               reduce using rule 133 (varcte -> recibe_FALSE .)
    ;               reduce using rule 133 (varcte -> recibe_FALSE .)
    ,               reduce using rule 133 (varcte -> recibe_FALSE .)
    >               reduce using rule 133 (varcte -> recibe_FALSE .)
    <               reduce using rule 133 (varcte -> recibe_FALSE .)
    MENORIGUAL      reduce using rule 133 (varcte -> recibe_FALSE .)
    MAYORIGUAL      reduce using rule 133 (varcte -> recibe_FALSE .)
    IGUALIGUAL      reduce using rule 133 (varcte -> recibe_FALSE .)
    DIFERENTE       reduce using rule 133 (varcte -> recibe_FALSE .)
    |               reduce using rule 133 (varcte -> recibe_FALSE .)
    COAND           reduce using rule 133 (varcte -> recibe_FALSE .)


state 137

    (71) lectura -> LEER guardarToken ID . guardarIDPila checarLectura opcionesLectura ;
    (62) guardarIDPila -> .

    [               reduce using rule 62 (guardarIDPila -> .)
    ;               reduce using rule 62 (guardarIDPila -> .)

    guardarIDPila                  shift and go to state 173

state 138

    (77) escritura -> DIBUJAR guardarToken ( . guardarParametros ) ;
    (75) guardarParametros -> . ID guardarIDPila pos color checarDibujar

    ID              shift and go to state 175

    guardarParametros              shift and go to state 174

state 139

    (15) masIDS2 -> , ID guardarIDs masIDS .

    ;               reduce using rule 15 (masIDS2 -> , ID guardarIDs masIDS .)


state 140

    (30) maspaID -> , param .

    )               reduce using rule 30 (maspaID -> , param .)


state 141

    (32) bloquefunc -> { vars guardarCuadruplo . estatuto regresa } liberarVar
    (33) bloquefunc -> { vars guardarCuadruplo . regresa } liberarVar
    (40) estatuto -> . asignacion estatutoAux
    (41) estatuto -> . escritura estatutoAux
    (42) estatuto -> . condicion estatutoAux
    (43) estatuto -> . lectura estatutoAux
    (44) estatuto -> . whiles estatutoAux
    (45) estatuto -> . funcs estatutoAux
    (38) regresa -> . RETURN ID generarCuadRetorno
    (61) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (77) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (78) escritura -> . mueve
    (83) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (84) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos
    (71) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (125) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (50) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (149) mueve -> . MUEVE guardarToken opcionMue

    RETURN          shift and go to state 176
    ID              shift and go to state 72
    DIBUJAR         shift and go to state 76
    IF              shift and go to state 73
    LEER            shift and go to state 74
    WHILE           shift and go to state 65
    MUEVE           shift and go to state 66

    funcs                          shift and go to state 64
    estatuto                       shift and go to state 177
    mueve                          shift and go to state 68
    condicion                      shift and go to state 69
    lectura                        shift and go to state 70
    whiles                         shift and go to state 71
    asignacion                     shift and go to state 75
    regresa                        shift and go to state 178
    escritura                      shift and go to state 78

state 142

    (34) bloquefunc -> { guardarCuadruplo escritura . regresa } liberarVar
    (38) regresa -> . RETURN ID generarCuadRetorno

    RETURN          shift and go to state 176

    regresa                        shift and go to state 179

state 143

    (125) whiles -> WHILE checarWhile ( expresion . ) checarContenido bloqueCond finPilaSaltosWhile

    )               shift and go to state 180


state 144

    (150) opcionMue -> direccion ID . guardarIDPila recibe_CTI checarMover ;
    (62) guardarIDPila -> .

    CTI             reduce using rule 62 (guardarIDPila -> .)

    guardarIDPila                  shift and go to state 181

state 145

    (61) asignacion -> ID guardarIDPila opcionAsignacion valorAsig . ; checarOperadorIgual

    ;               shift and go to state 182


state 146

    (67) valorAsig -> = . expresion
    (93) expresion -> . exp operacionLogica checaoperador6
    (94) expresion -> . exp
    (106) exp -> . termino checaroperador4
    (115) termino -> . factor checaroperador5
    (122) factor -> . fondoFalso expresion finFondoFalso
    (123) factor -> . varcte
    (107) fondoFalso -> . (
    (129) varcte -> . recibe_ID
    (130) varcte -> . recibe_CTF
    (131) varcte -> . recibe_CTI
    (132) varcte -> . recibe_TRUE
    (133) varcte -> . recibe_FALSE
    (134) varcte -> . funcs
    (135) recibe_ID -> . ID
    (136) recibe_CTF -> . CTF
    (137) recibe_CTI -> . CTI
    (138) recibe_TRUE -> . TRUE
    (139) recibe_FALSE -> . FALSE
    (50) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB

    (               shift and go to state 127
    ID              shift and go to state 130
    CTF             shift and go to state 120
    CTI             shift and go to state 123
    TRUE            shift and go to state 122
    FALSE           shift and go to state 132

    funcs                          shift and go to state 119
    termino                        shift and go to state 121
    recibe_TRUE                    shift and go to state 124
    varcte                         shift and go to state 125
    recibe_CTF                     shift and go to state 126
    recibe_CTI                     shift and go to state 133
    recibe_ID                      shift and go to state 128
    factor                         shift and go to state 129
    exp                            shift and go to state 134
    expresion                      shift and go to state 183
    fondoFalso                     shift and go to state 135
    recibe_FALSE                   shift and go to state 136

state 147

    (68) valorAsig -> empty .

    ;               reduce using rule 68 (valorAsig -> empty .)


state 148

    (64) opcionAsignacion -> [ CTI . ]
    (65) opcionAsignacion -> [ CTI . ] [ CTI ]

    ]               shift and go to state 184


state 149

    (50) funcs -> ID guardarIDFunc verProc generarERA . auxExp checaNumParam generaGOSUB
    (54) auxExp -> . listaExp llegaComa
    (55) auxExp -> . listaExp
    (58) listaExp -> . expresion verificarTiposFunc masExps
    (93) expresion -> . exp operacionLogica checaoperador6
    (94) expresion -> . exp
    (106) exp -> . termino checaroperador4
    (115) termino -> . factor checaroperador5
    (122) factor -> . fondoFalso expresion finFondoFalso
    (123) factor -> . varcte
    (107) fondoFalso -> . (
    (129) varcte -> . recibe_ID
    (130) varcte -> . recibe_CTF
    (131) varcte -> . recibe_CTI
    (132) varcte -> . recibe_TRUE
    (133) varcte -> . recibe_FALSE
    (134) varcte -> . funcs
    (135) recibe_ID -> . ID
    (136) recibe_CTF -> . CTF
    (137) recibe_CTI -> . CTI
    (138) recibe_TRUE -> . TRUE
    (139) recibe_FALSE -> . FALSE
    (50) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB

    (               shift and go to state 127
    ID              shift and go to state 130
    CTF             shift and go to state 120
    CTI             shift and go to state 123
    TRUE            shift and go to state 122
    FALSE           shift and go to state 132

    funcs                          shift and go to state 119
    termino                        shift and go to state 121
    recibe_TRUE                    shift and go to state 124
    varcte                         shift and go to state 125
    recibe_CTF                     shift and go to state 126
    recibe_CTI                     shift and go to state 133
    recibe_ID                      shift and go to state 128
    factor                         shift and go to state 129
    listaExp                       shift and go to state 185
    auxExp                         shift and go to state 186
    expresion                      shift and go to state 187
    exp                            shift and go to state 134
    fondoFalso                     shift and go to state 135
    recibe_FALSE                   shift and go to state 136

state 150

    (53) generarERA -> fondoFalso .

    (               reduce using rule 53 (generarERA -> fondoFalso .)
    ID              reduce using rule 53 (generarERA -> fondoFalso .)
    CTF             reduce using rule 53 (generarERA -> fondoFalso .)
    CTI             reduce using rule 53 (generarERA -> fondoFalso .)
    TRUE            reduce using rule 53 (generarERA -> fondoFalso .)
    FALSE           reduce using rule 53 (generarERA -> fondoFalso .)


state 151

    (113) push_pm -> + .

    (               reduce using rule 113 (push_pm -> + .)
    ID              reduce using rule 113 (push_pm -> + .)
    CTF             reduce using rule 113 (push_pm -> + .)
    CTI             reduce using rule 113 (push_pm -> + .)
    TRUE            reduce using rule 113 (push_pm -> + .)
    FALSE           reduce using rule 113 (push_pm -> + .)


state 152

    (109) checaroperador4 -> signo .

    >               reduce using rule 109 (checaroperador4 -> signo .)
    <               reduce using rule 109 (checaroperador4 -> signo .)
    MENORIGUAL      reduce using rule 109 (checaroperador4 -> signo .)
    MAYORIGUAL      reduce using rule 109 (checaroperador4 -> signo .)
    IGUALIGUAL      reduce using rule 109 (checaroperador4 -> signo .)
    DIFERENTE       reduce using rule 109 (checaroperador4 -> signo .)
    |               reduce using rule 109 (checaroperador4 -> signo .)
    COAND           reduce using rule 109 (checaroperador4 -> signo .)
    )               reduce using rule 109 (checaroperador4 -> signo .)
    ;               reduce using rule 109 (checaroperador4 -> signo .)
    ,               reduce using rule 109 (checaroperador4 -> signo .)


state 153

    (114) push_pm -> - .

    (               reduce using rule 114 (push_pm -> - .)
    ID              reduce using rule 114 (push_pm -> - .)
    CTF             reduce using rule 114 (push_pm -> - .)
    CTI             reduce using rule 114 (push_pm -> - .)
    TRUE            reduce using rule 114 (push_pm -> - .)
    FALSE           reduce using rule 114 (push_pm -> - .)


state 154

    (106) exp -> termino checaroperador4 .

    >               reduce using rule 106 (exp -> termino checaroperador4 .)
    <               reduce using rule 106 (exp -> termino checaroperador4 .)
    MENORIGUAL      reduce using rule 106 (exp -> termino checaroperador4 .)
    MAYORIGUAL      reduce using rule 106 (exp -> termino checaroperador4 .)
    IGUALIGUAL      reduce using rule 106 (exp -> termino checaroperador4 .)
    DIFERENTE       reduce using rule 106 (exp -> termino checaroperador4 .)
    |               reduce using rule 106 (exp -> termino checaroperador4 .)
    COAND           reduce using rule 106 (exp -> termino checaroperador4 .)
    )               reduce using rule 106 (exp -> termino checaroperador4 .)
    ;               reduce using rule 106 (exp -> termino checaroperador4 .)
    ,               reduce using rule 106 (exp -> termino checaroperador4 .)


state 155

    (111) signo -> push_pm . exp
    (106) exp -> . termino checaroperador4
    (115) termino -> . factor checaroperador5
    (122) factor -> . fondoFalso expresion finFondoFalso
    (123) factor -> . varcte
    (107) fondoFalso -> . (
    (129) varcte -> . recibe_ID
    (130) varcte -> . recibe_CTF
    (131) varcte -> . recibe_CTI
    (132) varcte -> . recibe_TRUE
    (133) varcte -> . recibe_FALSE
    (134) varcte -> . funcs
    (135) recibe_ID -> . ID
    (136) recibe_CTF -> . CTF
    (137) recibe_CTI -> . CTI
    (138) recibe_TRUE -> . TRUE
    (139) recibe_FALSE -> . FALSE
    (50) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB

    (               shift and go to state 127
    ID              shift and go to state 130
    CTF             shift and go to state 120
    CTI             shift and go to state 123
    TRUE            shift and go to state 122
    FALSE           shift and go to state 132

    funcs                          shift and go to state 119
    termino                        shift and go to state 121
    recibe_TRUE                    shift and go to state 124
    varcte                         shift and go to state 125
    recibe_CTF                     shift and go to state 126
    recibe_CTI                     shift and go to state 133
    recibe_ID                      shift and go to state 128
    factor                         shift and go to state 129
    exp                            shift and go to state 188
    fondoFalso                     shift and go to state 135
    recibe_FALSE                   shift and go to state 136

state 156

    (120) push_td -> * .

    (               reduce using rule 120 (push_td -> * .)
    ID              reduce using rule 120 (push_td -> * .)
    CTF             reduce using rule 120 (push_td -> * .)
    CTI             reduce using rule 120 (push_td -> * .)
    TRUE            reduce using rule 120 (push_td -> * .)
    FALSE           reduce using rule 120 (push_td -> * .)


state 157

    (121) push_td -> / .

    (               reduce using rule 121 (push_td -> / .)
    ID              reduce using rule 121 (push_td -> / .)
    CTF             reduce using rule 121 (push_td -> / .)
    CTI             reduce using rule 121 (push_td -> / .)
    TRUE            reduce using rule 121 (push_td -> / .)
    FALSE           reduce using rule 121 (push_td -> / .)


state 158

    (116) checaroperador5 -> masop .

    +               reduce using rule 116 (checaroperador5 -> masop .)
    -               reduce using rule 116 (checaroperador5 -> masop .)
    >               reduce using rule 116 (checaroperador5 -> masop .)
    <               reduce using rule 116 (checaroperador5 -> masop .)
    MENORIGUAL      reduce using rule 116 (checaroperador5 -> masop .)
    MAYORIGUAL      reduce using rule 116 (checaroperador5 -> masop .)
    IGUALIGUAL      reduce using rule 116 (checaroperador5 -> masop .)
    DIFERENTE       reduce using rule 116 (checaroperador5 -> masop .)
    |               reduce using rule 116 (checaroperador5 -> masop .)
    COAND           reduce using rule 116 (checaroperador5 -> masop .)
    )               reduce using rule 116 (checaroperador5 -> masop .)
    ;               reduce using rule 116 (checaroperador5 -> masop .)
    ,               reduce using rule 116 (checaroperador5 -> masop .)


state 159

    (115) termino -> factor checaroperador5 .

    +               reduce using rule 115 (termino -> factor checaroperador5 .)
    -               reduce using rule 115 (termino -> factor checaroperador5 .)
    >               reduce using rule 115 (termino -> factor checaroperador5 .)
    <               reduce using rule 115 (termino -> factor checaroperador5 .)
    MENORIGUAL      reduce using rule 115 (termino -> factor checaroperador5 .)
    MAYORIGUAL      reduce using rule 115 (termino -> factor checaroperador5 .)
    IGUALIGUAL      reduce using rule 115 (termino -> factor checaroperador5 .)
    DIFERENTE       reduce using rule 115 (termino -> factor checaroperador5 .)
    |               reduce using rule 115 (termino -> factor checaroperador5 .)
    COAND           reduce using rule 115 (termino -> factor checaroperador5 .)
    )               reduce using rule 115 (termino -> factor checaroperador5 .)
    ,               reduce using rule 115 (termino -> factor checaroperador5 .)
    ;               reduce using rule 115 (termino -> factor checaroperador5 .)


state 160

    (118) masop -> push_td . termino
    (115) termino -> . factor checaroperador5
    (122) factor -> . fondoFalso expresion finFondoFalso
    (123) factor -> . varcte
    (107) fondoFalso -> . (
    (129) varcte -> . recibe_ID
    (130) varcte -> . recibe_CTF
    (131) varcte -> . recibe_CTI
    (132) varcte -> . recibe_TRUE
    (133) varcte -> . recibe_FALSE
    (134) varcte -> . funcs
    (135) recibe_ID -> . ID
    (136) recibe_CTF -> . CTF
    (137) recibe_CTI -> . CTI
    (138) recibe_TRUE -> . TRUE
    (139) recibe_FALSE -> . FALSE
    (50) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB

    (               shift and go to state 127
    ID              shift and go to state 130
    CTF             shift and go to state 120
    CTI             shift and go to state 123
    TRUE            shift and go to state 122
    FALSE           shift and go to state 132

    funcs                          shift and go to state 119
    recibe_TRUE                    shift and go to state 124
    varcte                         shift and go to state 125
    recibe_CTF                     shift and go to state 126
    recibe_CTI                     shift and go to state 133
    recibe_ID                      shift and go to state 128
    termino                        shift and go to state 189
    factor                         shift and go to state 129
    recibe_FALSE                   shift and go to state 136
    fondoFalso                     shift and go to state 135

state 161

    (83) condicion -> IF ( expresion ) . checarIF bloqueCond finPilaSaltos
    (84) condicion -> IF ( expresion ) . checarIF bloqueCond checarElse bloqueCond finPilaSaltos
    (90) checarIF -> .

    {               reduce using rule 90 (checarIF -> .)

    checarIF                       shift and go to state 190

state 162

    (102) push_logica -> COAND .

    (               reduce using rule 102 (push_logica -> COAND .)
    ID              reduce using rule 102 (push_logica -> COAND .)
    CTF             reduce using rule 102 (push_logica -> COAND .)
    CTI             reduce using rule 102 (push_logica -> COAND .)
    TRUE            reduce using rule 102 (push_logica -> COAND .)
    FALSE           reduce using rule 102 (push_logica -> COAND .)


state 163

    (101) push_logica -> | .

    (               reduce using rule 101 (push_logica -> | .)
    ID              reduce using rule 101 (push_logica -> | .)
    CTF             reduce using rule 101 (push_logica -> | .)
    CTI             reduce using rule 101 (push_logica -> | .)
    TRUE            reduce using rule 101 (push_logica -> | .)
    FALSE           reduce using rule 101 (push_logica -> | .)


state 164

    (100) push_logica -> DIFERENTE .

    (               reduce using rule 100 (push_logica -> DIFERENTE .)
    ID              reduce using rule 100 (push_logica -> DIFERENTE .)
    CTF             reduce using rule 100 (push_logica -> DIFERENTE .)
    CTI             reduce using rule 100 (push_logica -> DIFERENTE .)
    TRUE            reduce using rule 100 (push_logica -> DIFERENTE .)
    FALSE           reduce using rule 100 (push_logica -> DIFERENTE .)


state 165

    (99) push_logica -> IGUALIGUAL .

    (               reduce using rule 99 (push_logica -> IGUALIGUAL .)
    ID              reduce using rule 99 (push_logica -> IGUALIGUAL .)
    CTF             reduce using rule 99 (push_logica -> IGUALIGUAL .)
    CTI             reduce using rule 99 (push_logica -> IGUALIGUAL .)
    TRUE            reduce using rule 99 (push_logica -> IGUALIGUAL .)
    FALSE           reduce using rule 99 (push_logica -> IGUALIGUAL .)


state 166

    (93) expresion -> exp operacionLogica . checaoperador6
    (105) checaoperador6 -> .

    )               reduce using rule 105 (checaoperador6 -> .)
    ;               reduce using rule 105 (checaoperador6 -> .)
    ,               reduce using rule 105 (checaoperador6 -> .)

    checaoperador6                 shift and go to state 191

state 167

    (103) operacionLogica -> push_logica . exp
    (106) exp -> . termino checaroperador4
    (115) termino -> . factor checaroperador5
    (122) factor -> . fondoFalso expresion finFondoFalso
    (123) factor -> . varcte
    (107) fondoFalso -> . (
    (129) varcte -> . recibe_ID
    (130) varcte -> . recibe_CTF
    (131) varcte -> . recibe_CTI
    (132) varcte -> . recibe_TRUE
    (133) varcte -> . recibe_FALSE
    (134) varcte -> . funcs
    (135) recibe_ID -> . ID
    (136) recibe_CTF -> . CTF
    (137) recibe_CTI -> . CTI
    (138) recibe_TRUE -> . TRUE
    (139) recibe_FALSE -> . FALSE
    (50) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB

    (               shift and go to state 127
    ID              shift and go to state 130
    CTF             shift and go to state 120
    CTI             shift and go to state 123
    TRUE            shift and go to state 122
    FALSE           shift and go to state 132

    funcs                          shift and go to state 119
    termino                        shift and go to state 121
    recibe_TRUE                    shift and go to state 124
    varcte                         shift and go to state 125
    recibe_CTF                     shift and go to state 126
    recibe_CTI                     shift and go to state 133
    recibe_ID                      shift and go to state 128
    factor                         shift and go to state 129
    exp                            shift and go to state 192
    fondoFalso                     shift and go to state 135
    recibe_FALSE                   shift and go to state 136

state 168

    (98) push_logica -> MAYORIGUAL .

    (               reduce using rule 98 (push_logica -> MAYORIGUAL .)
    ID              reduce using rule 98 (push_logica -> MAYORIGUAL .)
    CTF             reduce using rule 98 (push_logica -> MAYORIGUAL .)
    CTI             reduce using rule 98 (push_logica -> MAYORIGUAL .)
    TRUE            reduce using rule 98 (push_logica -> MAYORIGUAL .)
    FALSE           reduce using rule 98 (push_logica -> MAYORIGUAL .)


state 169

    (97) push_logica -> MENORIGUAL .

    (               reduce using rule 97 (push_logica -> MENORIGUAL .)
    ID              reduce using rule 97 (push_logica -> MENORIGUAL .)
    CTF             reduce using rule 97 (push_logica -> MENORIGUAL .)
    CTI             reduce using rule 97 (push_logica -> MENORIGUAL .)
    TRUE            reduce using rule 97 (push_logica -> MENORIGUAL .)
    FALSE           reduce using rule 97 (push_logica -> MENORIGUAL .)


state 170

    (96) push_logica -> < .

    (               reduce using rule 96 (push_logica -> < .)
    ID              reduce using rule 96 (push_logica -> < .)
    CTF             reduce using rule 96 (push_logica -> < .)
    CTI             reduce using rule 96 (push_logica -> < .)
    TRUE            reduce using rule 96 (push_logica -> < .)
    FALSE           reduce using rule 96 (push_logica -> < .)


state 171

    (95) push_logica -> > .

    (               reduce using rule 95 (push_logica -> > .)
    ID              reduce using rule 95 (push_logica -> > .)
    CTF             reduce using rule 95 (push_logica -> > .)
    CTI             reduce using rule 95 (push_logica -> > .)
    TRUE            reduce using rule 95 (push_logica -> > .)
    FALSE           reduce using rule 95 (push_logica -> > .)


state 172

    (122) factor -> fondoFalso expresion . finFondoFalso
    (108) finFondoFalso -> . )

    )               shift and go to state 193

    finFondoFalso                  shift and go to state 194

state 173

    (71) lectura -> LEER guardarToken ID guardarIDPila . checarLectura opcionesLectura ;
    (70) checarLectura -> .

    [               reduce using rule 70 (checarLectura -> .)
    ;               reduce using rule 70 (checarLectura -> .)

    checarLectura                  shift and go to state 195

state 174

    (77) escritura -> DIBUJAR guardarToken ( guardarParametros . ) ;

    )               shift and go to state 196


state 175

    (75) guardarParametros -> ID . guardarIDPila pos color checarDibujar
    (62) guardarIDPila -> .

    (               reduce using rule 62 (guardarIDPila -> .)

    guardarIDPila                  shift and go to state 197

state 176

    (38) regresa -> RETURN . ID generarCuadRetorno

    ID              shift and go to state 198


state 177

    (32) bloquefunc -> { vars guardarCuadruplo estatuto . regresa } liberarVar
    (38) regresa -> . RETURN ID generarCuadRetorno

    RETURN          shift and go to state 176

    regresa                        shift and go to state 199

state 178

    (33) bloquefunc -> { vars guardarCuadruplo regresa . } liberarVar

    }               shift and go to state 200


state 179

    (34) bloquefunc -> { guardarCuadruplo escritura regresa . } liberarVar

    }               shift and go to state 201


state 180

    (125) whiles -> WHILE checarWhile ( expresion ) . checarContenido bloqueCond finPilaSaltosWhile
    (127) checarContenido -> .

    {               reduce using rule 127 (checarContenido -> .)

    checarContenido                shift and go to state 202

state 181

    (150) opcionMue -> direccion ID guardarIDPila . recibe_CTI checarMover ;
    (137) recibe_CTI -> . CTI

    CTI             shift and go to state 123

    recibe_CTI                     shift and go to state 203

state 182

    (61) asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; . checarOperadorIgual
    (63) checarOperadorIgual -> .

    ID              reduce using rule 63 (checarOperadorIgual -> .)
    DIBUJAR         reduce using rule 63 (checarOperadorIgual -> .)
    IF              reduce using rule 63 (checarOperadorIgual -> .)
    LEER            reduce using rule 63 (checarOperadorIgual -> .)
    WHILE           reduce using rule 63 (checarOperadorIgual -> .)
    MUEVE           reduce using rule 63 (checarOperadorIgual -> .)
    }               reduce using rule 63 (checarOperadorIgual -> .)
    RETURN          reduce using rule 63 (checarOperadorIgual -> .)

    checarOperadorIgual            shift and go to state 204

state 183

    (67) valorAsig -> = expresion .

    ;               reduce using rule 67 (valorAsig -> = expresion .)


state 184

    (64) opcionAsignacion -> [ CTI ] .
    (65) opcionAsignacion -> [ CTI ] . [ CTI ]

    =               reduce using rule 64 (opcionAsignacion -> [ CTI ] .)
    ;               reduce using rule 64 (opcionAsignacion -> [ CTI ] .)
    [               shift and go to state 205


state 185

    (54) auxExp -> listaExp . llegaComa
    (55) auxExp -> listaExp .
    (56) llegaComa -> . ,

    )               reduce using rule 55 (auxExp -> listaExp .)
    ,               shift and go to state 207

    llegaComa                      shift and go to state 206

state 186

    (50) funcs -> ID guardarIDFunc verProc generarERA auxExp . checaNumParam generaGOSUB
    (48) checaNumParam -> . finFondoFalso
    (108) finFondoFalso -> . )

    )               shift and go to state 193

    checaNumParam                  shift and go to state 208
    finFondoFalso                  shift and go to state 209

state 187

    (58) listaExp -> expresion . verificarTiposFunc masExps
    (57) verificarTiposFunc -> .

    ,               reduce using rule 57 (verificarTiposFunc -> .)
    )               reduce using rule 57 (verificarTiposFunc -> .)

    verificarTiposFunc             shift and go to state 210

state 188

    (111) signo -> push_pm exp .

    >               reduce using rule 111 (signo -> push_pm exp .)
    <               reduce using rule 111 (signo -> push_pm exp .)
    MENORIGUAL      reduce using rule 111 (signo -> push_pm exp .)
    MAYORIGUAL      reduce using rule 111 (signo -> push_pm exp .)
    IGUALIGUAL      reduce using rule 111 (signo -> push_pm exp .)
    DIFERENTE       reduce using rule 111 (signo -> push_pm exp .)
    |               reduce using rule 111 (signo -> push_pm exp .)
    COAND           reduce using rule 111 (signo -> push_pm exp .)
    )               reduce using rule 111 (signo -> push_pm exp .)
    ;               reduce using rule 111 (signo -> push_pm exp .)
    ,               reduce using rule 111 (signo -> push_pm exp .)


state 189

    (118) masop -> push_td termino .

    +               reduce using rule 118 (masop -> push_td termino .)
    -               reduce using rule 118 (masop -> push_td termino .)
    >               reduce using rule 118 (masop -> push_td termino .)
    <               reduce using rule 118 (masop -> push_td termino .)
    MENORIGUAL      reduce using rule 118 (masop -> push_td termino .)
    MAYORIGUAL      reduce using rule 118 (masop -> push_td termino .)
    IGUALIGUAL      reduce using rule 118 (masop -> push_td termino .)
    DIFERENTE       reduce using rule 118 (masop -> push_td termino .)
    |               reduce using rule 118 (masop -> push_td termino .)
    COAND           reduce using rule 118 (masop -> push_td termino .)
    )               reduce using rule 118 (masop -> push_td termino .)
    ;               reduce using rule 118 (masop -> push_td termino .)
    ,               reduce using rule 118 (masop -> push_td termino .)


state 190

    (83) condicion -> IF ( expresion ) checarIF . bloqueCond finPilaSaltos
    (84) condicion -> IF ( expresion ) checarIF . bloqueCond checarElse bloqueCond finPilaSaltos
    (85) bloqueCond -> . { estatuto regresaCond }
    (86) bloqueCond -> . { regresaCond }
    (87) bloqueCond -> . { }

    {               shift and go to state 211

    bloqueCond                     shift and go to state 212

state 191

    (93) expresion -> exp operacionLogica checaoperador6 .

    )               reduce using rule 93 (expresion -> exp operacionLogica checaoperador6 .)
    ,               reduce using rule 93 (expresion -> exp operacionLogica checaoperador6 .)
    ;               reduce using rule 93 (expresion -> exp operacionLogica checaoperador6 .)


state 192

    (103) operacionLogica -> push_logica exp .

    )               reduce using rule 103 (operacionLogica -> push_logica exp .)
    ;               reduce using rule 103 (operacionLogica -> push_logica exp .)
    ,               reduce using rule 103 (operacionLogica -> push_logica exp .)


state 193

    (108) finFondoFalso -> ) .

    ID              reduce using rule 108 (finFondoFalso -> ) .)
    DIBUJAR         reduce using rule 108 (finFondoFalso -> ) .)
    IF              reduce using rule 108 (finFondoFalso -> ) .)
    LEER            reduce using rule 108 (finFondoFalso -> ) .)
    WHILE           reduce using rule 108 (finFondoFalso -> ) .)
    MUEVE           reduce using rule 108 (finFondoFalso -> ) .)
    }               reduce using rule 108 (finFondoFalso -> ) .)
    RETURN          reduce using rule 108 (finFondoFalso -> ) .)
    *               reduce using rule 108 (finFondoFalso -> ) .)
    /               reduce using rule 108 (finFondoFalso -> ) .)
    +               reduce using rule 108 (finFondoFalso -> ) .)
    -               reduce using rule 108 (finFondoFalso -> ) .)
    >               reduce using rule 108 (finFondoFalso -> ) .)
    <               reduce using rule 108 (finFondoFalso -> ) .)
    MENORIGUAL      reduce using rule 108 (finFondoFalso -> ) .)
    MAYORIGUAL      reduce using rule 108 (finFondoFalso -> ) .)
    IGUALIGUAL      reduce using rule 108 (finFondoFalso -> ) .)
    DIFERENTE       reduce using rule 108 (finFondoFalso -> ) .)
    |               reduce using rule 108 (finFondoFalso -> ) .)
    COAND           reduce using rule 108 (finFondoFalso -> ) .)
    )               reduce using rule 108 (finFondoFalso -> ) .)
    ;               reduce using rule 108 (finFondoFalso -> ) .)
    ,               reduce using rule 108 (finFondoFalso -> ) .)


state 194

    (122) factor -> fondoFalso expresion finFondoFalso .

    *               reduce using rule 122 (factor -> fondoFalso expresion finFondoFalso .)
    /               reduce using rule 122 (factor -> fondoFalso expresion finFondoFalso .)
    +               reduce using rule 122 (factor -> fondoFalso expresion finFondoFalso .)
    -               reduce using rule 122 (factor -> fondoFalso expresion finFondoFalso .)
    >               reduce using rule 122 (factor -> fondoFalso expresion finFondoFalso .)
    <               reduce using rule 122 (factor -> fondoFalso expresion finFondoFalso .)
    MENORIGUAL      reduce using rule 122 (factor -> fondoFalso expresion finFondoFalso .)
    MAYORIGUAL      reduce using rule 122 (factor -> fondoFalso expresion finFondoFalso .)
    IGUALIGUAL      reduce using rule 122 (factor -> fondoFalso expresion finFondoFalso .)
    DIFERENTE       reduce using rule 122 (factor -> fondoFalso expresion finFondoFalso .)
    |               reduce using rule 122 (factor -> fondoFalso expresion finFondoFalso .)
    COAND           reduce using rule 122 (factor -> fondoFalso expresion finFondoFalso .)
    )               reduce using rule 122 (factor -> fondoFalso expresion finFondoFalso .)
    ;               reduce using rule 122 (factor -> fondoFalso expresion finFondoFalso .)
    ,               reduce using rule 122 (factor -> fondoFalso expresion finFondoFalso .)


state 195

    (71) lectura -> LEER guardarToken ID guardarIDPila checarLectura . opcionesLectura ;
    (72) opcionesLectura -> . [ CTI ]
    (73) opcionesLectura -> . [ CTI ] [ CTI ]
    (74) opcionesLectura -> . empty
    (156) empty -> .

    [               shift and go to state 213
    ;               reduce using rule 156 (empty -> .)

    empty                          shift and go to state 215
    opcionesLectura                shift and go to state 214

state 196

    (77) escritura -> DIBUJAR guardarToken ( guardarParametros ) . ;

    ;               shift and go to state 216


state 197

    (75) guardarParametros -> ID guardarIDPila . pos color checarDibujar
    (124) pos -> . ( varcte , varcte )

    (               shift and go to state 217

    pos                            shift and go to state 218

state 198

    (38) regresa -> RETURN ID . generarCuadRetorno
    (39) generarCuadRetorno -> .

    }               reduce using rule 39 (generarCuadRetorno -> .)

    generarCuadRetorno             shift and go to state 219

state 199

    (32) bloquefunc -> { vars guardarCuadruplo estatuto regresa . } liberarVar

    }               shift and go to state 220


state 200

    (33) bloquefunc -> { vars guardarCuadruplo regresa } . liberarVar
    (36) liberarVar -> .

    FUNC            reduce using rule 36 (liberarVar -> .)
    INICIO          reduce using rule 36 (liberarVar -> .)

    liberarVar                     shift and go to state 221

state 201

    (34) bloquefunc -> { guardarCuadruplo escritura regresa } . liberarVar
    (36) liberarVar -> .

    FUNC            reduce using rule 36 (liberarVar -> .)
    INICIO          reduce using rule 36 (liberarVar -> .)

    liberarVar                     shift and go to state 222

state 202

    (125) whiles -> WHILE checarWhile ( expresion ) checarContenido . bloqueCond finPilaSaltosWhile
    (85) bloqueCond -> . { estatuto regresaCond }
    (86) bloqueCond -> . { regresaCond }
    (87) bloqueCond -> . { }

    {               shift and go to state 211

    bloqueCond                     shift and go to state 223

state 203

    (150) opcionMue -> direccion ID guardarIDPila recibe_CTI . checarMover ;
    (155) checarMover -> .

    ;               reduce using rule 155 (checarMover -> .)

    checarMover                    shift and go to state 224

state 204

    (61) asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .

    ID              reduce using rule 61 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    DIBUJAR         reduce using rule 61 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    IF              reduce using rule 61 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    LEER            reduce using rule 61 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    WHILE           reduce using rule 61 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    MUEVE           reduce using rule 61 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    }               reduce using rule 61 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    RETURN          reduce using rule 61 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)


state 205

    (65) opcionAsignacion -> [ CTI ] [ . CTI ]

    CTI             shift and go to state 225


state 206

    (54) auxExp -> listaExp llegaComa .

    )               reduce using rule 54 (auxExp -> listaExp llegaComa .)


state 207

    (56) llegaComa -> , .

    )               reduce using rule 56 (llegaComa -> , .)
    (               reduce using rule 56 (llegaComa -> , .)
    ID              reduce using rule 56 (llegaComa -> , .)
    CTF             reduce using rule 56 (llegaComa -> , .)
    CTI             reduce using rule 56 (llegaComa -> , .)
    TRUE            reduce using rule 56 (llegaComa -> , .)
    FALSE           reduce using rule 56 (llegaComa -> , .)


state 208

    (50) funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam . generaGOSUB
    (49) generaGOSUB -> .

    ID              reduce using rule 49 (generaGOSUB -> .)
    DIBUJAR         reduce using rule 49 (generaGOSUB -> .)
    IF              reduce using rule 49 (generaGOSUB -> .)
    LEER            reduce using rule 49 (generaGOSUB -> .)
    WHILE           reduce using rule 49 (generaGOSUB -> .)
    MUEVE           reduce using rule 49 (generaGOSUB -> .)
    }               reduce using rule 49 (generaGOSUB -> .)
    RETURN          reduce using rule 49 (generaGOSUB -> .)
    *               reduce using rule 49 (generaGOSUB -> .)
    /               reduce using rule 49 (generaGOSUB -> .)
    +               reduce using rule 49 (generaGOSUB -> .)
    -               reduce using rule 49 (generaGOSUB -> .)
    >               reduce using rule 49 (generaGOSUB -> .)
    <               reduce using rule 49 (generaGOSUB -> .)
    MENORIGUAL      reduce using rule 49 (generaGOSUB -> .)
    MAYORIGUAL      reduce using rule 49 (generaGOSUB -> .)
    IGUALIGUAL      reduce using rule 49 (generaGOSUB -> .)
    DIFERENTE       reduce using rule 49 (generaGOSUB -> .)
    |               reduce using rule 49 (generaGOSUB -> .)
    COAND           reduce using rule 49 (generaGOSUB -> .)
    )               reduce using rule 49 (generaGOSUB -> .)
    ;               reduce using rule 49 (generaGOSUB -> .)
    ,               reduce using rule 49 (generaGOSUB -> .)

    generaGOSUB                    shift and go to state 226

state 209

    (48) checaNumParam -> finFondoFalso .

    ID              reduce using rule 48 (checaNumParam -> finFondoFalso .)
    DIBUJAR         reduce using rule 48 (checaNumParam -> finFondoFalso .)
    IF              reduce using rule 48 (checaNumParam -> finFondoFalso .)
    LEER            reduce using rule 48 (checaNumParam -> finFondoFalso .)
    WHILE           reduce using rule 48 (checaNumParam -> finFondoFalso .)
    MUEVE           reduce using rule 48 (checaNumParam -> finFondoFalso .)
    }               reduce using rule 48 (checaNumParam -> finFondoFalso .)
    RETURN          reduce using rule 48 (checaNumParam -> finFondoFalso .)
    *               reduce using rule 48 (checaNumParam -> finFondoFalso .)
    /               reduce using rule 48 (checaNumParam -> finFondoFalso .)
    +               reduce using rule 48 (checaNumParam -> finFondoFalso .)
    -               reduce using rule 48 (checaNumParam -> finFondoFalso .)
    >               reduce using rule 48 (checaNumParam -> finFondoFalso .)
    <               reduce using rule 48 (checaNumParam -> finFondoFalso .)
    MENORIGUAL      reduce using rule 48 (checaNumParam -> finFondoFalso .)
    MAYORIGUAL      reduce using rule 48 (checaNumParam -> finFondoFalso .)
    IGUALIGUAL      reduce using rule 48 (checaNumParam -> finFondoFalso .)
    DIFERENTE       reduce using rule 48 (checaNumParam -> finFondoFalso .)
    |               reduce using rule 48 (checaNumParam -> finFondoFalso .)
    COAND           reduce using rule 48 (checaNumParam -> finFondoFalso .)
    )               reduce using rule 48 (checaNumParam -> finFondoFalso .)
    ;               reduce using rule 48 (checaNumParam -> finFondoFalso .)
    ,               reduce using rule 48 (checaNumParam -> finFondoFalso .)


state 210

    (58) listaExp -> expresion verificarTiposFunc . masExps
    (59) masExps -> . llegaComa listaExp
    (60) masExps -> .
    (56) llegaComa -> . ,

  ! shift/reduce conflict for , resolved as shift
    )               reduce using rule 60 (masExps -> .)
    ,               shift and go to state 207

  ! ,               [ reduce using rule 60 (masExps -> .) ]

    llegaComa                      shift and go to state 227
    masExps                        shift and go to state 228

state 211

    (85) bloqueCond -> { . estatuto regresaCond }
    (86) bloqueCond -> { . regresaCond }
    (87) bloqueCond -> { . }
    (40) estatuto -> . asignacion estatutoAux
    (41) estatuto -> . escritura estatutoAux
    (42) estatuto -> . condicion estatutoAux
    (43) estatuto -> . lectura estatutoAux
    (44) estatuto -> . whiles estatutoAux
    (45) estatuto -> . funcs estatutoAux
    (88) regresaCond -> . RETURN ID generarCuadRetorno
    (89) regresaCond -> . empty
    (61) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (77) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (78) escritura -> . mueve
    (83) condicion -> . IF ( expresion ) checarIF bloqueCond finPilaSaltos
    (84) condicion -> . IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos
    (71) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (125) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (50) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB
    (156) empty -> .
    (149) mueve -> . MUEVE guardarToken opcionMue

  ! shift/reduce conflict for } resolved as shift
    }               shift and go to state 233
    RETURN          shift and go to state 229
    ID              shift and go to state 72
    DIBUJAR         shift and go to state 76
    IF              shift and go to state 73
    LEER            shift and go to state 74
    WHILE           shift and go to state 65
    MUEVE           shift and go to state 66

  ! }               [ reduce using rule 156 (empty -> .) ]

    funcs                          shift and go to state 64
    estatuto                       shift and go to state 230
    mueve                          shift and go to state 68
    condicion                      shift and go to state 69
    lectura                        shift and go to state 70
    empty                          shift and go to state 231
    whiles                         shift and go to state 71
    asignacion                     shift and go to state 75
    regresaCond                    shift and go to state 232
    escritura                      shift and go to state 78

state 212

    (83) condicion -> IF ( expresion ) checarIF bloqueCond . finPilaSaltos
    (84) condicion -> IF ( expresion ) checarIF bloqueCond . checarElse bloqueCond finPilaSaltos
    (92) finPilaSaltos -> .
    (91) checarElse -> . ELSE

    ID              reduce using rule 92 (finPilaSaltos -> .)
    DIBUJAR         reduce using rule 92 (finPilaSaltos -> .)
    IF              reduce using rule 92 (finPilaSaltos -> .)
    LEER            reduce using rule 92 (finPilaSaltos -> .)
    WHILE           reduce using rule 92 (finPilaSaltos -> .)
    MUEVE           reduce using rule 92 (finPilaSaltos -> .)
    }               reduce using rule 92 (finPilaSaltos -> .)
    RETURN          reduce using rule 92 (finPilaSaltos -> .)
    ELSE            shift and go to state 235

    finPilaSaltos                  shift and go to state 236
    checarElse                     shift and go to state 234

state 213

    (72) opcionesLectura -> [ . CTI ]
    (73) opcionesLectura -> [ . CTI ] [ CTI ]

    CTI             shift and go to state 237


state 214

    (71) lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura . ;

    ;               shift and go to state 238


state 215

    (74) opcionesLectura -> empty .

    ;               reduce using rule 74 (opcionesLectura -> empty .)


state 216

    (77) escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .

    ID              reduce using rule 77 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    DIBUJAR         reduce using rule 77 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    IF              reduce using rule 77 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    LEER            reduce using rule 77 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    WHILE           reduce using rule 77 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    MUEVE           reduce using rule 77 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    }               reduce using rule 77 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    RETURN          reduce using rule 77 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)


state 217

    (124) pos -> ( . varcte , varcte )
    (129) varcte -> . recibe_ID
    (130) varcte -> . recibe_CTF
    (131) varcte -> . recibe_CTI
    (132) varcte -> . recibe_TRUE
    (133) varcte -> . recibe_FALSE
    (134) varcte -> . funcs
    (135) recibe_ID -> . ID
    (136) recibe_CTF -> . CTF
    (137) recibe_CTI -> . CTI
    (138) recibe_TRUE -> . TRUE
    (139) recibe_FALSE -> . FALSE
    (50) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB

    ID              shift and go to state 130
    CTF             shift and go to state 120
    CTI             shift and go to state 123
    TRUE            shift and go to state 122
    FALSE           shift and go to state 132

    funcs                          shift and go to state 119
    recibe_TRUE                    shift and go to state 124
    varcte                         shift and go to state 239
    recibe_CTF                     shift and go to state 126
    recibe_CTI                     shift and go to state 133
    recibe_ID                      shift and go to state 128
    recibe_FALSE                   shift and go to state 136

state 218

    (75) guardarParametros -> ID guardarIDPila pos . color checarDibujar
    (79) color -> . AMARILLO
    (80) color -> . VERDE
    (81) color -> . ROJO
    (82) color -> . AZUL

    AMARILLO        shift and go to state 241
    VERDE           shift and go to state 244
    ROJO            shift and go to state 242
    AZUL            shift and go to state 243

    color                          shift and go to state 240

state 219

    (38) regresa -> RETURN ID generarCuadRetorno .

    }               reduce using rule 38 (regresa -> RETURN ID generarCuadRetorno .)


state 220

    (32) bloquefunc -> { vars guardarCuadruplo estatuto regresa } . liberarVar
    (36) liberarVar -> .

    FUNC            reduce using rule 36 (liberarVar -> .)
    INICIO          reduce using rule 36 (liberarVar -> .)

    liberarVar                     shift and go to state 245

state 221

    (33) bloquefunc -> { vars guardarCuadruplo regresa } liberarVar .

    FUNC            reduce using rule 33 (bloquefunc -> { vars guardarCuadruplo regresa } liberarVar .)
    INICIO          reduce using rule 33 (bloquefunc -> { vars guardarCuadruplo regresa } liberarVar .)


state 222

    (34) bloquefunc -> { guardarCuadruplo escritura regresa } liberarVar .

    FUNC            reduce using rule 34 (bloquefunc -> { guardarCuadruplo escritura regresa } liberarVar .)
    INICIO          reduce using rule 34 (bloquefunc -> { guardarCuadruplo escritura regresa } liberarVar .)


state 223

    (125) whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond . finPilaSaltosWhile
    (128) finPilaSaltosWhile -> .

    ID              reduce using rule 128 (finPilaSaltosWhile -> .)
    DIBUJAR         reduce using rule 128 (finPilaSaltosWhile -> .)
    IF              reduce using rule 128 (finPilaSaltosWhile -> .)
    LEER            reduce using rule 128 (finPilaSaltosWhile -> .)
    WHILE           reduce using rule 128 (finPilaSaltosWhile -> .)
    MUEVE           reduce using rule 128 (finPilaSaltosWhile -> .)
    }               reduce using rule 128 (finPilaSaltosWhile -> .)
    RETURN          reduce using rule 128 (finPilaSaltosWhile -> .)

    finPilaSaltosWhile             shift and go to state 246

state 224

    (150) opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover . ;

    ;               shift and go to state 247


state 225

    (65) opcionAsignacion -> [ CTI ] [ CTI . ]

    ]               shift and go to state 248


state 226

    (50) funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .

    *               reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    /               reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    +               reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    -               reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    >               reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    <               reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    MENORIGUAL      reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    MAYORIGUAL      reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    IGUALIGUAL      reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    DIFERENTE       reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    |               reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    COAND           reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    ;               reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    ID              reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    DIBUJAR         reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    IF              reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    LEER            reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    WHILE           reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    MUEVE           reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    }               reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    RETURN          reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    )               reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)
    ,               reduce using rule 50 (funcs -> ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB .)


state 227

    (59) masExps -> llegaComa . listaExp
    (58) listaExp -> . expresion verificarTiposFunc masExps
    (93) expresion -> . exp operacionLogica checaoperador6
    (94) expresion -> . exp
    (106) exp -> . termino checaroperador4
    (115) termino -> . factor checaroperador5
    (122) factor -> . fondoFalso expresion finFondoFalso
    (123) factor -> . varcte
    (107) fondoFalso -> . (
    (129) varcte -> . recibe_ID
    (130) varcte -> . recibe_CTF
    (131) varcte -> . recibe_CTI
    (132) varcte -> . recibe_TRUE
    (133) varcte -> . recibe_FALSE
    (134) varcte -> . funcs
    (135) recibe_ID -> . ID
    (136) recibe_CTF -> . CTF
    (137) recibe_CTI -> . CTI
    (138) recibe_TRUE -> . TRUE
    (139) recibe_FALSE -> . FALSE
    (50) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB

    (               shift and go to state 127
    ID              shift and go to state 130
    CTF             shift and go to state 120
    CTI             shift and go to state 123
    TRUE            shift and go to state 122
    FALSE           shift and go to state 132

    funcs                          shift and go to state 119
    listaExp                       shift and go to state 249
    termino                        shift and go to state 121
    recibe_TRUE                    shift and go to state 124
    varcte                         shift and go to state 125
    recibe_CTF                     shift and go to state 126
    recibe_CTI                     shift and go to state 133
    recibe_ID                      shift and go to state 128
    factor                         shift and go to state 129
    expresion                      shift and go to state 187
    exp                            shift and go to state 134
    fondoFalso                     shift and go to state 135
    recibe_FALSE                   shift and go to state 136

state 228

    (58) listaExp -> expresion verificarTiposFunc masExps .

    ,               reduce using rule 58 (listaExp -> expresion verificarTiposFunc masExps .)
    )               reduce using rule 58 (listaExp -> expresion verificarTiposFunc masExps .)


state 229

    (88) regresaCond -> RETURN . ID generarCuadRetorno

    ID              shift and go to state 250


state 230

    (85) bloqueCond -> { estatuto . regresaCond }
    (88) regresaCond -> . RETURN ID generarCuadRetorno
    (89) regresaCond -> . empty
    (156) empty -> .

    RETURN          shift and go to state 229
    }               reduce using rule 156 (empty -> .)

    regresaCond                    shift and go to state 251
    empty                          shift and go to state 231

state 231

    (89) regresaCond -> empty .

    }               reduce using rule 89 (regresaCond -> empty .)


state 232

    (86) bloqueCond -> { regresaCond . }

    }               shift and go to state 252


state 233

    (87) bloqueCond -> { } .

    ID              reduce using rule 87 (bloqueCond -> { } .)
    DIBUJAR         reduce using rule 87 (bloqueCond -> { } .)
    IF              reduce using rule 87 (bloqueCond -> { } .)
    LEER            reduce using rule 87 (bloqueCond -> { } .)
    WHILE           reduce using rule 87 (bloqueCond -> { } .)
    MUEVE           reduce using rule 87 (bloqueCond -> { } .)
    }               reduce using rule 87 (bloqueCond -> { } .)
    RETURN          reduce using rule 87 (bloqueCond -> { } .)
    ELSE            reduce using rule 87 (bloqueCond -> { } .)


state 234

    (84) condicion -> IF ( expresion ) checarIF bloqueCond checarElse . bloqueCond finPilaSaltos
    (85) bloqueCond -> . { estatuto regresaCond }
    (86) bloqueCond -> . { regresaCond }
    (87) bloqueCond -> . { }

    {               shift and go to state 211

    bloqueCond                     shift and go to state 253

state 235

    (91) checarElse -> ELSE .

    {               reduce using rule 91 (checarElse -> ELSE .)


state 236

    (83) condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .

    ID              reduce using rule 83 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)
    DIBUJAR         reduce using rule 83 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)
    IF              reduce using rule 83 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)
    LEER            reduce using rule 83 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)
    WHILE           reduce using rule 83 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)
    MUEVE           reduce using rule 83 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)
    RETURN          reduce using rule 83 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)
    }               reduce using rule 83 (condicion -> IF ( expresion ) checarIF bloqueCond finPilaSaltos .)


state 237

    (72) opcionesLectura -> [ CTI . ]
    (73) opcionesLectura -> [ CTI . ] [ CTI ]

    ]               shift and go to state 254


state 238

    (71) lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .

    ID              reduce using rule 71 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    DIBUJAR         reduce using rule 71 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    IF              reduce using rule 71 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    LEER            reduce using rule 71 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    WHILE           reduce using rule 71 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    MUEVE           reduce using rule 71 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    RETURN          reduce using rule 71 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    }               reduce using rule 71 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)


state 239

    (124) pos -> ( varcte . , varcte )

    ,               shift and go to state 255


state 240

    (75) guardarParametros -> ID guardarIDPila pos color . checarDibujar
    (76) checarDibujar -> .

    )               reduce using rule 76 (checarDibujar -> .)

    checarDibujar                  shift and go to state 256

state 241

    (79) color -> AMARILLO .

    )               reduce using rule 79 (color -> AMARILLO .)


state 242

    (81) color -> ROJO .

    )               reduce using rule 81 (color -> ROJO .)


state 243

    (82) color -> AZUL .

    )               reduce using rule 82 (color -> AZUL .)


state 244

    (80) color -> VERDE .

    )               reduce using rule 80 (color -> VERDE .)


state 245

    (32) bloquefunc -> { vars guardarCuadruplo estatuto regresa } liberarVar .

    FUNC            reduce using rule 32 (bloquefunc -> { vars guardarCuadruplo estatuto regresa } liberarVar .)
    INICIO          reduce using rule 32 (bloquefunc -> { vars guardarCuadruplo estatuto regresa } liberarVar .)


state 246

    (125) whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .

    ID              reduce using rule 125 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    DIBUJAR         reduce using rule 125 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    IF              reduce using rule 125 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    LEER            reduce using rule 125 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    WHILE           reduce using rule 125 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    MUEVE           reduce using rule 125 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    }               reduce using rule 125 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    RETURN          reduce using rule 125 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)


state 247

    (150) opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .

    ID              reduce using rule 150 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    DIBUJAR         reduce using rule 150 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    IF              reduce using rule 150 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    LEER            reduce using rule 150 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    WHILE           reduce using rule 150 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    MUEVE           reduce using rule 150 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    }               reduce using rule 150 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    RETURN          reduce using rule 150 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)


state 248

    (65) opcionAsignacion -> [ CTI ] [ CTI ] .

    =               reduce using rule 65 (opcionAsignacion -> [ CTI ] [ CTI ] .)
    ;               reduce using rule 65 (opcionAsignacion -> [ CTI ] [ CTI ] .)


state 249

    (59) masExps -> llegaComa listaExp .

    ,               reduce using rule 59 (masExps -> llegaComa listaExp .)
    )               reduce using rule 59 (masExps -> llegaComa listaExp .)


state 250

    (88) regresaCond -> RETURN ID . generarCuadRetorno
    (39) generarCuadRetorno -> .

    }               reduce using rule 39 (generarCuadRetorno -> .)

    generarCuadRetorno             shift and go to state 257

state 251

    (85) bloqueCond -> { estatuto regresaCond . }

    }               shift and go to state 258


state 252

    (86) bloqueCond -> { regresaCond } .

    ID              reduce using rule 86 (bloqueCond -> { regresaCond } .)
    DIBUJAR         reduce using rule 86 (bloqueCond -> { regresaCond } .)
    IF              reduce using rule 86 (bloqueCond -> { regresaCond } .)
    LEER            reduce using rule 86 (bloqueCond -> { regresaCond } .)
    WHILE           reduce using rule 86 (bloqueCond -> { regresaCond } .)
    MUEVE           reduce using rule 86 (bloqueCond -> { regresaCond } .)
    }               reduce using rule 86 (bloqueCond -> { regresaCond } .)
    RETURN          reduce using rule 86 (bloqueCond -> { regresaCond } .)
    ELSE            reduce using rule 86 (bloqueCond -> { regresaCond } .)


state 253

    (84) condicion -> IF ( expresion ) checarIF bloqueCond checarElse bloqueCond . finPilaSaltos
    (92) finPilaSaltos -> .

    ID              reduce using rule 92 (finPilaSaltos -> .)
    DIBUJAR         reduce using rule 92 (finPilaSaltos -> .)
    IF              reduce using rule 92 (finPilaSaltos -> .)
    LEER            reduce using rule 92 (finPilaSaltos -> .)
    WHILE           reduce using rule 92 (finPilaSaltos -> .)
    MUEVE           reduce using rule 92 (finPilaSaltos -> .)
    }               reduce using rule 92 (finPilaSaltos -> .)
    RETURN          reduce using rule 92 (finPilaSaltos -> .)

    finPilaSaltos                  shift and go to state 259

state 254

    (72) opcionesLectura -> [ CTI ] .
    (73) opcionesLectura -> [ CTI ] . [ CTI ]

    ;               reduce using rule 72 (opcionesLectura -> [ CTI ] .)
    [               shift and go to state 260


state 255

    (124) pos -> ( varcte , . varcte )
    (129) varcte -> . recibe_ID
    (130) varcte -> . recibe_CTF
    (131) varcte -> . recibe_CTI
    (132) varcte -> . recibe_TRUE
    (133) varcte -> . recibe_FALSE
    (134) varcte -> . funcs
    (135) recibe_ID -> . ID
    (136) recibe_CTF -> . CTF
    (137) recibe_CTI -> . CTI
    (138) recibe_TRUE -> . TRUE
    (139) recibe_FALSE -> . FALSE
    (50) funcs -> . ID guardarIDFunc verProc generarERA auxExp checaNumParam generaGOSUB

    ID              shift and go to state 130
    CTF             shift and go to state 120
    CTI             shift and go to state 123
    TRUE            shift and go to state 122
    FALSE           shift and go to state 132

    funcs                          shift and go to state 119
    recibe_TRUE                    shift and go to state 124
    varcte                         shift and go to state 261
    recibe_CTF                     shift and go to state 126
    recibe_CTI                     shift and go to state 133
    recibe_ID                      shift and go to state 128
    recibe_FALSE                   shift and go to state 136

state 256

    (75) guardarParametros -> ID guardarIDPila pos color checarDibujar .

    )               reduce using rule 75 (guardarParametros -> ID guardarIDPila pos color checarDibujar .)


state 257

    (88) regresaCond -> RETURN ID generarCuadRetorno .

    }               reduce using rule 88 (regresaCond -> RETURN ID generarCuadRetorno .)


state 258

    (85) bloqueCond -> { estatuto regresaCond } .

    ID              reduce using rule 85 (bloqueCond -> { estatuto regresaCond } .)
    DIBUJAR         reduce using rule 85 (bloqueCond -> { estatuto regresaCond } .)
    IF              reduce using rule 85 (bloqueCond -> { estatuto regresaCond } .)
    LEER            reduce using rule 85 (bloqueCond -> { estatuto regresaCond } .)
    WHILE           reduce using rule 85 (bloqueCond -> { estatuto regresaCond } .)
    MUEVE           reduce using rule 85 (bloqueCond -> { estatuto regresaCond } .)
    }               reduce using rule 85 (bloqueCond -> { estatuto regresaCond } .)
    RETURN          reduce using rule 85 (bloqueCond -> { estatuto regresaCond } .)
    ELSE            reduce using rule 85 (bloqueCond -> { estatuto regresaCond } .)


state 259

    (84) condicion -> IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos .

    ID              reduce using rule 84 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos .)
    DIBUJAR         reduce using rule 84 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos .)
    IF              reduce using rule 84 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos .)
    LEER            reduce using rule 84 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos .)
    WHILE           reduce using rule 84 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos .)
    MUEVE           reduce using rule 84 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos .)
    RETURN          reduce using rule 84 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos .)
    }               reduce using rule 84 (condicion -> IF ( expresion ) checarIF bloqueCond checarElse bloqueCond finPilaSaltos .)


state 260

    (73) opcionesLectura -> [ CTI ] [ . CTI ]

    CTI             shift and go to state 262


state 261

    (124) pos -> ( varcte , varcte . )

    )               shift and go to state 263


state 262

    (73) opcionesLectura -> [ CTI ] [ CTI . ]

    ]               shift and go to state 264


state 263

    (124) pos -> ( varcte , varcte ) .

    AMARILLO        reduce using rule 124 (pos -> ( varcte , varcte ) .)
    VERDE           reduce using rule 124 (pos -> ( varcte , varcte ) .)
    ROJO            reduce using rule 124 (pos -> ( varcte , varcte ) .)
    AZUL            reduce using rule 124 (pos -> ( varcte , varcte ) .)


state 264

    (73) opcionesLectura -> [ CTI ] [ CTI ] .

    ;               reduce using rule 73 (opcionesLectura -> [ CTI ] [ CTI ] .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for } in state 36 resolved as shift
WARNING: shift/reduce conflict for , in state 210 resolved as shift
WARNING: shift/reduce conflict for } in state 211 resolved as shift
WARNING: reduce/reduce conflict in state 28 resolved using rule (vars -> empty)
WARNING: rejected rule (masTipos -> empty) in state 28
WARNING: reduce/reduce conflict in state 53 resolved using rule (funcion -> empty)
WARNING: rejected rule (funcion2 -> empty) in state 53
WARNING: reduce/reduce conflict in state 82 resolved using rule (guardarCuadruplo -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 82
WARNING: reduce/reduce conflict in state 121 resolved using rule (checaroperador4 -> <empty>)
WARNING: rejected rule (signo -> <empty>) in state 121
WARNING: reduce/reduce conflict in state 129 resolved using rule (checaroperador5 -> <empty>)
WARNING: rejected rule (masop -> <empty>) in state 129
WARNING: reduce/reduce conflict in state 134 resolved using rule (expresion -> exp)
WARNING: rejected rule (operacionLogica -> <empty>) in state 134
WARNING: Rule (masTipos -> empty) is never reduced
WARNING: Rule (funcion2 -> empty) is never reduced
WARNING: Rule (signo -> <empty>) is never reduced
WARNING: Rule (masop -> <empty>) is never reduced
WARNING: Rule (operacionLogica -> <empty>) is never reduced

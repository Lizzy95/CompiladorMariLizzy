Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> INICIO funcAgregarInicio bloque FIN
Rule 2     programa -> INICIO FIN
Rule 3     programa -> funcion programa
Rule 4     funcAgregarInicio -> <empty>
Rule 5     bloque -> { vars estatuto }
Rule 6     bloque -> { vars }
Rule 7     bloque -> { }
Rule 8     vars -> tipo ID guardarIDs ; masTipos
Rule 9     vars -> tipo ID guardarIDs arreglo ; masTipos
Rule 10    vars -> tipo listaIDS ; masTipos
Rule 11    masTipos -> vars
Rule 12    masTipos -> empty
Rule 13    listaIDS -> ID guardarIDs masIDS
Rule 14    masIDS -> , ID guardarIDs
Rule 15    masIDS -> empty
Rule 16    arreglo -> [ CTI ] matriz
Rule 17    matriz -> [ CTI ]
Rule 18    matriz -> empty
Rule 19    funcion -> FUNC tipo ID funcAgregar ( param ) bloquefunc
Rule 20    funcAgregar -> <empty>
Rule 21    param -> tipo listapaID
Rule 22    listapaID -> ID guardarIDs maspaID maspaTip
Rule 23    guardarIDs -> <empty>
Rule 24    maspaID -> , ID guardarIDs
Rule 25    maspaID -> empty
Rule 26    maspaTip -> vars
Rule 27    maspaTip -> empty
Rule 28    bloquefunc -> { vars estatuto regresa }
Rule 29    bloquefunc -> { vars regresa }
Rule 30    bloquefunc -> { escritura regresa }
Rule 31    bloquefunc -> { }
Rule 32    regresa -> RETURN ID
Rule 33    estatuto -> asignacion estatutoAux
Rule 34    estatuto -> escritura estatutoAux
Rule 35    estatuto -> condicion estatutoAux
Rule 36    estatuto -> lectura estatutoAux
Rule 37    estatuto -> whiles estatutoAux
Rule 38    estatuto -> fors estatutoAux
Rule 39    estatutoAux -> estatuto
Rule 40    estatutoAux -> empty
Rule 41    asignacion -> ID opcionAsignacion valorAsig ;
Rule 42    asignacion -> ID ;
Rule 43    opcionAsignacion -> [ CTI ]
Rule 44    opcionAsignacion -> [ CTI ] [ CTI ]
Rule 45    opcionAsignacion -> empty
Rule 46    valorAsig -> = exp
Rule 47    valorAsig -> empty
Rule 48    lectura -> LEER ID opcionesLectura ;
Rule 49    opcionesLectura -> [ CTI ]
Rule 50    opcionesLectura -> [ CTI ] [ CTI ]
Rule 51    opcionesLectura -> empty
Rule 52    escritura -> DIBUJAR ( ID pos color ) ;
Rule 53    escritura -> mueve
Rule 54    color -> AMARILLO
Rule 55    color -> VERDE
Rule 56    color -> ROJO
Rule 57    color -> AZUL
Rule 58    condicion -> IF ( expresion ) bloque
Rule 59    condicion -> IF ( expresion ) bloque ELSE bloque
Rule 60    expresion -> exp > exp
Rule 61    expresion -> exp < exp
Rule 62    expresion -> exp MENORIGUAL exp
Rule 63    expresion -> exp MAYORIGUAL exp
Rule 64    expresion -> exp IGUALIGUAL exp
Rule 65    expresion -> exp DIFERENTE exp
Rule 66    expresion -> exp COOR exp
Rule 67    expresion -> exp COAND exp
Rule 68    exp -> ( expresion )
Rule 69    exp -> ( varcte operacion )
Rule 70    exp -> varcte operacion
Rule 71    exp -> varcte
Rule 72    exp -> empty
Rule 73    operacion -> termino
Rule 74    operacion -> termino signo
Rule 75    signo -> + exp
Rule 76    signo -> - exp
Rule 77    termino -> factor
Rule 78    termino -> factor masop
Rule 79    masop -> * termino
Rule 80    masop -> / termino
Rule 81    factor -> ( expresion )
Rule 82    factor -> varcte
Rule 83    factor -> + varcte
Rule 84    factor -> - varcte
Rule 85    fors -> FOR ( asignacion expresion ; asignacion ) bloque
Rule 86    pos -> ( varcte , varcte )
Rule 87    whiles -> WHILE ( expresion ) bloque
Rule 88    varcte -> ID
Rule 89    varcte -> CTF
Rule 90    varcte -> CTI
Rule 91    varcte -> CTS
Rule 92    varcte -> TRUE
Rule 93    varcte -> FALSE
Rule 94    tipo -> ENTERO
Rule 95    tipo -> DECIMAL
Rule 96    tipo -> BOOL
Rule 97    tipo -> VOID
Rule 98    tipo -> CUADRADO
Rule 99    tipo -> RECTANGULO
Rule 100   tipo -> CIRCULO
Rule 101   tipo -> LINEA
Rule 102   tipo -> ESTRELLA
Rule 103   mueve -> MUEVE opcionMue
Rule 104   opcionMue -> IZQUIERDA ID CTI ;
Rule 105   opcionMue -> DERECHA ID CTI ;
Rule 106   opcionMue -> ARRIBA ID CTI ;
Rule 107   opcionMue -> ABAJO ID CTI ;
Rule 108   empty -> <empty>

Terminals, with rules where they appear

(                    : 19 52 58 59 68 69 81 85 86 87
)                    : 19 52 58 59 68 69 81 85 86 87
*                    : 79
+                    : 75 83
,                    : 14 24 86
-                    : 76 84
/                    : 80
;                    : 8 9 10 41 42 48 52 85 104 105 106 107
<                    : 61
=                    : 46
>                    : 60
ABAJO                : 107
AMARILLO             : 54
ARRIBA               : 106
AZUL                 : 57
BOOL                 : 96
CIRCULO              : 100
COAND                : 67
COOR                 : 66
CTF                  : 89
CTI                  : 16 17 43 44 44 49 50 50 90 104 105 106 107
CTS                  : 91
CUADRADO             : 98
DECIMAL              : 95
DERECHA              : 105
DIBUJAR              : 52
DIFERENTE            : 65
ELSE                 : 59
ENTERO               : 94
ESTRELLA             : 102
FALSE                : 93
FIN                  : 1 2
FOR                  : 85
FUNC                 : 19
ID                   : 8 9 13 14 19 22 24 32 41 42 48 52 88 104 105 106 107
IF                   : 58 59
IGUALIGUAL           : 64
INICIO               : 1 2
IZQUIERDA            : 104
LEER                 : 48
LINEA                : 101
MAYORIGUAL           : 63
MENORIGUAL           : 62
MUEVE                : 103
RECTANGULO           : 99
RETURN               : 32
ROJO                 : 56
TRUE                 : 92
VERDE                : 55
VOID                 : 97
WHILE                : 87
[                    : 16 17 43 44 44 49 50 50
]                    : 16 17 43 44 44 49 50 50
error                : 
{                    : 5 6 7 28 29 30 31
}                    : 5 6 7 28 29 30 31

Nonterminals, with rules where they appear

arreglo              : 9
asignacion           : 33 85 85
bloque               : 1 58 59 59 85 87
bloquefunc           : 19
color                : 52
condicion            : 35
empty                : 12 15 18 25 27 40 45 47 51 72
escritura            : 30 34
estatuto             : 5 28 39
estatutoAux          : 33 34 35 36 37 38
exp                  : 46 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 75 76
expresion            : 58 59 68 81 85 87
factor               : 77 78
fors                 : 38
funcAgregar          : 19
funcAgregarInicio    : 1
funcion              : 3
guardarIDs           : 8 9 13 14 22 24
lectura              : 36
listaIDS             : 10
listapaID            : 21
masIDS               : 13
masTipos             : 8 9 10
masop                : 78
maspaID              : 22
maspaTip             : 22
matriz               : 16
mueve                : 53
opcionAsignacion     : 41
opcionMue            : 103
opcionesLectura      : 48
operacion            : 69 70
param                : 19
pos                  : 52
programa             : 3 0
regresa              : 28 29 30
signo                : 74
termino              : 73 74 79 80
tipo                 : 8 9 10 19 21
valorAsig            : 41
varcte               : 69 70 71 82 83 84 86 86
vars                 : 5 6 11 26 28 29
whiles               : 37

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . INICIO funcAgregarInicio bloque FIN
    (2) programa -> . INICIO FIN
    (3) programa -> . funcion programa
    (19) funcion -> . FUNC tipo ID funcAgregar ( param ) bloquefunc

    INICIO          shift and go to state 3
    FUNC            shift and go to state 2

    programa                       shift and go to state 1
    funcion                        shift and go to state 4

state 1

    (0) S' -> programa .



state 2

    (19) funcion -> FUNC . tipo ID funcAgregar ( param ) bloquefunc
    (94) tipo -> . ENTERO
    (95) tipo -> . DECIMAL
    (96) tipo -> . BOOL
    (97) tipo -> . VOID
    (98) tipo -> . CUADRADO
    (99) tipo -> . RECTANGULO
    (100) tipo -> . CIRCULO
    (101) tipo -> . LINEA
    (102) tipo -> . ESTRELLA

    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 6
    BOOL            shift and go to state 11
    VOID            shift and go to state 9
    CUADRADO        shift and go to state 10
    RECTANGULO      shift and go to state 8
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 12
    ESTRELLA        shift and go to state 7

    tipo                           shift and go to state 5

state 3

    (1) programa -> INICIO . funcAgregarInicio bloque FIN
    (2) programa -> INICIO . FIN
    (4) funcAgregarInicio -> .

    FIN             shift and go to state 16
    {               reduce using rule 4 (funcAgregarInicio -> .)

    funcAgregarInicio              shift and go to state 15

state 4

    (3) programa -> funcion . programa
    (1) programa -> . INICIO funcAgregarInicio bloque FIN
    (2) programa -> . INICIO FIN
    (3) programa -> . funcion programa
    (19) funcion -> . FUNC tipo ID funcAgregar ( param ) bloquefunc

    INICIO          shift and go to state 3
    FUNC            shift and go to state 2

    programa                       shift and go to state 17
    funcion                        shift and go to state 4

state 5

    (19) funcion -> FUNC tipo . ID funcAgregar ( param ) bloquefunc

    ID              shift and go to state 18


state 6

    (95) tipo -> DECIMAL .

    ID              reduce using rule 95 (tipo -> DECIMAL .)


state 7

    (102) tipo -> ESTRELLA .

    ID              reduce using rule 102 (tipo -> ESTRELLA .)


state 8

    (99) tipo -> RECTANGULO .

    ID              reduce using rule 99 (tipo -> RECTANGULO .)


state 9

    (97) tipo -> VOID .

    ID              reduce using rule 97 (tipo -> VOID .)


state 10

    (98) tipo -> CUADRADO .

    ID              reduce using rule 98 (tipo -> CUADRADO .)


state 11

    (96) tipo -> BOOL .

    ID              reduce using rule 96 (tipo -> BOOL .)


state 12

    (101) tipo -> LINEA .

    ID              reduce using rule 101 (tipo -> LINEA .)


state 13

    (100) tipo -> CIRCULO .

    ID              reduce using rule 100 (tipo -> CIRCULO .)


state 14

    (94) tipo -> ENTERO .

    ID              reduce using rule 94 (tipo -> ENTERO .)


state 15

    (1) programa -> INICIO funcAgregarInicio . bloque FIN
    (5) bloque -> . { vars estatuto }
    (6) bloque -> . { vars }
    (7) bloque -> . { }

    {               shift and go to state 20

    bloque                         shift and go to state 19

state 16

    (2) programa -> INICIO FIN .

    $end            reduce using rule 2 (programa -> INICIO FIN .)


state 17

    (3) programa -> funcion programa .

    $end            reduce using rule 3 (programa -> funcion programa .)


state 18

    (19) funcion -> FUNC tipo ID . funcAgregar ( param ) bloquefunc
    (20) funcAgregar -> .

    (               reduce using rule 20 (funcAgregar -> .)

    funcAgregar                    shift and go to state 21

state 19

    (1) programa -> INICIO funcAgregarInicio bloque . FIN

    FIN             shift and go to state 22


state 20

    (5) bloque -> { . vars estatuto }
    (6) bloque -> { . vars }
    (7) bloque -> { . }
    (8) vars -> . tipo ID guardarIDs ; masTipos
    (9) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (10) vars -> . tipo listaIDS ; masTipos
    (94) tipo -> . ENTERO
    (95) tipo -> . DECIMAL
    (96) tipo -> . BOOL
    (97) tipo -> . VOID
    (98) tipo -> . CUADRADO
    (99) tipo -> . RECTANGULO
    (100) tipo -> . CIRCULO
    (101) tipo -> . LINEA
    (102) tipo -> . ESTRELLA

    }               shift and go to state 25
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 6
    BOOL            shift and go to state 11
    VOID            shift and go to state 9
    CUADRADO        shift and go to state 10
    RECTANGULO      shift and go to state 8
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 12
    ESTRELLA        shift and go to state 7

    vars                           shift and go to state 23
    tipo                           shift and go to state 24

state 21

    (19) funcion -> FUNC tipo ID funcAgregar . ( param ) bloquefunc

    (               shift and go to state 26


state 22

    (1) programa -> INICIO funcAgregarInicio bloque FIN .

    $end            reduce using rule 1 (programa -> INICIO funcAgregarInicio bloque FIN .)


state 23

    (5) bloque -> { vars . estatuto }
    (6) bloque -> { vars . }
    (33) estatuto -> . asignacion estatutoAux
    (34) estatuto -> . escritura estatutoAux
    (35) estatuto -> . condicion estatutoAux
    (36) estatuto -> . lectura estatutoAux
    (37) estatuto -> . whiles estatutoAux
    (38) estatuto -> . fors estatutoAux
    (41) asignacion -> . ID opcionAsignacion valorAsig ;
    (42) asignacion -> . ID ;
    (52) escritura -> . DIBUJAR ( ID pos color ) ;
    (53) escritura -> . mueve
    (58) condicion -> . IF ( expresion ) bloque
    (59) condicion -> . IF ( expresion ) bloque ELSE bloque
    (48) lectura -> . LEER ID opcionesLectura ;
    (87) whiles -> . WHILE ( expresion ) bloque
    (85) fors -> . FOR ( asignacion expresion ; asignacion ) bloque
    (103) mueve -> . MUEVE opcionMue

    }               shift and go to state 41
    ID              shift and go to state 35
    DIBUJAR         shift and go to state 39
    IF              shift and go to state 36
    LEER            shift and go to state 37
    WHILE           shift and go to state 27
    FOR             shift and go to state 32
    MUEVE           shift and go to state 40

    asignacion                     shift and go to state 38
    mueve                          shift and go to state 29
    estatuto                       shift and go to state 28
    whiles                         shift and go to state 33
    condicion                      shift and go to state 30
    fors                           shift and go to state 34
    lectura                        shift and go to state 31
    escritura                      shift and go to state 42

state 24

    (8) vars -> tipo . ID guardarIDs ; masTipos
    (9) vars -> tipo . ID guardarIDs arreglo ; masTipos
    (10) vars -> tipo . listaIDS ; masTipos
    (13) listaIDS -> . ID guardarIDs masIDS

    ID              shift and go to state 44

    listaIDS                       shift and go to state 43

state 25

    (7) bloque -> { } .

    ELSE            reduce using rule 7 (bloque -> { } .)
    ID              reduce using rule 7 (bloque -> { } .)
    DIBUJAR         reduce using rule 7 (bloque -> { } .)
    IF              reduce using rule 7 (bloque -> { } .)
    LEER            reduce using rule 7 (bloque -> { } .)
    WHILE           reduce using rule 7 (bloque -> { } .)
    FOR             reduce using rule 7 (bloque -> { } .)
    MUEVE           reduce using rule 7 (bloque -> { } .)
    }               reduce using rule 7 (bloque -> { } .)
    RETURN          reduce using rule 7 (bloque -> { } .)
    FIN             reduce using rule 7 (bloque -> { } .)


state 26

    (19) funcion -> FUNC tipo ID funcAgregar ( . param ) bloquefunc
    (21) param -> . tipo listapaID
    (94) tipo -> . ENTERO
    (95) tipo -> . DECIMAL
    (96) tipo -> . BOOL
    (97) tipo -> . VOID
    (98) tipo -> . CUADRADO
    (99) tipo -> . RECTANGULO
    (100) tipo -> . CIRCULO
    (101) tipo -> . LINEA
    (102) tipo -> . ESTRELLA

    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 6
    BOOL            shift and go to state 11
    VOID            shift and go to state 9
    CUADRADO        shift and go to state 10
    RECTANGULO      shift and go to state 8
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 12
    ESTRELLA        shift and go to state 7

    param                          shift and go to state 46
    tipo                           shift and go to state 45

state 27

    (87) whiles -> WHILE . ( expresion ) bloque

    (               shift and go to state 47


state 28

    (5) bloque -> { vars estatuto . }

    }               shift and go to state 48


state 29

    (53) escritura -> mueve .

    ID              reduce using rule 53 (escritura -> mueve .)
    DIBUJAR         reduce using rule 53 (escritura -> mueve .)
    IF              reduce using rule 53 (escritura -> mueve .)
    LEER            reduce using rule 53 (escritura -> mueve .)
    WHILE           reduce using rule 53 (escritura -> mueve .)
    FOR             reduce using rule 53 (escritura -> mueve .)
    MUEVE           reduce using rule 53 (escritura -> mueve .)
    }               reduce using rule 53 (escritura -> mueve .)
    RETURN          reduce using rule 53 (escritura -> mueve .)


state 30

    (35) estatuto -> condicion . estatutoAux
    (39) estatutoAux -> . estatuto
    (40) estatutoAux -> . empty
    (33) estatuto -> . asignacion estatutoAux
    (34) estatuto -> . escritura estatutoAux
    (35) estatuto -> . condicion estatutoAux
    (36) estatuto -> . lectura estatutoAux
    (37) estatuto -> . whiles estatutoAux
    (38) estatuto -> . fors estatutoAux
    (108) empty -> .
    (41) asignacion -> . ID opcionAsignacion valorAsig ;
    (42) asignacion -> . ID ;
    (52) escritura -> . DIBUJAR ( ID pos color ) ;
    (53) escritura -> . mueve
    (58) condicion -> . IF ( expresion ) bloque
    (59) condicion -> . IF ( expresion ) bloque ELSE bloque
    (48) lectura -> . LEER ID opcionesLectura ;
    (87) whiles -> . WHILE ( expresion ) bloque
    (85) fors -> . FOR ( asignacion expresion ; asignacion ) bloque
    (103) mueve -> . MUEVE opcionMue

    }               reduce using rule 108 (empty -> .)
    RETURN          reduce using rule 108 (empty -> .)
    ID              shift and go to state 35
    DIBUJAR         shift and go to state 39
    IF              shift and go to state 36
    LEER            shift and go to state 37
    WHILE           shift and go to state 27
    FOR             shift and go to state 32
    MUEVE           shift and go to state 40

    asignacion                     shift and go to state 38
    mueve                          shift and go to state 29
    estatuto                       shift and go to state 49
    whiles                         shift and go to state 33
    condicion                      shift and go to state 30
    estatutoAux                    shift and go to state 51
    fors                           shift and go to state 34
    lectura                        shift and go to state 31
    empty                          shift and go to state 50
    escritura                      shift and go to state 42

state 31

    (36) estatuto -> lectura . estatutoAux
    (39) estatutoAux -> . estatuto
    (40) estatutoAux -> . empty
    (33) estatuto -> . asignacion estatutoAux
    (34) estatuto -> . escritura estatutoAux
    (35) estatuto -> . condicion estatutoAux
    (36) estatuto -> . lectura estatutoAux
    (37) estatuto -> . whiles estatutoAux
    (38) estatuto -> . fors estatutoAux
    (108) empty -> .
    (41) asignacion -> . ID opcionAsignacion valorAsig ;
    (42) asignacion -> . ID ;
    (52) escritura -> . DIBUJAR ( ID pos color ) ;
    (53) escritura -> . mueve
    (58) condicion -> . IF ( expresion ) bloque
    (59) condicion -> . IF ( expresion ) bloque ELSE bloque
    (48) lectura -> . LEER ID opcionesLectura ;
    (87) whiles -> . WHILE ( expresion ) bloque
    (85) fors -> . FOR ( asignacion expresion ; asignacion ) bloque
    (103) mueve -> . MUEVE opcionMue

    }               reduce using rule 108 (empty -> .)
    RETURN          reduce using rule 108 (empty -> .)
    ID              shift and go to state 35
    DIBUJAR         shift and go to state 39
    IF              shift and go to state 36
    LEER            shift and go to state 37
    WHILE           shift and go to state 27
    FOR             shift and go to state 32
    MUEVE           shift and go to state 40

    asignacion                     shift and go to state 38
    mueve                          shift and go to state 29
    estatuto                       shift and go to state 49
    whiles                         shift and go to state 33
    condicion                      shift and go to state 30
    estatutoAux                    shift and go to state 52
    fors                           shift and go to state 34
    lectura                        shift and go to state 31
    empty                          shift and go to state 50
    escritura                      shift and go to state 42

state 32

    (85) fors -> FOR . ( asignacion expresion ; asignacion ) bloque

    (               shift and go to state 53


state 33

    (37) estatuto -> whiles . estatutoAux
    (39) estatutoAux -> . estatuto
    (40) estatutoAux -> . empty
    (33) estatuto -> . asignacion estatutoAux
    (34) estatuto -> . escritura estatutoAux
    (35) estatuto -> . condicion estatutoAux
    (36) estatuto -> . lectura estatutoAux
    (37) estatuto -> . whiles estatutoAux
    (38) estatuto -> . fors estatutoAux
    (108) empty -> .
    (41) asignacion -> . ID opcionAsignacion valorAsig ;
    (42) asignacion -> . ID ;
    (52) escritura -> . DIBUJAR ( ID pos color ) ;
    (53) escritura -> . mueve
    (58) condicion -> . IF ( expresion ) bloque
    (59) condicion -> . IF ( expresion ) bloque ELSE bloque
    (48) lectura -> . LEER ID opcionesLectura ;
    (87) whiles -> . WHILE ( expresion ) bloque
    (85) fors -> . FOR ( asignacion expresion ; asignacion ) bloque
    (103) mueve -> . MUEVE opcionMue

    }               reduce using rule 108 (empty -> .)
    RETURN          reduce using rule 108 (empty -> .)
    ID              shift and go to state 35
    DIBUJAR         shift and go to state 39
    IF              shift and go to state 36
    LEER            shift and go to state 37
    WHILE           shift and go to state 27
    FOR             shift and go to state 32
    MUEVE           shift and go to state 40

    asignacion                     shift and go to state 38
    mueve                          shift and go to state 29
    estatuto                       shift and go to state 49
    whiles                         shift and go to state 33
    condicion                      shift and go to state 30
    estatutoAux                    shift and go to state 54
    fors                           shift and go to state 34
    lectura                        shift and go to state 31
    empty                          shift and go to state 50
    escritura                      shift and go to state 42

state 34

    (38) estatuto -> fors . estatutoAux
    (39) estatutoAux -> . estatuto
    (40) estatutoAux -> . empty
    (33) estatuto -> . asignacion estatutoAux
    (34) estatuto -> . escritura estatutoAux
    (35) estatuto -> . condicion estatutoAux
    (36) estatuto -> . lectura estatutoAux
    (37) estatuto -> . whiles estatutoAux
    (38) estatuto -> . fors estatutoAux
    (108) empty -> .
    (41) asignacion -> . ID opcionAsignacion valorAsig ;
    (42) asignacion -> . ID ;
    (52) escritura -> . DIBUJAR ( ID pos color ) ;
    (53) escritura -> . mueve
    (58) condicion -> . IF ( expresion ) bloque
    (59) condicion -> . IF ( expresion ) bloque ELSE bloque
    (48) lectura -> . LEER ID opcionesLectura ;
    (87) whiles -> . WHILE ( expresion ) bloque
    (85) fors -> . FOR ( asignacion expresion ; asignacion ) bloque
    (103) mueve -> . MUEVE opcionMue

    }               reduce using rule 108 (empty -> .)
    RETURN          reduce using rule 108 (empty -> .)
    ID              shift and go to state 35
    DIBUJAR         shift and go to state 39
    IF              shift and go to state 36
    LEER            shift and go to state 37
    WHILE           shift and go to state 27
    FOR             shift and go to state 32
    MUEVE           shift and go to state 40

    asignacion                     shift and go to state 38
    mueve                          shift and go to state 29
    estatuto                       shift and go to state 49
    whiles                         shift and go to state 33
    condicion                      shift and go to state 30
    estatutoAux                    shift and go to state 55
    fors                           shift and go to state 34
    lectura                        shift and go to state 31
    empty                          shift and go to state 50
    escritura                      shift and go to state 42

state 35

    (41) asignacion -> ID . opcionAsignacion valorAsig ;
    (42) asignacion -> ID . ;
    (43) opcionAsignacion -> . [ CTI ]
    (44) opcionAsignacion -> . [ CTI ] [ CTI ]
    (45) opcionAsignacion -> . empty
    (108) empty -> .

  ! shift/reduce conflict for ; resolved as shift
    ;               shift and go to state 58
    [               shift and go to state 59
    =               reduce using rule 108 (empty -> .)

  ! ;               [ reduce using rule 108 (empty -> .) ]

    opcionAsignacion               shift and go to state 56
    empty                          shift and go to state 57

state 36

    (58) condicion -> IF . ( expresion ) bloque
    (59) condicion -> IF . ( expresion ) bloque ELSE bloque

    (               shift and go to state 60


state 37

    (48) lectura -> LEER . ID opcionesLectura ;

    ID              shift and go to state 61


state 38

    (33) estatuto -> asignacion . estatutoAux
    (39) estatutoAux -> . estatuto
    (40) estatutoAux -> . empty
    (33) estatuto -> . asignacion estatutoAux
    (34) estatuto -> . escritura estatutoAux
    (35) estatuto -> . condicion estatutoAux
    (36) estatuto -> . lectura estatutoAux
    (37) estatuto -> . whiles estatutoAux
    (38) estatuto -> . fors estatutoAux
    (108) empty -> .
    (41) asignacion -> . ID opcionAsignacion valorAsig ;
    (42) asignacion -> . ID ;
    (52) escritura -> . DIBUJAR ( ID pos color ) ;
    (53) escritura -> . mueve
    (58) condicion -> . IF ( expresion ) bloque
    (59) condicion -> . IF ( expresion ) bloque ELSE bloque
    (48) lectura -> . LEER ID opcionesLectura ;
    (87) whiles -> . WHILE ( expresion ) bloque
    (85) fors -> . FOR ( asignacion expresion ; asignacion ) bloque
    (103) mueve -> . MUEVE opcionMue

    }               reduce using rule 108 (empty -> .)
    RETURN          reduce using rule 108 (empty -> .)
    ID              shift and go to state 35
    DIBUJAR         shift and go to state 39
    IF              shift and go to state 36
    LEER            shift and go to state 37
    WHILE           shift and go to state 27
    FOR             shift and go to state 32
    MUEVE           shift and go to state 40

    asignacion                     shift and go to state 38
    mueve                          shift and go to state 29
    estatuto                       shift and go to state 49
    whiles                         shift and go to state 33
    condicion                      shift and go to state 30
    estatutoAux                    shift and go to state 62
    fors                           shift and go to state 34
    lectura                        shift and go to state 31
    empty                          shift and go to state 50
    escritura                      shift and go to state 42

state 39

    (52) escritura -> DIBUJAR . ( ID pos color ) ;

    (               shift and go to state 63


state 40

    (103) mueve -> MUEVE . opcionMue
    (104) opcionMue -> . IZQUIERDA ID CTI ;
    (105) opcionMue -> . DERECHA ID CTI ;
    (106) opcionMue -> . ARRIBA ID CTI ;
    (107) opcionMue -> . ABAJO ID CTI ;

    IZQUIERDA       shift and go to state 65
    DERECHA         shift and go to state 67
    ARRIBA          shift and go to state 66
    ABAJO           shift and go to state 64

    opcionMue                      shift and go to state 68

state 41

    (6) bloque -> { vars } .

    ELSE            reduce using rule 6 (bloque -> { vars } .)
    ID              reduce using rule 6 (bloque -> { vars } .)
    DIBUJAR         reduce using rule 6 (bloque -> { vars } .)
    IF              reduce using rule 6 (bloque -> { vars } .)
    LEER            reduce using rule 6 (bloque -> { vars } .)
    WHILE           reduce using rule 6 (bloque -> { vars } .)
    FOR             reduce using rule 6 (bloque -> { vars } .)
    MUEVE           reduce using rule 6 (bloque -> { vars } .)
    }               reduce using rule 6 (bloque -> { vars } .)
    RETURN          reduce using rule 6 (bloque -> { vars } .)
    FIN             reduce using rule 6 (bloque -> { vars } .)


state 42

    (34) estatuto -> escritura . estatutoAux
    (39) estatutoAux -> . estatuto
    (40) estatutoAux -> . empty
    (33) estatuto -> . asignacion estatutoAux
    (34) estatuto -> . escritura estatutoAux
    (35) estatuto -> . condicion estatutoAux
    (36) estatuto -> . lectura estatutoAux
    (37) estatuto -> . whiles estatutoAux
    (38) estatuto -> . fors estatutoAux
    (108) empty -> .
    (41) asignacion -> . ID opcionAsignacion valorAsig ;
    (42) asignacion -> . ID ;
    (52) escritura -> . DIBUJAR ( ID pos color ) ;
    (53) escritura -> . mueve
    (58) condicion -> . IF ( expresion ) bloque
    (59) condicion -> . IF ( expresion ) bloque ELSE bloque
    (48) lectura -> . LEER ID opcionesLectura ;
    (87) whiles -> . WHILE ( expresion ) bloque
    (85) fors -> . FOR ( asignacion expresion ; asignacion ) bloque
    (103) mueve -> . MUEVE opcionMue

    }               reduce using rule 108 (empty -> .)
    RETURN          reduce using rule 108 (empty -> .)
    ID              shift and go to state 35
    DIBUJAR         shift and go to state 39
    IF              shift and go to state 36
    LEER            shift and go to state 37
    WHILE           shift and go to state 27
    FOR             shift and go to state 32
    MUEVE           shift and go to state 40

    asignacion                     shift and go to state 38
    mueve                          shift and go to state 29
    estatuto                       shift and go to state 49
    whiles                         shift and go to state 33
    condicion                      shift and go to state 30
    estatutoAux                    shift and go to state 69
    fors                           shift and go to state 34
    lectura                        shift and go to state 31
    empty                          shift and go to state 50
    escritura                      shift and go to state 42

state 43

    (10) vars -> tipo listaIDS . ; masTipos

    ;               shift and go to state 70


state 44

    (8) vars -> tipo ID . guardarIDs ; masTipos
    (9) vars -> tipo ID . guardarIDs arreglo ; masTipos
    (13) listaIDS -> ID . guardarIDs masIDS
    (23) guardarIDs -> .

    ;               reduce using rule 23 (guardarIDs -> .)
    [               reduce using rule 23 (guardarIDs -> .)
    ,               reduce using rule 23 (guardarIDs -> .)

    guardarIDs                     shift and go to state 71

state 45

    (21) param -> tipo . listapaID
    (22) listapaID -> . ID guardarIDs maspaID maspaTip

    ID              shift and go to state 73

    listapaID                      shift and go to state 72

state 46

    (19) funcion -> FUNC tipo ID funcAgregar ( param . ) bloquefunc

    )               shift and go to state 74


state 47

    (87) whiles -> WHILE ( . expresion ) bloque
    (60) expresion -> . exp > exp
    (61) expresion -> . exp < exp
    (62) expresion -> . exp MENORIGUAL exp
    (63) expresion -> . exp MAYORIGUAL exp
    (64) expresion -> . exp IGUALIGUAL exp
    (65) expresion -> . exp DIFERENTE exp
    (66) expresion -> . exp COOR exp
    (67) expresion -> . exp COAND exp
    (68) exp -> . ( expresion )
    (69) exp -> . ( varcte operacion )
    (70) exp -> . varcte operacion
    (71) exp -> . varcte
    (72) exp -> . empty
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE
    (108) empty -> .

    (               shift and go to state 80
    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84
    >               reduce using rule 108 (empty -> .)
    <               reduce using rule 108 (empty -> .)
    MENORIGUAL      reduce using rule 108 (empty -> .)
    MAYORIGUAL      reduce using rule 108 (empty -> .)
    IGUALIGUAL      reduce using rule 108 (empty -> .)
    DIFERENTE       reduce using rule 108 (empty -> .)
    COOR            reduce using rule 108 (empty -> .)
    COAND           reduce using rule 108 (empty -> .)

    expresion                      shift and go to state 83
    varcte                         shift and go to state 79
    exp                            shift and go to state 85
    empty                          shift and go to state 81

state 48

    (5) bloque -> { vars estatuto } .

    ELSE            reduce using rule 5 (bloque -> { vars estatuto } .)
    ID              reduce using rule 5 (bloque -> { vars estatuto } .)
    DIBUJAR         reduce using rule 5 (bloque -> { vars estatuto } .)
    IF              reduce using rule 5 (bloque -> { vars estatuto } .)
    LEER            reduce using rule 5 (bloque -> { vars estatuto } .)
    WHILE           reduce using rule 5 (bloque -> { vars estatuto } .)
    FOR             reduce using rule 5 (bloque -> { vars estatuto } .)
    MUEVE           reduce using rule 5 (bloque -> { vars estatuto } .)
    }               reduce using rule 5 (bloque -> { vars estatuto } .)
    RETURN          reduce using rule 5 (bloque -> { vars estatuto } .)
    FIN             reduce using rule 5 (bloque -> { vars estatuto } .)


state 49

    (39) estatutoAux -> estatuto .

    }               reduce using rule 39 (estatutoAux -> estatuto .)
    RETURN          reduce using rule 39 (estatutoAux -> estatuto .)


state 50

    (40) estatutoAux -> empty .

    }               reduce using rule 40 (estatutoAux -> empty .)
    RETURN          reduce using rule 40 (estatutoAux -> empty .)


state 51

    (35) estatuto -> condicion estatutoAux .

    }               reduce using rule 35 (estatuto -> condicion estatutoAux .)
    RETURN          reduce using rule 35 (estatuto -> condicion estatutoAux .)


state 52

    (36) estatuto -> lectura estatutoAux .

    }               reduce using rule 36 (estatuto -> lectura estatutoAux .)
    RETURN          reduce using rule 36 (estatuto -> lectura estatutoAux .)


state 53

    (85) fors -> FOR ( . asignacion expresion ; asignacion ) bloque
    (41) asignacion -> . ID opcionAsignacion valorAsig ;
    (42) asignacion -> . ID ;

    ID              shift and go to state 35

    asignacion                     shift and go to state 86

state 54

    (37) estatuto -> whiles estatutoAux .

    }               reduce using rule 37 (estatuto -> whiles estatutoAux .)
    RETURN          reduce using rule 37 (estatuto -> whiles estatutoAux .)


state 55

    (38) estatuto -> fors estatutoAux .

    }               reduce using rule 38 (estatuto -> fors estatutoAux .)
    RETURN          reduce using rule 38 (estatuto -> fors estatutoAux .)


state 56

    (41) asignacion -> ID opcionAsignacion . valorAsig ;
    (46) valorAsig -> . = exp
    (47) valorAsig -> . empty
    (108) empty -> .

    =               shift and go to state 88
    ;               reduce using rule 108 (empty -> .)

    empty                          shift and go to state 89
    valorAsig                      shift and go to state 87

state 57

    (45) opcionAsignacion -> empty .

    =               reduce using rule 45 (opcionAsignacion -> empty .)
    ;               reduce using rule 45 (opcionAsignacion -> empty .)


state 58

    (42) asignacion -> ID ; .

    ID              reduce using rule 42 (asignacion -> ID ; .)
    DIBUJAR         reduce using rule 42 (asignacion -> ID ; .)
    IF              reduce using rule 42 (asignacion -> ID ; .)
    LEER            reduce using rule 42 (asignacion -> ID ; .)
    WHILE           reduce using rule 42 (asignacion -> ID ; .)
    FOR             reduce using rule 42 (asignacion -> ID ; .)
    MUEVE           reduce using rule 42 (asignacion -> ID ; .)
    }               reduce using rule 42 (asignacion -> ID ; .)
    RETURN          reduce using rule 42 (asignacion -> ID ; .)
    )               reduce using rule 42 (asignacion -> ID ; .)
    (               reduce using rule 42 (asignacion -> ID ; .)
    CTF             reduce using rule 42 (asignacion -> ID ; .)
    CTI             reduce using rule 42 (asignacion -> ID ; .)
    CTS             reduce using rule 42 (asignacion -> ID ; .)
    TRUE            reduce using rule 42 (asignacion -> ID ; .)
    FALSE           reduce using rule 42 (asignacion -> ID ; .)
    >               reduce using rule 42 (asignacion -> ID ; .)
    <               reduce using rule 42 (asignacion -> ID ; .)
    MENORIGUAL      reduce using rule 42 (asignacion -> ID ; .)
    MAYORIGUAL      reduce using rule 42 (asignacion -> ID ; .)
    IGUALIGUAL      reduce using rule 42 (asignacion -> ID ; .)
    DIFERENTE       reduce using rule 42 (asignacion -> ID ; .)
    COOR            reduce using rule 42 (asignacion -> ID ; .)
    COAND           reduce using rule 42 (asignacion -> ID ; .)


state 59

    (43) opcionAsignacion -> [ . CTI ]
    (44) opcionAsignacion -> [ . CTI ] [ CTI ]

    CTI             shift and go to state 90


state 60

    (58) condicion -> IF ( . expresion ) bloque
    (59) condicion -> IF ( . expresion ) bloque ELSE bloque
    (60) expresion -> . exp > exp
    (61) expresion -> . exp < exp
    (62) expresion -> . exp MENORIGUAL exp
    (63) expresion -> . exp MAYORIGUAL exp
    (64) expresion -> . exp IGUALIGUAL exp
    (65) expresion -> . exp DIFERENTE exp
    (66) expresion -> . exp COOR exp
    (67) expresion -> . exp COAND exp
    (68) exp -> . ( expresion )
    (69) exp -> . ( varcte operacion )
    (70) exp -> . varcte operacion
    (71) exp -> . varcte
    (72) exp -> . empty
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE
    (108) empty -> .

    (               shift and go to state 80
    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84
    >               reduce using rule 108 (empty -> .)
    <               reduce using rule 108 (empty -> .)
    MENORIGUAL      reduce using rule 108 (empty -> .)
    MAYORIGUAL      reduce using rule 108 (empty -> .)
    IGUALIGUAL      reduce using rule 108 (empty -> .)
    DIFERENTE       reduce using rule 108 (empty -> .)
    COOR            reduce using rule 108 (empty -> .)
    COAND           reduce using rule 108 (empty -> .)

    expresion                      shift and go to state 91
    varcte                         shift and go to state 79
    exp                            shift and go to state 85
    empty                          shift and go to state 81

state 61

    (48) lectura -> LEER ID . opcionesLectura ;
    (49) opcionesLectura -> . [ CTI ]
    (50) opcionesLectura -> . [ CTI ] [ CTI ]
    (51) opcionesLectura -> . empty
    (108) empty -> .

    [               shift and go to state 92
    ;               reduce using rule 108 (empty -> .)

    opcionesLectura                shift and go to state 93
    empty                          shift and go to state 94

state 62

    (33) estatuto -> asignacion estatutoAux .

    }               reduce using rule 33 (estatuto -> asignacion estatutoAux .)
    RETURN          reduce using rule 33 (estatuto -> asignacion estatutoAux .)


state 63

    (52) escritura -> DIBUJAR ( . ID pos color ) ;

    ID              shift and go to state 95


state 64

    (107) opcionMue -> ABAJO . ID CTI ;

    ID              shift and go to state 96


state 65

    (104) opcionMue -> IZQUIERDA . ID CTI ;

    ID              shift and go to state 97


state 66

    (106) opcionMue -> ARRIBA . ID CTI ;

    ID              shift and go to state 98


state 67

    (105) opcionMue -> DERECHA . ID CTI ;

    ID              shift and go to state 99


state 68

    (103) mueve -> MUEVE opcionMue .

    ID              reduce using rule 103 (mueve -> MUEVE opcionMue .)
    DIBUJAR         reduce using rule 103 (mueve -> MUEVE opcionMue .)
    IF              reduce using rule 103 (mueve -> MUEVE opcionMue .)
    LEER            reduce using rule 103 (mueve -> MUEVE opcionMue .)
    WHILE           reduce using rule 103 (mueve -> MUEVE opcionMue .)
    FOR             reduce using rule 103 (mueve -> MUEVE opcionMue .)
    MUEVE           reduce using rule 103 (mueve -> MUEVE opcionMue .)
    }               reduce using rule 103 (mueve -> MUEVE opcionMue .)
    RETURN          reduce using rule 103 (mueve -> MUEVE opcionMue .)


state 69

    (34) estatuto -> escritura estatutoAux .

    }               reduce using rule 34 (estatuto -> escritura estatutoAux .)
    RETURN          reduce using rule 34 (estatuto -> escritura estatutoAux .)


state 70

    (10) vars -> tipo listaIDS ; . masTipos
    (11) masTipos -> . vars
    (12) masTipos -> . empty
    (8) vars -> . tipo ID guardarIDs ; masTipos
    (9) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (10) vars -> . tipo listaIDS ; masTipos
    (108) empty -> .
    (94) tipo -> . ENTERO
    (95) tipo -> . DECIMAL
    (96) tipo -> . BOOL
    (97) tipo -> . VOID
    (98) tipo -> . CUADRADO
    (99) tipo -> . RECTANGULO
    (100) tipo -> . CIRCULO
    (101) tipo -> . LINEA
    (102) tipo -> . ESTRELLA

    }               reduce using rule 108 (empty -> .)
    ID              reduce using rule 108 (empty -> .)
    DIBUJAR         reduce using rule 108 (empty -> .)
    IF              reduce using rule 108 (empty -> .)
    LEER            reduce using rule 108 (empty -> .)
    WHILE           reduce using rule 108 (empty -> .)
    FOR             reduce using rule 108 (empty -> .)
    MUEVE           reduce using rule 108 (empty -> .)
    RETURN          reduce using rule 108 (empty -> .)
    )               reduce using rule 108 (empty -> .)
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 6
    BOOL            shift and go to state 11
    VOID            shift and go to state 9
    CUADRADO        shift and go to state 10
    RECTANGULO      shift and go to state 8
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 12
    ESTRELLA        shift and go to state 7

    masTipos                       shift and go to state 100
    tipo                           shift and go to state 24
    vars                           shift and go to state 101
    empty                          shift and go to state 102

state 71

    (8) vars -> tipo ID guardarIDs . ; masTipos
    (9) vars -> tipo ID guardarIDs . arreglo ; masTipos
    (13) listaIDS -> ID guardarIDs . masIDS
    (16) arreglo -> . [ CTI ] matriz
    (14) masIDS -> . , ID guardarIDs
    (15) masIDS -> . empty
    (108) empty -> .

  ! shift/reduce conflict for ; resolved as shift
    ;               shift and go to state 106
    [               shift and go to state 105
    ,               shift and go to state 103

  ! ;               [ reduce using rule 108 (empty -> .) ]

    arreglo                        shift and go to state 104
    masIDS                         shift and go to state 107
    empty                          shift and go to state 108

state 72

    (21) param -> tipo listapaID .

    )               reduce using rule 21 (param -> tipo listapaID .)


state 73

    (22) listapaID -> ID . guardarIDs maspaID maspaTip
    (23) guardarIDs -> .

    ,               reduce using rule 23 (guardarIDs -> .)
    ENTERO          reduce using rule 23 (guardarIDs -> .)
    DECIMAL         reduce using rule 23 (guardarIDs -> .)
    BOOL            reduce using rule 23 (guardarIDs -> .)
    VOID            reduce using rule 23 (guardarIDs -> .)
    CUADRADO        reduce using rule 23 (guardarIDs -> .)
    RECTANGULO      reduce using rule 23 (guardarIDs -> .)
    CIRCULO         reduce using rule 23 (guardarIDs -> .)
    LINEA           reduce using rule 23 (guardarIDs -> .)
    ESTRELLA        reduce using rule 23 (guardarIDs -> .)
    )               reduce using rule 23 (guardarIDs -> .)

    guardarIDs                     shift and go to state 109

state 74

    (19) funcion -> FUNC tipo ID funcAgregar ( param ) . bloquefunc
    (28) bloquefunc -> . { vars estatuto regresa }
    (29) bloquefunc -> . { vars regresa }
    (30) bloquefunc -> . { escritura regresa }
    (31) bloquefunc -> . { }

    {               shift and go to state 110

    bloquefunc                     shift and go to state 111

state 75

    (91) varcte -> CTS .

    )               reduce using rule 91 (varcte -> CTS .)
    (               reduce using rule 91 (varcte -> CTS .)
    +               reduce using rule 91 (varcte -> CTS .)
    -               reduce using rule 91 (varcte -> CTS .)
    ID              reduce using rule 91 (varcte -> CTS .)
    CTF             reduce using rule 91 (varcte -> CTS .)
    CTI             reduce using rule 91 (varcte -> CTS .)
    CTS             reduce using rule 91 (varcte -> CTS .)
    TRUE            reduce using rule 91 (varcte -> CTS .)
    FALSE           reduce using rule 91 (varcte -> CTS .)
    ;               reduce using rule 91 (varcte -> CTS .)
    >               reduce using rule 91 (varcte -> CTS .)
    <               reduce using rule 91 (varcte -> CTS .)
    MENORIGUAL      reduce using rule 91 (varcte -> CTS .)
    MAYORIGUAL      reduce using rule 91 (varcte -> CTS .)
    IGUALIGUAL      reduce using rule 91 (varcte -> CTS .)
    DIFERENTE       reduce using rule 91 (varcte -> CTS .)
    COOR            reduce using rule 91 (varcte -> CTS .)
    COAND           reduce using rule 91 (varcte -> CTS .)
    *               reduce using rule 91 (varcte -> CTS .)
    /               reduce using rule 91 (varcte -> CTS .)
    ,               reduce using rule 91 (varcte -> CTS .)


state 76

    (89) varcte -> CTF .

    )               reduce using rule 89 (varcte -> CTF .)
    (               reduce using rule 89 (varcte -> CTF .)
    +               reduce using rule 89 (varcte -> CTF .)
    -               reduce using rule 89 (varcte -> CTF .)
    ID              reduce using rule 89 (varcte -> CTF .)
    CTF             reduce using rule 89 (varcte -> CTF .)
    CTI             reduce using rule 89 (varcte -> CTF .)
    CTS             reduce using rule 89 (varcte -> CTF .)
    TRUE            reduce using rule 89 (varcte -> CTF .)
    FALSE           reduce using rule 89 (varcte -> CTF .)
    ;               reduce using rule 89 (varcte -> CTF .)
    >               reduce using rule 89 (varcte -> CTF .)
    <               reduce using rule 89 (varcte -> CTF .)
    MENORIGUAL      reduce using rule 89 (varcte -> CTF .)
    MAYORIGUAL      reduce using rule 89 (varcte -> CTF .)
    IGUALIGUAL      reduce using rule 89 (varcte -> CTF .)
    DIFERENTE       reduce using rule 89 (varcte -> CTF .)
    COOR            reduce using rule 89 (varcte -> CTF .)
    COAND           reduce using rule 89 (varcte -> CTF .)
    *               reduce using rule 89 (varcte -> CTF .)
    /               reduce using rule 89 (varcte -> CTF .)
    ,               reduce using rule 89 (varcte -> CTF .)


state 77

    (92) varcte -> TRUE .

    )               reduce using rule 92 (varcte -> TRUE .)
    (               reduce using rule 92 (varcte -> TRUE .)
    +               reduce using rule 92 (varcte -> TRUE .)
    -               reduce using rule 92 (varcte -> TRUE .)
    ID              reduce using rule 92 (varcte -> TRUE .)
    CTF             reduce using rule 92 (varcte -> TRUE .)
    CTI             reduce using rule 92 (varcte -> TRUE .)
    CTS             reduce using rule 92 (varcte -> TRUE .)
    TRUE            reduce using rule 92 (varcte -> TRUE .)
    FALSE           reduce using rule 92 (varcte -> TRUE .)
    ;               reduce using rule 92 (varcte -> TRUE .)
    >               reduce using rule 92 (varcte -> TRUE .)
    <               reduce using rule 92 (varcte -> TRUE .)
    MENORIGUAL      reduce using rule 92 (varcte -> TRUE .)
    MAYORIGUAL      reduce using rule 92 (varcte -> TRUE .)
    IGUALIGUAL      reduce using rule 92 (varcte -> TRUE .)
    DIFERENTE       reduce using rule 92 (varcte -> TRUE .)
    COOR            reduce using rule 92 (varcte -> TRUE .)
    COAND           reduce using rule 92 (varcte -> TRUE .)
    *               reduce using rule 92 (varcte -> TRUE .)
    /               reduce using rule 92 (varcte -> TRUE .)
    ,               reduce using rule 92 (varcte -> TRUE .)


state 78

    (90) varcte -> CTI .

    )               reduce using rule 90 (varcte -> CTI .)
    (               reduce using rule 90 (varcte -> CTI .)
    +               reduce using rule 90 (varcte -> CTI .)
    -               reduce using rule 90 (varcte -> CTI .)
    ID              reduce using rule 90 (varcte -> CTI .)
    CTF             reduce using rule 90 (varcte -> CTI .)
    CTI             reduce using rule 90 (varcte -> CTI .)
    CTS             reduce using rule 90 (varcte -> CTI .)
    TRUE            reduce using rule 90 (varcte -> CTI .)
    FALSE           reduce using rule 90 (varcte -> CTI .)
    ;               reduce using rule 90 (varcte -> CTI .)
    >               reduce using rule 90 (varcte -> CTI .)
    <               reduce using rule 90 (varcte -> CTI .)
    MENORIGUAL      reduce using rule 90 (varcte -> CTI .)
    MAYORIGUAL      reduce using rule 90 (varcte -> CTI .)
    IGUALIGUAL      reduce using rule 90 (varcte -> CTI .)
    DIFERENTE       reduce using rule 90 (varcte -> CTI .)
    COOR            reduce using rule 90 (varcte -> CTI .)
    COAND           reduce using rule 90 (varcte -> CTI .)
    *               reduce using rule 90 (varcte -> CTI .)
    /               reduce using rule 90 (varcte -> CTI .)
    ,               reduce using rule 90 (varcte -> CTI .)


state 79

    (70) exp -> varcte . operacion
    (71) exp -> varcte .
    (73) operacion -> . termino
    (74) operacion -> . termino signo
    (77) termino -> . factor
    (78) termino -> . factor masop
    (81) factor -> . ( expresion )
    (82) factor -> . varcte
    (83) factor -> . + varcte
    (84) factor -> . - varcte
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE

    )               reduce using rule 71 (exp -> varcte .)
    ;               reduce using rule 71 (exp -> varcte .)
    >               reduce using rule 71 (exp -> varcte .)
    <               reduce using rule 71 (exp -> varcte .)
    MENORIGUAL      reduce using rule 71 (exp -> varcte .)
    MAYORIGUAL      reduce using rule 71 (exp -> varcte .)
    IGUALIGUAL      reduce using rule 71 (exp -> varcte .)
    DIFERENTE       reduce using rule 71 (exp -> varcte .)
    COOR            reduce using rule 71 (exp -> varcte .)
    COAND           reduce using rule 71 (exp -> varcte .)
    (               shift and go to state 114
    +               shift and go to state 115
    -               shift and go to state 116
    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84

    varcte                         shift and go to state 112
    operacion                      shift and go to state 113
    termino                        shift and go to state 117
    factor                         shift and go to state 118

state 80

    (68) exp -> ( . expresion )
    (69) exp -> ( . varcte operacion )
    (60) expresion -> . exp > exp
    (61) expresion -> . exp < exp
    (62) expresion -> . exp MENORIGUAL exp
    (63) expresion -> . exp MAYORIGUAL exp
    (64) expresion -> . exp IGUALIGUAL exp
    (65) expresion -> . exp DIFERENTE exp
    (66) expresion -> . exp COOR exp
    (67) expresion -> . exp COAND exp
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE
    (68) exp -> . ( expresion )
    (69) exp -> . ( varcte operacion )
    (70) exp -> . varcte operacion
    (71) exp -> . varcte
    (72) exp -> . empty
    (108) empty -> .

    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84
    (               shift and go to state 80
    >               reduce using rule 108 (empty -> .)
    <               reduce using rule 108 (empty -> .)
    MENORIGUAL      reduce using rule 108 (empty -> .)
    MAYORIGUAL      reduce using rule 108 (empty -> .)
    IGUALIGUAL      reduce using rule 108 (empty -> .)
    DIFERENTE       reduce using rule 108 (empty -> .)
    COOR            reduce using rule 108 (empty -> .)
    COAND           reduce using rule 108 (empty -> .)

    expresion                      shift and go to state 119
    empty                          shift and go to state 81
    varcte                         shift and go to state 120
    exp                            shift and go to state 85

state 81

    (72) exp -> empty .

    )               reduce using rule 72 (exp -> empty .)
    ;               reduce using rule 72 (exp -> empty .)
    >               reduce using rule 72 (exp -> empty .)
    <               reduce using rule 72 (exp -> empty .)
    MENORIGUAL      reduce using rule 72 (exp -> empty .)
    MAYORIGUAL      reduce using rule 72 (exp -> empty .)
    IGUALIGUAL      reduce using rule 72 (exp -> empty .)
    DIFERENTE       reduce using rule 72 (exp -> empty .)
    COOR            reduce using rule 72 (exp -> empty .)
    COAND           reduce using rule 72 (exp -> empty .)


state 82

    (88) varcte -> ID .

    )               reduce using rule 88 (varcte -> ID .)
    (               reduce using rule 88 (varcte -> ID .)
    +               reduce using rule 88 (varcte -> ID .)
    -               reduce using rule 88 (varcte -> ID .)
    ID              reduce using rule 88 (varcte -> ID .)
    CTF             reduce using rule 88 (varcte -> ID .)
    CTI             reduce using rule 88 (varcte -> ID .)
    CTS             reduce using rule 88 (varcte -> ID .)
    TRUE            reduce using rule 88 (varcte -> ID .)
    FALSE           reduce using rule 88 (varcte -> ID .)
    ;               reduce using rule 88 (varcte -> ID .)
    >               reduce using rule 88 (varcte -> ID .)
    <               reduce using rule 88 (varcte -> ID .)
    MENORIGUAL      reduce using rule 88 (varcte -> ID .)
    MAYORIGUAL      reduce using rule 88 (varcte -> ID .)
    IGUALIGUAL      reduce using rule 88 (varcte -> ID .)
    DIFERENTE       reduce using rule 88 (varcte -> ID .)
    COOR            reduce using rule 88 (varcte -> ID .)
    COAND           reduce using rule 88 (varcte -> ID .)
    *               reduce using rule 88 (varcte -> ID .)
    /               reduce using rule 88 (varcte -> ID .)
    ,               reduce using rule 88 (varcte -> ID .)


state 83

    (87) whiles -> WHILE ( expresion . ) bloque

    )               shift and go to state 121


state 84

    (93) varcte -> FALSE .

    )               reduce using rule 93 (varcte -> FALSE .)
    (               reduce using rule 93 (varcte -> FALSE .)
    +               reduce using rule 93 (varcte -> FALSE .)
    -               reduce using rule 93 (varcte -> FALSE .)
    ID              reduce using rule 93 (varcte -> FALSE .)
    CTF             reduce using rule 93 (varcte -> FALSE .)
    CTI             reduce using rule 93 (varcte -> FALSE .)
    CTS             reduce using rule 93 (varcte -> FALSE .)
    TRUE            reduce using rule 93 (varcte -> FALSE .)
    FALSE           reduce using rule 93 (varcte -> FALSE .)
    ;               reduce using rule 93 (varcte -> FALSE .)
    >               reduce using rule 93 (varcte -> FALSE .)
    <               reduce using rule 93 (varcte -> FALSE .)
    MENORIGUAL      reduce using rule 93 (varcte -> FALSE .)
    MAYORIGUAL      reduce using rule 93 (varcte -> FALSE .)
    IGUALIGUAL      reduce using rule 93 (varcte -> FALSE .)
    DIFERENTE       reduce using rule 93 (varcte -> FALSE .)
    COOR            reduce using rule 93 (varcte -> FALSE .)
    COAND           reduce using rule 93 (varcte -> FALSE .)
    *               reduce using rule 93 (varcte -> FALSE .)
    /               reduce using rule 93 (varcte -> FALSE .)
    ,               reduce using rule 93 (varcte -> FALSE .)


state 85

    (60) expresion -> exp . > exp
    (61) expresion -> exp . < exp
    (62) expresion -> exp . MENORIGUAL exp
    (63) expresion -> exp . MAYORIGUAL exp
    (64) expresion -> exp . IGUALIGUAL exp
    (65) expresion -> exp . DIFERENTE exp
    (66) expresion -> exp . COOR exp
    (67) expresion -> exp . COAND exp

    >               shift and go to state 129
    <               shift and go to state 128
    MENORIGUAL      shift and go to state 127
    MAYORIGUAL      shift and go to state 126
    IGUALIGUAL      shift and go to state 124
    DIFERENTE       shift and go to state 125
    COOR            shift and go to state 122
    COAND           shift and go to state 123


state 86

    (85) fors -> FOR ( asignacion . expresion ; asignacion ) bloque
    (60) expresion -> . exp > exp
    (61) expresion -> . exp < exp
    (62) expresion -> . exp MENORIGUAL exp
    (63) expresion -> . exp MAYORIGUAL exp
    (64) expresion -> . exp IGUALIGUAL exp
    (65) expresion -> . exp DIFERENTE exp
    (66) expresion -> . exp COOR exp
    (67) expresion -> . exp COAND exp
    (68) exp -> . ( expresion )
    (69) exp -> . ( varcte operacion )
    (70) exp -> . varcte operacion
    (71) exp -> . varcte
    (72) exp -> . empty
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE
    (108) empty -> .

    (               shift and go to state 80
    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84
    >               reduce using rule 108 (empty -> .)
    <               reduce using rule 108 (empty -> .)
    MENORIGUAL      reduce using rule 108 (empty -> .)
    MAYORIGUAL      reduce using rule 108 (empty -> .)
    IGUALIGUAL      reduce using rule 108 (empty -> .)
    DIFERENTE       reduce using rule 108 (empty -> .)
    COOR            reduce using rule 108 (empty -> .)
    COAND           reduce using rule 108 (empty -> .)

    expresion                      shift and go to state 130
    varcte                         shift and go to state 79
    exp                            shift and go to state 85
    empty                          shift and go to state 81

state 87

    (41) asignacion -> ID opcionAsignacion valorAsig . ;

    ;               shift and go to state 131


state 88

    (46) valorAsig -> = . exp
    (68) exp -> . ( expresion )
    (69) exp -> . ( varcte operacion )
    (70) exp -> . varcte operacion
    (71) exp -> . varcte
    (72) exp -> . empty
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE
    (108) empty -> .

    (               shift and go to state 80
    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84
    ;               reduce using rule 108 (empty -> .)

    empty                          shift and go to state 81
    varcte                         shift and go to state 79
    exp                            shift and go to state 132

state 89

    (47) valorAsig -> empty .

    ;               reduce using rule 47 (valorAsig -> empty .)


state 90

    (43) opcionAsignacion -> [ CTI . ]
    (44) opcionAsignacion -> [ CTI . ] [ CTI ]

    ]               shift and go to state 133


state 91

    (58) condicion -> IF ( expresion . ) bloque
    (59) condicion -> IF ( expresion . ) bloque ELSE bloque

    )               shift and go to state 134


state 92

    (49) opcionesLectura -> [ . CTI ]
    (50) opcionesLectura -> [ . CTI ] [ CTI ]

    CTI             shift and go to state 135


state 93

    (48) lectura -> LEER ID opcionesLectura . ;

    ;               shift and go to state 136


state 94

    (51) opcionesLectura -> empty .

    ;               reduce using rule 51 (opcionesLectura -> empty .)


state 95

    (52) escritura -> DIBUJAR ( ID . pos color ) ;
    (86) pos -> . ( varcte , varcte )

    (               shift and go to state 137

    pos                            shift and go to state 138

state 96

    (107) opcionMue -> ABAJO ID . CTI ;

    CTI             shift and go to state 139


state 97

    (104) opcionMue -> IZQUIERDA ID . CTI ;

    CTI             shift and go to state 140


state 98

    (106) opcionMue -> ARRIBA ID . CTI ;

    CTI             shift and go to state 141


state 99

    (105) opcionMue -> DERECHA ID . CTI ;

    CTI             shift and go to state 142


state 100

    (10) vars -> tipo listaIDS ; masTipos .

    RETURN          reduce using rule 10 (vars -> tipo listaIDS ; masTipos .)
    ID              reduce using rule 10 (vars -> tipo listaIDS ; masTipos .)
    DIBUJAR         reduce using rule 10 (vars -> tipo listaIDS ; masTipos .)
    IF              reduce using rule 10 (vars -> tipo listaIDS ; masTipos .)
    LEER            reduce using rule 10 (vars -> tipo listaIDS ; masTipos .)
    WHILE           reduce using rule 10 (vars -> tipo listaIDS ; masTipos .)
    FOR             reduce using rule 10 (vars -> tipo listaIDS ; masTipos .)
    MUEVE           reduce using rule 10 (vars -> tipo listaIDS ; masTipos .)
    )               reduce using rule 10 (vars -> tipo listaIDS ; masTipos .)
    }               reduce using rule 10 (vars -> tipo listaIDS ; masTipos .)


state 101

    (11) masTipos -> vars .

    }               reduce using rule 11 (masTipos -> vars .)
    ID              reduce using rule 11 (masTipos -> vars .)
    DIBUJAR         reduce using rule 11 (masTipos -> vars .)
    IF              reduce using rule 11 (masTipos -> vars .)
    LEER            reduce using rule 11 (masTipos -> vars .)
    WHILE           reduce using rule 11 (masTipos -> vars .)
    FOR             reduce using rule 11 (masTipos -> vars .)
    MUEVE           reduce using rule 11 (masTipos -> vars .)
    RETURN          reduce using rule 11 (masTipos -> vars .)
    )               reduce using rule 11 (masTipos -> vars .)


state 102

    (12) masTipos -> empty .

    }               reduce using rule 12 (masTipos -> empty .)
    ID              reduce using rule 12 (masTipos -> empty .)
    DIBUJAR         reduce using rule 12 (masTipos -> empty .)
    IF              reduce using rule 12 (masTipos -> empty .)
    LEER            reduce using rule 12 (masTipos -> empty .)
    WHILE           reduce using rule 12 (masTipos -> empty .)
    FOR             reduce using rule 12 (masTipos -> empty .)
    MUEVE           reduce using rule 12 (masTipos -> empty .)
    RETURN          reduce using rule 12 (masTipos -> empty .)
    )               reduce using rule 12 (masTipos -> empty .)


state 103

    (14) masIDS -> , . ID guardarIDs

    ID              shift and go to state 143


state 104

    (9) vars -> tipo ID guardarIDs arreglo . ; masTipos

    ;               shift and go to state 144


state 105

    (16) arreglo -> [ . CTI ] matriz

    CTI             shift and go to state 145


state 106

    (8) vars -> tipo ID guardarIDs ; . masTipos
    (11) masTipos -> . vars
    (12) masTipos -> . empty
    (8) vars -> . tipo ID guardarIDs ; masTipos
    (9) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (10) vars -> . tipo listaIDS ; masTipos
    (108) empty -> .
    (94) tipo -> . ENTERO
    (95) tipo -> . DECIMAL
    (96) tipo -> . BOOL
    (97) tipo -> . VOID
    (98) tipo -> . CUADRADO
    (99) tipo -> . RECTANGULO
    (100) tipo -> . CIRCULO
    (101) tipo -> . LINEA
    (102) tipo -> . ESTRELLA

    }               reduce using rule 108 (empty -> .)
    ID              reduce using rule 108 (empty -> .)
    DIBUJAR         reduce using rule 108 (empty -> .)
    IF              reduce using rule 108 (empty -> .)
    LEER            reduce using rule 108 (empty -> .)
    WHILE           reduce using rule 108 (empty -> .)
    FOR             reduce using rule 108 (empty -> .)
    MUEVE           reduce using rule 108 (empty -> .)
    RETURN          reduce using rule 108 (empty -> .)
    )               reduce using rule 108 (empty -> .)
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 6
    BOOL            shift and go to state 11
    VOID            shift and go to state 9
    CUADRADO        shift and go to state 10
    RECTANGULO      shift and go to state 8
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 12
    ESTRELLA        shift and go to state 7

    masTipos                       shift and go to state 146
    tipo                           shift and go to state 24
    vars                           shift and go to state 101
    empty                          shift and go to state 102

state 107

    (13) listaIDS -> ID guardarIDs masIDS .

    ;               reduce using rule 13 (listaIDS -> ID guardarIDs masIDS .)


state 108

    (15) masIDS -> empty .

    ;               reduce using rule 15 (masIDS -> empty .)


state 109

    (22) listapaID -> ID guardarIDs . maspaID maspaTip
    (24) maspaID -> . , ID guardarIDs
    (25) maspaID -> . empty
    (108) empty -> .

    ,               shift and go to state 148
    ENTERO          reduce using rule 108 (empty -> .)
    DECIMAL         reduce using rule 108 (empty -> .)
    BOOL            reduce using rule 108 (empty -> .)
    VOID            reduce using rule 108 (empty -> .)
    CUADRADO        reduce using rule 108 (empty -> .)
    RECTANGULO      reduce using rule 108 (empty -> .)
    CIRCULO         reduce using rule 108 (empty -> .)
    LINEA           reduce using rule 108 (empty -> .)
    ESTRELLA        reduce using rule 108 (empty -> .)
    )               reduce using rule 108 (empty -> .)

    maspaID                        shift and go to state 147
    empty                          shift and go to state 149

state 110

    (28) bloquefunc -> { . vars estatuto regresa }
    (29) bloquefunc -> { . vars regresa }
    (30) bloquefunc -> { . escritura regresa }
    (31) bloquefunc -> { . }
    (8) vars -> . tipo ID guardarIDs ; masTipos
    (9) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (10) vars -> . tipo listaIDS ; masTipos
    (52) escritura -> . DIBUJAR ( ID pos color ) ;
    (53) escritura -> . mueve
    (94) tipo -> . ENTERO
    (95) tipo -> . DECIMAL
    (96) tipo -> . BOOL
    (97) tipo -> . VOID
    (98) tipo -> . CUADRADO
    (99) tipo -> . RECTANGULO
    (100) tipo -> . CIRCULO
    (101) tipo -> . LINEA
    (102) tipo -> . ESTRELLA
    (103) mueve -> . MUEVE opcionMue

    }               shift and go to state 151
    DIBUJAR         shift and go to state 39
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 6
    BOOL            shift and go to state 11
    VOID            shift and go to state 9
    CUADRADO        shift and go to state 10
    RECTANGULO      shift and go to state 8
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 12
    ESTRELLA        shift and go to state 7
    MUEVE           shift and go to state 40

    vars                           shift and go to state 150
    tipo                           shift and go to state 24
    mueve                          shift and go to state 29
    escritura                      shift and go to state 152

state 111

    (19) funcion -> FUNC tipo ID funcAgregar ( param ) bloquefunc .

    INICIO          reduce using rule 19 (funcion -> FUNC tipo ID funcAgregar ( param ) bloquefunc .)
    FUNC            reduce using rule 19 (funcion -> FUNC tipo ID funcAgregar ( param ) bloquefunc .)


state 112

    (82) factor -> varcte .

    *               reduce using rule 82 (factor -> varcte .)
    /               reduce using rule 82 (factor -> varcte .)
    +               reduce using rule 82 (factor -> varcte .)
    -               reduce using rule 82 (factor -> varcte .)
    >               reduce using rule 82 (factor -> varcte .)
    <               reduce using rule 82 (factor -> varcte .)
    MENORIGUAL      reduce using rule 82 (factor -> varcte .)
    MAYORIGUAL      reduce using rule 82 (factor -> varcte .)
    IGUALIGUAL      reduce using rule 82 (factor -> varcte .)
    DIFERENTE       reduce using rule 82 (factor -> varcte .)
    COOR            reduce using rule 82 (factor -> varcte .)
    COAND           reduce using rule 82 (factor -> varcte .)
    ;               reduce using rule 82 (factor -> varcte .)
    )               reduce using rule 82 (factor -> varcte .)


state 113

    (70) exp -> varcte operacion .

    )               reduce using rule 70 (exp -> varcte operacion .)
    ;               reduce using rule 70 (exp -> varcte operacion .)
    >               reduce using rule 70 (exp -> varcte operacion .)
    <               reduce using rule 70 (exp -> varcte operacion .)
    MENORIGUAL      reduce using rule 70 (exp -> varcte operacion .)
    MAYORIGUAL      reduce using rule 70 (exp -> varcte operacion .)
    IGUALIGUAL      reduce using rule 70 (exp -> varcte operacion .)
    DIFERENTE       reduce using rule 70 (exp -> varcte operacion .)
    COOR            reduce using rule 70 (exp -> varcte operacion .)
    COAND           reduce using rule 70 (exp -> varcte operacion .)


state 114

    (81) factor -> ( . expresion )
    (60) expresion -> . exp > exp
    (61) expresion -> . exp < exp
    (62) expresion -> . exp MENORIGUAL exp
    (63) expresion -> . exp MAYORIGUAL exp
    (64) expresion -> . exp IGUALIGUAL exp
    (65) expresion -> . exp DIFERENTE exp
    (66) expresion -> . exp COOR exp
    (67) expresion -> . exp COAND exp
    (68) exp -> . ( expresion )
    (69) exp -> . ( varcte operacion )
    (70) exp -> . varcte operacion
    (71) exp -> . varcte
    (72) exp -> . empty
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE
    (108) empty -> .

    (               shift and go to state 80
    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84
    >               reduce using rule 108 (empty -> .)
    <               reduce using rule 108 (empty -> .)
    MENORIGUAL      reduce using rule 108 (empty -> .)
    MAYORIGUAL      reduce using rule 108 (empty -> .)
    IGUALIGUAL      reduce using rule 108 (empty -> .)
    DIFERENTE       reduce using rule 108 (empty -> .)
    COOR            reduce using rule 108 (empty -> .)
    COAND           reduce using rule 108 (empty -> .)

    expresion                      shift and go to state 153
    empty                          shift and go to state 81
    varcte                         shift and go to state 79
    exp                            shift and go to state 85

state 115

    (83) factor -> + . varcte
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE

    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84

    varcte                         shift and go to state 154

state 116

    (84) factor -> - . varcte
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE

    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84

    varcte                         shift and go to state 155

state 117

    (73) operacion -> termino .
    (74) operacion -> termino . signo
    (75) signo -> . + exp
    (76) signo -> . - exp

    >               reduce using rule 73 (operacion -> termino .)
    <               reduce using rule 73 (operacion -> termino .)
    MENORIGUAL      reduce using rule 73 (operacion -> termino .)
    MAYORIGUAL      reduce using rule 73 (operacion -> termino .)
    IGUALIGUAL      reduce using rule 73 (operacion -> termino .)
    DIFERENTE       reduce using rule 73 (operacion -> termino .)
    COOR            reduce using rule 73 (operacion -> termino .)
    COAND           reduce using rule 73 (operacion -> termino .)
    ;               reduce using rule 73 (operacion -> termino .)
    )               reduce using rule 73 (operacion -> termino .)
    +               shift and go to state 156
    -               shift and go to state 158

    signo                          shift and go to state 157

state 118

    (77) termino -> factor .
    (78) termino -> factor . masop
    (79) masop -> . * termino
    (80) masop -> . / termino

    +               reduce using rule 77 (termino -> factor .)
    -               reduce using rule 77 (termino -> factor .)
    >               reduce using rule 77 (termino -> factor .)
    <               reduce using rule 77 (termino -> factor .)
    MENORIGUAL      reduce using rule 77 (termino -> factor .)
    MAYORIGUAL      reduce using rule 77 (termino -> factor .)
    IGUALIGUAL      reduce using rule 77 (termino -> factor .)
    DIFERENTE       reduce using rule 77 (termino -> factor .)
    COOR            reduce using rule 77 (termino -> factor .)
    COAND           reduce using rule 77 (termino -> factor .)
    ;               reduce using rule 77 (termino -> factor .)
    )               reduce using rule 77 (termino -> factor .)
    *               shift and go to state 160
    /               shift and go to state 161

    masop                          shift and go to state 159

state 119

    (68) exp -> ( expresion . )

    )               shift and go to state 162


state 120

    (69) exp -> ( varcte . operacion )
    (70) exp -> varcte . operacion
    (71) exp -> varcte .
    (73) operacion -> . termino
    (74) operacion -> . termino signo
    (77) termino -> . factor
    (78) termino -> . factor masop
    (81) factor -> . ( expresion )
    (82) factor -> . varcte
    (83) factor -> . + varcte
    (84) factor -> . - varcte
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE

    >               reduce using rule 71 (exp -> varcte .)
    <               reduce using rule 71 (exp -> varcte .)
    MENORIGUAL      reduce using rule 71 (exp -> varcte .)
    MAYORIGUAL      reduce using rule 71 (exp -> varcte .)
    IGUALIGUAL      reduce using rule 71 (exp -> varcte .)
    DIFERENTE       reduce using rule 71 (exp -> varcte .)
    COOR            reduce using rule 71 (exp -> varcte .)
    COAND           reduce using rule 71 (exp -> varcte .)
    (               shift and go to state 114
    +               shift and go to state 115
    -               shift and go to state 116
    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84

    varcte                         shift and go to state 112
    operacion                      shift and go to state 163
    termino                        shift and go to state 117
    factor                         shift and go to state 118

state 121

    (87) whiles -> WHILE ( expresion ) . bloque
    (5) bloque -> . { vars estatuto }
    (6) bloque -> . { vars }
    (7) bloque -> . { }

    {               shift and go to state 20

    bloque                         shift and go to state 164

state 122

    (66) expresion -> exp COOR . exp
    (68) exp -> . ( expresion )
    (69) exp -> . ( varcte operacion )
    (70) exp -> . varcte operacion
    (71) exp -> . varcte
    (72) exp -> . empty
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE
    (108) empty -> .

    (               shift and go to state 80
    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84
    )               reduce using rule 108 (empty -> .)
    ;               reduce using rule 108 (empty -> .)

    empty                          shift and go to state 81
    varcte                         shift and go to state 79
    exp                            shift and go to state 165

state 123

    (67) expresion -> exp COAND . exp
    (68) exp -> . ( expresion )
    (69) exp -> . ( varcte operacion )
    (70) exp -> . varcte operacion
    (71) exp -> . varcte
    (72) exp -> . empty
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE
    (108) empty -> .

    (               shift and go to state 80
    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84
    )               reduce using rule 108 (empty -> .)
    ;               reduce using rule 108 (empty -> .)

    empty                          shift and go to state 81
    varcte                         shift and go to state 79
    exp                            shift and go to state 166

state 124

    (64) expresion -> exp IGUALIGUAL . exp
    (68) exp -> . ( expresion )
    (69) exp -> . ( varcte operacion )
    (70) exp -> . varcte operacion
    (71) exp -> . varcte
    (72) exp -> . empty
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE
    (108) empty -> .

    (               shift and go to state 80
    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84
    )               reduce using rule 108 (empty -> .)
    ;               reduce using rule 108 (empty -> .)

    empty                          shift and go to state 81
    varcte                         shift and go to state 79
    exp                            shift and go to state 167

state 125

    (65) expresion -> exp DIFERENTE . exp
    (68) exp -> . ( expresion )
    (69) exp -> . ( varcte operacion )
    (70) exp -> . varcte operacion
    (71) exp -> . varcte
    (72) exp -> . empty
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE
    (108) empty -> .

    (               shift and go to state 80
    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84
    )               reduce using rule 108 (empty -> .)
    ;               reduce using rule 108 (empty -> .)

    empty                          shift and go to state 81
    varcte                         shift and go to state 79
    exp                            shift and go to state 168

state 126

    (63) expresion -> exp MAYORIGUAL . exp
    (68) exp -> . ( expresion )
    (69) exp -> . ( varcte operacion )
    (70) exp -> . varcte operacion
    (71) exp -> . varcte
    (72) exp -> . empty
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE
    (108) empty -> .

    (               shift and go to state 80
    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84
    )               reduce using rule 108 (empty -> .)
    ;               reduce using rule 108 (empty -> .)

    empty                          shift and go to state 81
    varcte                         shift and go to state 79
    exp                            shift and go to state 169

state 127

    (62) expresion -> exp MENORIGUAL . exp
    (68) exp -> . ( expresion )
    (69) exp -> . ( varcte operacion )
    (70) exp -> . varcte operacion
    (71) exp -> . varcte
    (72) exp -> . empty
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE
    (108) empty -> .

    (               shift and go to state 80
    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84
    )               reduce using rule 108 (empty -> .)
    ;               reduce using rule 108 (empty -> .)

    empty                          shift and go to state 81
    varcte                         shift and go to state 79
    exp                            shift and go to state 170

state 128

    (61) expresion -> exp < . exp
    (68) exp -> . ( expresion )
    (69) exp -> . ( varcte operacion )
    (70) exp -> . varcte operacion
    (71) exp -> . varcte
    (72) exp -> . empty
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE
    (108) empty -> .

    (               shift and go to state 80
    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84
    )               reduce using rule 108 (empty -> .)
    ;               reduce using rule 108 (empty -> .)

    empty                          shift and go to state 81
    varcte                         shift and go to state 79
    exp                            shift and go to state 171

state 129

    (60) expresion -> exp > . exp
    (68) exp -> . ( expresion )
    (69) exp -> . ( varcte operacion )
    (70) exp -> . varcte operacion
    (71) exp -> . varcte
    (72) exp -> . empty
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE
    (108) empty -> .

    (               shift and go to state 80
    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84
    )               reduce using rule 108 (empty -> .)
    ;               reduce using rule 108 (empty -> .)

    empty                          shift and go to state 81
    varcte                         shift and go to state 79
    exp                            shift and go to state 172

state 130

    (85) fors -> FOR ( asignacion expresion . ; asignacion ) bloque

    ;               shift and go to state 173


state 131

    (41) asignacion -> ID opcionAsignacion valorAsig ; .

    ID              reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    DIBUJAR         reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    IF              reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    LEER            reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    WHILE           reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    FOR             reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    MUEVE           reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    }               reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    RETURN          reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    )               reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    (               reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    CTF             reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    CTI             reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    CTS             reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    TRUE            reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    FALSE           reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    >               reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    <               reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    MENORIGUAL      reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    MAYORIGUAL      reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    IGUALIGUAL      reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    DIFERENTE       reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    COOR            reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)
    COAND           reduce using rule 41 (asignacion -> ID opcionAsignacion valorAsig ; .)


state 132

    (46) valorAsig -> = exp .

    ;               reduce using rule 46 (valorAsig -> = exp .)


state 133

    (43) opcionAsignacion -> [ CTI ] .
    (44) opcionAsignacion -> [ CTI ] . [ CTI ]

    =               reduce using rule 43 (opcionAsignacion -> [ CTI ] .)
    ;               reduce using rule 43 (opcionAsignacion -> [ CTI ] .)
    [               shift and go to state 174


state 134

    (58) condicion -> IF ( expresion ) . bloque
    (59) condicion -> IF ( expresion ) . bloque ELSE bloque
    (5) bloque -> . { vars estatuto }
    (6) bloque -> . { vars }
    (7) bloque -> . { }

    {               shift and go to state 20

    bloque                         shift and go to state 175

state 135

    (49) opcionesLectura -> [ CTI . ]
    (50) opcionesLectura -> [ CTI . ] [ CTI ]

    ]               shift and go to state 176


state 136

    (48) lectura -> LEER ID opcionesLectura ; .

    ID              reduce using rule 48 (lectura -> LEER ID opcionesLectura ; .)
    DIBUJAR         reduce using rule 48 (lectura -> LEER ID opcionesLectura ; .)
    IF              reduce using rule 48 (lectura -> LEER ID opcionesLectura ; .)
    LEER            reduce using rule 48 (lectura -> LEER ID opcionesLectura ; .)
    WHILE           reduce using rule 48 (lectura -> LEER ID opcionesLectura ; .)
    FOR             reduce using rule 48 (lectura -> LEER ID opcionesLectura ; .)
    MUEVE           reduce using rule 48 (lectura -> LEER ID opcionesLectura ; .)
    }               reduce using rule 48 (lectura -> LEER ID opcionesLectura ; .)
    RETURN          reduce using rule 48 (lectura -> LEER ID opcionesLectura ; .)


state 137

    (86) pos -> ( . varcte , varcte )
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE

    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84

    varcte                         shift and go to state 177

state 138

    (52) escritura -> DIBUJAR ( ID pos . color ) ;
    (54) color -> . AMARILLO
    (55) color -> . VERDE
    (56) color -> . ROJO
    (57) color -> . AZUL

    AMARILLO        shift and go to state 180
    VERDE           shift and go to state 182
    ROJO            shift and go to state 178
    AZUL            shift and go to state 181

    color                          shift and go to state 179

state 139

    (107) opcionMue -> ABAJO ID CTI . ;

    ;               shift and go to state 183


state 140

    (104) opcionMue -> IZQUIERDA ID CTI . ;

    ;               shift and go to state 184


state 141

    (106) opcionMue -> ARRIBA ID CTI . ;

    ;               shift and go to state 185


state 142

    (105) opcionMue -> DERECHA ID CTI . ;

    ;               shift and go to state 186


state 143

    (14) masIDS -> , ID . guardarIDs
    (23) guardarIDs -> .

    ;               reduce using rule 23 (guardarIDs -> .)

    guardarIDs                     shift and go to state 187

state 144

    (9) vars -> tipo ID guardarIDs arreglo ; . masTipos
    (11) masTipos -> . vars
    (12) masTipos -> . empty
    (8) vars -> . tipo ID guardarIDs ; masTipos
    (9) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (10) vars -> . tipo listaIDS ; masTipos
    (108) empty -> .
    (94) tipo -> . ENTERO
    (95) tipo -> . DECIMAL
    (96) tipo -> . BOOL
    (97) tipo -> . VOID
    (98) tipo -> . CUADRADO
    (99) tipo -> . RECTANGULO
    (100) tipo -> . CIRCULO
    (101) tipo -> . LINEA
    (102) tipo -> . ESTRELLA

    }               reduce using rule 108 (empty -> .)
    ID              reduce using rule 108 (empty -> .)
    DIBUJAR         reduce using rule 108 (empty -> .)
    IF              reduce using rule 108 (empty -> .)
    LEER            reduce using rule 108 (empty -> .)
    WHILE           reduce using rule 108 (empty -> .)
    FOR             reduce using rule 108 (empty -> .)
    MUEVE           reduce using rule 108 (empty -> .)
    RETURN          reduce using rule 108 (empty -> .)
    )               reduce using rule 108 (empty -> .)
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 6
    BOOL            shift and go to state 11
    VOID            shift and go to state 9
    CUADRADO        shift and go to state 10
    RECTANGULO      shift and go to state 8
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 12
    ESTRELLA        shift and go to state 7

    masTipos                       shift and go to state 188
    tipo                           shift and go to state 24
    vars                           shift and go to state 101
    empty                          shift and go to state 102

state 145

    (16) arreglo -> [ CTI . ] matriz

    ]               shift and go to state 189


state 146

    (8) vars -> tipo ID guardarIDs ; masTipos .

    RETURN          reduce using rule 8 (vars -> tipo ID guardarIDs ; masTipos .)
    ID              reduce using rule 8 (vars -> tipo ID guardarIDs ; masTipos .)
    DIBUJAR         reduce using rule 8 (vars -> tipo ID guardarIDs ; masTipos .)
    IF              reduce using rule 8 (vars -> tipo ID guardarIDs ; masTipos .)
    LEER            reduce using rule 8 (vars -> tipo ID guardarIDs ; masTipos .)
    WHILE           reduce using rule 8 (vars -> tipo ID guardarIDs ; masTipos .)
    FOR             reduce using rule 8 (vars -> tipo ID guardarIDs ; masTipos .)
    MUEVE           reduce using rule 8 (vars -> tipo ID guardarIDs ; masTipos .)
    )               reduce using rule 8 (vars -> tipo ID guardarIDs ; masTipos .)
    }               reduce using rule 8 (vars -> tipo ID guardarIDs ; masTipos .)


state 147

    (22) listapaID -> ID guardarIDs maspaID . maspaTip
    (26) maspaTip -> . vars
    (27) maspaTip -> . empty
    (8) vars -> . tipo ID guardarIDs ; masTipos
    (9) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (10) vars -> . tipo listaIDS ; masTipos
    (108) empty -> .
    (94) tipo -> . ENTERO
    (95) tipo -> . DECIMAL
    (96) tipo -> . BOOL
    (97) tipo -> . VOID
    (98) tipo -> . CUADRADO
    (99) tipo -> . RECTANGULO
    (100) tipo -> . CIRCULO
    (101) tipo -> . LINEA
    (102) tipo -> . ESTRELLA

    )               reduce using rule 108 (empty -> .)
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 6
    BOOL            shift and go to state 11
    VOID            shift and go to state 9
    CUADRADO        shift and go to state 10
    RECTANGULO      shift and go to state 8
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 12
    ESTRELLA        shift and go to state 7

    vars                           shift and go to state 190
    tipo                           shift and go to state 24
    maspaTip                       shift and go to state 191
    empty                          shift and go to state 192

state 148

    (24) maspaID -> , . ID guardarIDs

    ID              shift and go to state 193


state 149

    (25) maspaID -> empty .

    ENTERO          reduce using rule 25 (maspaID -> empty .)
    DECIMAL         reduce using rule 25 (maspaID -> empty .)
    BOOL            reduce using rule 25 (maspaID -> empty .)
    VOID            reduce using rule 25 (maspaID -> empty .)
    CUADRADO        reduce using rule 25 (maspaID -> empty .)
    RECTANGULO      reduce using rule 25 (maspaID -> empty .)
    CIRCULO         reduce using rule 25 (maspaID -> empty .)
    LINEA           reduce using rule 25 (maspaID -> empty .)
    ESTRELLA        reduce using rule 25 (maspaID -> empty .)
    )               reduce using rule 25 (maspaID -> empty .)


state 150

    (28) bloquefunc -> { vars . estatuto regresa }
    (29) bloquefunc -> { vars . regresa }
    (33) estatuto -> . asignacion estatutoAux
    (34) estatuto -> . escritura estatutoAux
    (35) estatuto -> . condicion estatutoAux
    (36) estatuto -> . lectura estatutoAux
    (37) estatuto -> . whiles estatutoAux
    (38) estatuto -> . fors estatutoAux
    (32) regresa -> . RETURN ID
    (41) asignacion -> . ID opcionAsignacion valorAsig ;
    (42) asignacion -> . ID ;
    (52) escritura -> . DIBUJAR ( ID pos color ) ;
    (53) escritura -> . mueve
    (58) condicion -> . IF ( expresion ) bloque
    (59) condicion -> . IF ( expresion ) bloque ELSE bloque
    (48) lectura -> . LEER ID opcionesLectura ;
    (87) whiles -> . WHILE ( expresion ) bloque
    (85) fors -> . FOR ( asignacion expresion ; asignacion ) bloque
    (103) mueve -> . MUEVE opcionMue

    RETURN          shift and go to state 194
    ID              shift and go to state 35
    DIBUJAR         shift and go to state 39
    IF              shift and go to state 36
    LEER            shift and go to state 37
    WHILE           shift and go to state 27
    FOR             shift and go to state 32
    MUEVE           shift and go to state 40

    asignacion                     shift and go to state 38
    mueve                          shift and go to state 29
    regresa                        shift and go to state 196
    estatuto                       shift and go to state 195
    whiles                         shift and go to state 33
    condicion                      shift and go to state 30
    fors                           shift and go to state 34
    lectura                        shift and go to state 31
    escritura                      shift and go to state 42

state 151

    (31) bloquefunc -> { } .

    INICIO          reduce using rule 31 (bloquefunc -> { } .)
    FUNC            reduce using rule 31 (bloquefunc -> { } .)


state 152

    (30) bloquefunc -> { escritura . regresa }
    (32) regresa -> . RETURN ID

    RETURN          shift and go to state 194

    regresa                        shift and go to state 197

state 153

    (81) factor -> ( expresion . )

    )               shift and go to state 198


state 154

    (83) factor -> + varcte .

    *               reduce using rule 83 (factor -> + varcte .)
    /               reduce using rule 83 (factor -> + varcte .)
    +               reduce using rule 83 (factor -> + varcte .)
    -               reduce using rule 83 (factor -> + varcte .)
    >               reduce using rule 83 (factor -> + varcte .)
    <               reduce using rule 83 (factor -> + varcte .)
    MENORIGUAL      reduce using rule 83 (factor -> + varcte .)
    MAYORIGUAL      reduce using rule 83 (factor -> + varcte .)
    IGUALIGUAL      reduce using rule 83 (factor -> + varcte .)
    DIFERENTE       reduce using rule 83 (factor -> + varcte .)
    COOR            reduce using rule 83 (factor -> + varcte .)
    COAND           reduce using rule 83 (factor -> + varcte .)
    ;               reduce using rule 83 (factor -> + varcte .)
    )               reduce using rule 83 (factor -> + varcte .)


state 155

    (84) factor -> - varcte .

    *               reduce using rule 84 (factor -> - varcte .)
    /               reduce using rule 84 (factor -> - varcte .)
    +               reduce using rule 84 (factor -> - varcte .)
    -               reduce using rule 84 (factor -> - varcte .)
    >               reduce using rule 84 (factor -> - varcte .)
    <               reduce using rule 84 (factor -> - varcte .)
    MENORIGUAL      reduce using rule 84 (factor -> - varcte .)
    MAYORIGUAL      reduce using rule 84 (factor -> - varcte .)
    IGUALIGUAL      reduce using rule 84 (factor -> - varcte .)
    DIFERENTE       reduce using rule 84 (factor -> - varcte .)
    COOR            reduce using rule 84 (factor -> - varcte .)
    COAND           reduce using rule 84 (factor -> - varcte .)
    ;               reduce using rule 84 (factor -> - varcte .)
    )               reduce using rule 84 (factor -> - varcte .)


state 156

    (75) signo -> + . exp
    (68) exp -> . ( expresion )
    (69) exp -> . ( varcte operacion )
    (70) exp -> . varcte operacion
    (71) exp -> . varcte
    (72) exp -> . empty
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE
    (108) empty -> .

    (               shift and go to state 80
    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84
    >               reduce using rule 108 (empty -> .)
    <               reduce using rule 108 (empty -> .)
    MENORIGUAL      reduce using rule 108 (empty -> .)
    MAYORIGUAL      reduce using rule 108 (empty -> .)
    IGUALIGUAL      reduce using rule 108 (empty -> .)
    DIFERENTE       reduce using rule 108 (empty -> .)
    COOR            reduce using rule 108 (empty -> .)
    COAND           reduce using rule 108 (empty -> .)
    ;               reduce using rule 108 (empty -> .)
    )               reduce using rule 108 (empty -> .)

    empty                          shift and go to state 81
    varcte                         shift and go to state 79
    exp                            shift and go to state 199

state 157

    (74) operacion -> termino signo .

    >               reduce using rule 74 (operacion -> termino signo .)
    <               reduce using rule 74 (operacion -> termino signo .)
    MENORIGUAL      reduce using rule 74 (operacion -> termino signo .)
    MAYORIGUAL      reduce using rule 74 (operacion -> termino signo .)
    IGUALIGUAL      reduce using rule 74 (operacion -> termino signo .)
    DIFERENTE       reduce using rule 74 (operacion -> termino signo .)
    COOR            reduce using rule 74 (operacion -> termino signo .)
    COAND           reduce using rule 74 (operacion -> termino signo .)
    ;               reduce using rule 74 (operacion -> termino signo .)
    )               reduce using rule 74 (operacion -> termino signo .)


state 158

    (76) signo -> - . exp
    (68) exp -> . ( expresion )
    (69) exp -> . ( varcte operacion )
    (70) exp -> . varcte operacion
    (71) exp -> . varcte
    (72) exp -> . empty
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE
    (108) empty -> .

    (               shift and go to state 80
    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84
    >               reduce using rule 108 (empty -> .)
    <               reduce using rule 108 (empty -> .)
    MENORIGUAL      reduce using rule 108 (empty -> .)
    MAYORIGUAL      reduce using rule 108 (empty -> .)
    IGUALIGUAL      reduce using rule 108 (empty -> .)
    DIFERENTE       reduce using rule 108 (empty -> .)
    COOR            reduce using rule 108 (empty -> .)
    COAND           reduce using rule 108 (empty -> .)
    ;               reduce using rule 108 (empty -> .)
    )               reduce using rule 108 (empty -> .)

    empty                          shift and go to state 81
    varcte                         shift and go to state 79
    exp                            shift and go to state 200

state 159

    (78) termino -> factor masop .

    +               reduce using rule 78 (termino -> factor masop .)
    -               reduce using rule 78 (termino -> factor masop .)
    >               reduce using rule 78 (termino -> factor masop .)
    <               reduce using rule 78 (termino -> factor masop .)
    MENORIGUAL      reduce using rule 78 (termino -> factor masop .)
    MAYORIGUAL      reduce using rule 78 (termino -> factor masop .)
    IGUALIGUAL      reduce using rule 78 (termino -> factor masop .)
    DIFERENTE       reduce using rule 78 (termino -> factor masop .)
    COOR            reduce using rule 78 (termino -> factor masop .)
    COAND           reduce using rule 78 (termino -> factor masop .)
    ;               reduce using rule 78 (termino -> factor masop .)
    )               reduce using rule 78 (termino -> factor masop .)


state 160

    (79) masop -> * . termino
    (77) termino -> . factor
    (78) termino -> . factor masop
    (81) factor -> . ( expresion )
    (82) factor -> . varcte
    (83) factor -> . + varcte
    (84) factor -> . - varcte
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE

    (               shift and go to state 114
    +               shift and go to state 115
    -               shift and go to state 116
    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84

    termino                        shift and go to state 201
    varcte                         shift and go to state 112
    factor                         shift and go to state 118

state 161

    (80) masop -> / . termino
    (77) termino -> . factor
    (78) termino -> . factor masop
    (81) factor -> . ( expresion )
    (82) factor -> . varcte
    (83) factor -> . + varcte
    (84) factor -> . - varcte
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE

    (               shift and go to state 114
    +               shift and go to state 115
    -               shift and go to state 116
    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84

    termino                        shift and go to state 202
    varcte                         shift and go to state 112
    factor                         shift and go to state 118

state 162

    (68) exp -> ( expresion ) .

    )               reduce using rule 68 (exp -> ( expresion ) .)
    ;               reduce using rule 68 (exp -> ( expresion ) .)
    >               reduce using rule 68 (exp -> ( expresion ) .)
    <               reduce using rule 68 (exp -> ( expresion ) .)
    MENORIGUAL      reduce using rule 68 (exp -> ( expresion ) .)
    MAYORIGUAL      reduce using rule 68 (exp -> ( expresion ) .)
    IGUALIGUAL      reduce using rule 68 (exp -> ( expresion ) .)
    DIFERENTE       reduce using rule 68 (exp -> ( expresion ) .)
    COOR            reduce using rule 68 (exp -> ( expresion ) .)
    COAND           reduce using rule 68 (exp -> ( expresion ) .)


state 163

    (69) exp -> ( varcte operacion . )
    (70) exp -> varcte operacion .

    )               shift and go to state 203
    >               reduce using rule 70 (exp -> varcte operacion .)
    <               reduce using rule 70 (exp -> varcte operacion .)
    MENORIGUAL      reduce using rule 70 (exp -> varcte operacion .)
    MAYORIGUAL      reduce using rule 70 (exp -> varcte operacion .)
    IGUALIGUAL      reduce using rule 70 (exp -> varcte operacion .)
    DIFERENTE       reduce using rule 70 (exp -> varcte operacion .)
    COOR            reduce using rule 70 (exp -> varcte operacion .)
    COAND           reduce using rule 70 (exp -> varcte operacion .)


state 164

    (87) whiles -> WHILE ( expresion ) bloque .

    ID              reduce using rule 87 (whiles -> WHILE ( expresion ) bloque .)
    DIBUJAR         reduce using rule 87 (whiles -> WHILE ( expresion ) bloque .)
    IF              reduce using rule 87 (whiles -> WHILE ( expresion ) bloque .)
    LEER            reduce using rule 87 (whiles -> WHILE ( expresion ) bloque .)
    WHILE           reduce using rule 87 (whiles -> WHILE ( expresion ) bloque .)
    FOR             reduce using rule 87 (whiles -> WHILE ( expresion ) bloque .)
    MUEVE           reduce using rule 87 (whiles -> WHILE ( expresion ) bloque .)
    }               reduce using rule 87 (whiles -> WHILE ( expresion ) bloque .)
    RETURN          reduce using rule 87 (whiles -> WHILE ( expresion ) bloque .)


state 165

    (66) expresion -> exp COOR exp .

    )               reduce using rule 66 (expresion -> exp COOR exp .)
    ;               reduce using rule 66 (expresion -> exp COOR exp .)


state 166

    (67) expresion -> exp COAND exp .

    )               reduce using rule 67 (expresion -> exp COAND exp .)
    ;               reduce using rule 67 (expresion -> exp COAND exp .)


state 167

    (64) expresion -> exp IGUALIGUAL exp .

    )               reduce using rule 64 (expresion -> exp IGUALIGUAL exp .)
    ;               reduce using rule 64 (expresion -> exp IGUALIGUAL exp .)


state 168

    (65) expresion -> exp DIFERENTE exp .

    )               reduce using rule 65 (expresion -> exp DIFERENTE exp .)
    ;               reduce using rule 65 (expresion -> exp DIFERENTE exp .)


state 169

    (63) expresion -> exp MAYORIGUAL exp .

    )               reduce using rule 63 (expresion -> exp MAYORIGUAL exp .)
    ;               reduce using rule 63 (expresion -> exp MAYORIGUAL exp .)


state 170

    (62) expresion -> exp MENORIGUAL exp .

    )               reduce using rule 62 (expresion -> exp MENORIGUAL exp .)
    ;               reduce using rule 62 (expresion -> exp MENORIGUAL exp .)


state 171

    (61) expresion -> exp < exp .

    )               reduce using rule 61 (expresion -> exp < exp .)
    ;               reduce using rule 61 (expresion -> exp < exp .)


state 172

    (60) expresion -> exp > exp .

    )               reduce using rule 60 (expresion -> exp > exp .)
    ;               reduce using rule 60 (expresion -> exp > exp .)


state 173

    (85) fors -> FOR ( asignacion expresion ; . asignacion ) bloque
    (41) asignacion -> . ID opcionAsignacion valorAsig ;
    (42) asignacion -> . ID ;

    ID              shift and go to state 35

    asignacion                     shift and go to state 204

state 174

    (44) opcionAsignacion -> [ CTI ] [ . CTI ]

    CTI             shift and go to state 205


state 175

    (58) condicion -> IF ( expresion ) bloque .
    (59) condicion -> IF ( expresion ) bloque . ELSE bloque

    ID              reduce using rule 58 (condicion -> IF ( expresion ) bloque .)
    DIBUJAR         reduce using rule 58 (condicion -> IF ( expresion ) bloque .)
    IF              reduce using rule 58 (condicion -> IF ( expresion ) bloque .)
    LEER            reduce using rule 58 (condicion -> IF ( expresion ) bloque .)
    WHILE           reduce using rule 58 (condicion -> IF ( expresion ) bloque .)
    FOR             reduce using rule 58 (condicion -> IF ( expresion ) bloque .)
    MUEVE           reduce using rule 58 (condicion -> IF ( expresion ) bloque .)
    }               reduce using rule 58 (condicion -> IF ( expresion ) bloque .)
    RETURN          reduce using rule 58 (condicion -> IF ( expresion ) bloque .)
    ELSE            shift and go to state 206


state 176

    (49) opcionesLectura -> [ CTI ] .
    (50) opcionesLectura -> [ CTI ] . [ CTI ]

    ;               reduce using rule 49 (opcionesLectura -> [ CTI ] .)
    [               shift and go to state 207


state 177

    (86) pos -> ( varcte . , varcte )

    ,               shift and go to state 208


state 178

    (56) color -> ROJO .

    )               reduce using rule 56 (color -> ROJO .)


state 179

    (52) escritura -> DIBUJAR ( ID pos color . ) ;

    )               shift and go to state 209


state 180

    (54) color -> AMARILLO .

    )               reduce using rule 54 (color -> AMARILLO .)


state 181

    (57) color -> AZUL .

    )               reduce using rule 57 (color -> AZUL .)


state 182

    (55) color -> VERDE .

    )               reduce using rule 55 (color -> VERDE .)


state 183

    (107) opcionMue -> ABAJO ID CTI ; .

    ID              reduce using rule 107 (opcionMue -> ABAJO ID CTI ; .)
    DIBUJAR         reduce using rule 107 (opcionMue -> ABAJO ID CTI ; .)
    IF              reduce using rule 107 (opcionMue -> ABAJO ID CTI ; .)
    LEER            reduce using rule 107 (opcionMue -> ABAJO ID CTI ; .)
    WHILE           reduce using rule 107 (opcionMue -> ABAJO ID CTI ; .)
    FOR             reduce using rule 107 (opcionMue -> ABAJO ID CTI ; .)
    MUEVE           reduce using rule 107 (opcionMue -> ABAJO ID CTI ; .)
    }               reduce using rule 107 (opcionMue -> ABAJO ID CTI ; .)
    RETURN          reduce using rule 107 (opcionMue -> ABAJO ID CTI ; .)


state 184

    (104) opcionMue -> IZQUIERDA ID CTI ; .

    ID              reduce using rule 104 (opcionMue -> IZQUIERDA ID CTI ; .)
    DIBUJAR         reduce using rule 104 (opcionMue -> IZQUIERDA ID CTI ; .)
    IF              reduce using rule 104 (opcionMue -> IZQUIERDA ID CTI ; .)
    LEER            reduce using rule 104 (opcionMue -> IZQUIERDA ID CTI ; .)
    WHILE           reduce using rule 104 (opcionMue -> IZQUIERDA ID CTI ; .)
    FOR             reduce using rule 104 (opcionMue -> IZQUIERDA ID CTI ; .)
    MUEVE           reduce using rule 104 (opcionMue -> IZQUIERDA ID CTI ; .)
    }               reduce using rule 104 (opcionMue -> IZQUIERDA ID CTI ; .)
    RETURN          reduce using rule 104 (opcionMue -> IZQUIERDA ID CTI ; .)


state 185

    (106) opcionMue -> ARRIBA ID CTI ; .

    ID              reduce using rule 106 (opcionMue -> ARRIBA ID CTI ; .)
    DIBUJAR         reduce using rule 106 (opcionMue -> ARRIBA ID CTI ; .)
    IF              reduce using rule 106 (opcionMue -> ARRIBA ID CTI ; .)
    LEER            reduce using rule 106 (opcionMue -> ARRIBA ID CTI ; .)
    WHILE           reduce using rule 106 (opcionMue -> ARRIBA ID CTI ; .)
    FOR             reduce using rule 106 (opcionMue -> ARRIBA ID CTI ; .)
    MUEVE           reduce using rule 106 (opcionMue -> ARRIBA ID CTI ; .)
    }               reduce using rule 106 (opcionMue -> ARRIBA ID CTI ; .)
    RETURN          reduce using rule 106 (opcionMue -> ARRIBA ID CTI ; .)


state 186

    (105) opcionMue -> DERECHA ID CTI ; .

    ID              reduce using rule 105 (opcionMue -> DERECHA ID CTI ; .)
    DIBUJAR         reduce using rule 105 (opcionMue -> DERECHA ID CTI ; .)
    IF              reduce using rule 105 (opcionMue -> DERECHA ID CTI ; .)
    LEER            reduce using rule 105 (opcionMue -> DERECHA ID CTI ; .)
    WHILE           reduce using rule 105 (opcionMue -> DERECHA ID CTI ; .)
    FOR             reduce using rule 105 (opcionMue -> DERECHA ID CTI ; .)
    MUEVE           reduce using rule 105 (opcionMue -> DERECHA ID CTI ; .)
    }               reduce using rule 105 (opcionMue -> DERECHA ID CTI ; .)
    RETURN          reduce using rule 105 (opcionMue -> DERECHA ID CTI ; .)


state 187

    (14) masIDS -> , ID guardarIDs .

    ;               reduce using rule 14 (masIDS -> , ID guardarIDs .)


state 188

    (9) vars -> tipo ID guardarIDs arreglo ; masTipos .

    RETURN          reduce using rule 9 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    ID              reduce using rule 9 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    DIBUJAR         reduce using rule 9 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    IF              reduce using rule 9 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    LEER            reduce using rule 9 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    WHILE           reduce using rule 9 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    FOR             reduce using rule 9 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    MUEVE           reduce using rule 9 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    )               reduce using rule 9 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    }               reduce using rule 9 (vars -> tipo ID guardarIDs arreglo ; masTipos .)


state 189

    (16) arreglo -> [ CTI ] . matriz
    (17) matriz -> . [ CTI ]
    (18) matriz -> . empty
    (108) empty -> .

    [               shift and go to state 210
    ;               reduce using rule 108 (empty -> .)

    empty                          shift and go to state 211
    matriz                         shift and go to state 212

state 190

    (26) maspaTip -> vars .

    )               reduce using rule 26 (maspaTip -> vars .)


state 191

    (22) listapaID -> ID guardarIDs maspaID maspaTip .

    )               reduce using rule 22 (listapaID -> ID guardarIDs maspaID maspaTip .)


state 192

    (27) maspaTip -> empty .

    )               reduce using rule 27 (maspaTip -> empty .)


state 193

    (24) maspaID -> , ID . guardarIDs
    (23) guardarIDs -> .

    ENTERO          reduce using rule 23 (guardarIDs -> .)
    DECIMAL         reduce using rule 23 (guardarIDs -> .)
    BOOL            reduce using rule 23 (guardarIDs -> .)
    VOID            reduce using rule 23 (guardarIDs -> .)
    CUADRADO        reduce using rule 23 (guardarIDs -> .)
    RECTANGULO      reduce using rule 23 (guardarIDs -> .)
    CIRCULO         reduce using rule 23 (guardarIDs -> .)
    LINEA           reduce using rule 23 (guardarIDs -> .)
    ESTRELLA        reduce using rule 23 (guardarIDs -> .)
    )               reduce using rule 23 (guardarIDs -> .)

    guardarIDs                     shift and go to state 213

state 194

    (32) regresa -> RETURN . ID

    ID              shift and go to state 214


state 195

    (28) bloquefunc -> { vars estatuto . regresa }
    (32) regresa -> . RETURN ID

    RETURN          shift and go to state 194

    regresa                        shift and go to state 215

state 196

    (29) bloquefunc -> { vars regresa . }

    }               shift and go to state 216


state 197

    (30) bloquefunc -> { escritura regresa . }

    }               shift and go to state 217


state 198

    (81) factor -> ( expresion ) .

    *               reduce using rule 81 (factor -> ( expresion ) .)
    /               reduce using rule 81 (factor -> ( expresion ) .)
    +               reduce using rule 81 (factor -> ( expresion ) .)
    -               reduce using rule 81 (factor -> ( expresion ) .)
    >               reduce using rule 81 (factor -> ( expresion ) .)
    <               reduce using rule 81 (factor -> ( expresion ) .)
    MENORIGUAL      reduce using rule 81 (factor -> ( expresion ) .)
    MAYORIGUAL      reduce using rule 81 (factor -> ( expresion ) .)
    IGUALIGUAL      reduce using rule 81 (factor -> ( expresion ) .)
    DIFERENTE       reduce using rule 81 (factor -> ( expresion ) .)
    COOR            reduce using rule 81 (factor -> ( expresion ) .)
    COAND           reduce using rule 81 (factor -> ( expresion ) .)
    ;               reduce using rule 81 (factor -> ( expresion ) .)
    )               reduce using rule 81 (factor -> ( expresion ) .)


state 199

    (75) signo -> + exp .

    >               reduce using rule 75 (signo -> + exp .)
    <               reduce using rule 75 (signo -> + exp .)
    MENORIGUAL      reduce using rule 75 (signo -> + exp .)
    MAYORIGUAL      reduce using rule 75 (signo -> + exp .)
    IGUALIGUAL      reduce using rule 75 (signo -> + exp .)
    DIFERENTE       reduce using rule 75 (signo -> + exp .)
    COOR            reduce using rule 75 (signo -> + exp .)
    COAND           reduce using rule 75 (signo -> + exp .)
    ;               reduce using rule 75 (signo -> + exp .)
    )               reduce using rule 75 (signo -> + exp .)


state 200

    (76) signo -> - exp .

    >               reduce using rule 76 (signo -> - exp .)
    <               reduce using rule 76 (signo -> - exp .)
    MENORIGUAL      reduce using rule 76 (signo -> - exp .)
    MAYORIGUAL      reduce using rule 76 (signo -> - exp .)
    IGUALIGUAL      reduce using rule 76 (signo -> - exp .)
    DIFERENTE       reduce using rule 76 (signo -> - exp .)
    COOR            reduce using rule 76 (signo -> - exp .)
    COAND           reduce using rule 76 (signo -> - exp .)
    ;               reduce using rule 76 (signo -> - exp .)
    )               reduce using rule 76 (signo -> - exp .)


state 201

    (79) masop -> * termino .

    +               reduce using rule 79 (masop -> * termino .)
    -               reduce using rule 79 (masop -> * termino .)
    >               reduce using rule 79 (masop -> * termino .)
    <               reduce using rule 79 (masop -> * termino .)
    MENORIGUAL      reduce using rule 79 (masop -> * termino .)
    MAYORIGUAL      reduce using rule 79 (masop -> * termino .)
    IGUALIGUAL      reduce using rule 79 (masop -> * termino .)
    DIFERENTE       reduce using rule 79 (masop -> * termino .)
    COOR            reduce using rule 79 (masop -> * termino .)
    COAND           reduce using rule 79 (masop -> * termino .)
    ;               reduce using rule 79 (masop -> * termino .)
    )               reduce using rule 79 (masop -> * termino .)


state 202

    (80) masop -> / termino .

    +               reduce using rule 80 (masop -> / termino .)
    -               reduce using rule 80 (masop -> / termino .)
    >               reduce using rule 80 (masop -> / termino .)
    <               reduce using rule 80 (masop -> / termino .)
    MENORIGUAL      reduce using rule 80 (masop -> / termino .)
    MAYORIGUAL      reduce using rule 80 (masop -> / termino .)
    IGUALIGUAL      reduce using rule 80 (masop -> / termino .)
    DIFERENTE       reduce using rule 80 (masop -> / termino .)
    COOR            reduce using rule 80 (masop -> / termino .)
    COAND           reduce using rule 80 (masop -> / termino .)
    ;               reduce using rule 80 (masop -> / termino .)
    )               reduce using rule 80 (masop -> / termino .)


state 203

    (69) exp -> ( varcte operacion ) .

    )               reduce using rule 69 (exp -> ( varcte operacion ) .)
    ;               reduce using rule 69 (exp -> ( varcte operacion ) .)
    >               reduce using rule 69 (exp -> ( varcte operacion ) .)
    <               reduce using rule 69 (exp -> ( varcte operacion ) .)
    MENORIGUAL      reduce using rule 69 (exp -> ( varcte operacion ) .)
    MAYORIGUAL      reduce using rule 69 (exp -> ( varcte operacion ) .)
    IGUALIGUAL      reduce using rule 69 (exp -> ( varcte operacion ) .)
    DIFERENTE       reduce using rule 69 (exp -> ( varcte operacion ) .)
    COOR            reduce using rule 69 (exp -> ( varcte operacion ) .)
    COAND           reduce using rule 69 (exp -> ( varcte operacion ) .)


state 204

    (85) fors -> FOR ( asignacion expresion ; asignacion . ) bloque

    )               shift and go to state 218


state 205

    (44) opcionAsignacion -> [ CTI ] [ CTI . ]

    ]               shift and go to state 219


state 206

    (59) condicion -> IF ( expresion ) bloque ELSE . bloque
    (5) bloque -> . { vars estatuto }
    (6) bloque -> . { vars }
    (7) bloque -> . { }

    {               shift and go to state 20

    bloque                         shift and go to state 220

state 207

    (50) opcionesLectura -> [ CTI ] [ . CTI ]

    CTI             shift and go to state 221


state 208

    (86) pos -> ( varcte , . varcte )
    (88) varcte -> . ID
    (89) varcte -> . CTF
    (90) varcte -> . CTI
    (91) varcte -> . CTS
    (92) varcte -> . TRUE
    (93) varcte -> . FALSE

    ID              shift and go to state 82
    CTF             shift and go to state 76
    CTI             shift and go to state 78
    CTS             shift and go to state 75
    TRUE            shift and go to state 77
    FALSE           shift and go to state 84

    varcte                         shift and go to state 222

state 209

    (52) escritura -> DIBUJAR ( ID pos color ) . ;

    ;               shift and go to state 223


state 210

    (17) matriz -> [ . CTI ]

    CTI             shift and go to state 224


state 211

    (18) matriz -> empty .

    ;               reduce using rule 18 (matriz -> empty .)


state 212

    (16) arreglo -> [ CTI ] matriz .

    ;               reduce using rule 16 (arreglo -> [ CTI ] matriz .)


state 213

    (24) maspaID -> , ID guardarIDs .

    ENTERO          reduce using rule 24 (maspaID -> , ID guardarIDs .)
    DECIMAL         reduce using rule 24 (maspaID -> , ID guardarIDs .)
    BOOL            reduce using rule 24 (maspaID -> , ID guardarIDs .)
    VOID            reduce using rule 24 (maspaID -> , ID guardarIDs .)
    CUADRADO        reduce using rule 24 (maspaID -> , ID guardarIDs .)
    RECTANGULO      reduce using rule 24 (maspaID -> , ID guardarIDs .)
    CIRCULO         reduce using rule 24 (maspaID -> , ID guardarIDs .)
    LINEA           reduce using rule 24 (maspaID -> , ID guardarIDs .)
    ESTRELLA        reduce using rule 24 (maspaID -> , ID guardarIDs .)
    )               reduce using rule 24 (maspaID -> , ID guardarIDs .)


state 214

    (32) regresa -> RETURN ID .

    }               reduce using rule 32 (regresa -> RETURN ID .)


state 215

    (28) bloquefunc -> { vars estatuto regresa . }

    }               shift and go to state 225


state 216

    (29) bloquefunc -> { vars regresa } .

    INICIO          reduce using rule 29 (bloquefunc -> { vars regresa } .)
    FUNC            reduce using rule 29 (bloquefunc -> { vars regresa } .)


state 217

    (30) bloquefunc -> { escritura regresa } .

    INICIO          reduce using rule 30 (bloquefunc -> { escritura regresa } .)
    FUNC            reduce using rule 30 (bloquefunc -> { escritura regresa } .)


state 218

    (85) fors -> FOR ( asignacion expresion ; asignacion ) . bloque
    (5) bloque -> . { vars estatuto }
    (6) bloque -> . { vars }
    (7) bloque -> . { }

    {               shift and go to state 20

    bloque                         shift and go to state 226

state 219

    (44) opcionAsignacion -> [ CTI ] [ CTI ] .

    =               reduce using rule 44 (opcionAsignacion -> [ CTI ] [ CTI ] .)
    ;               reduce using rule 44 (opcionAsignacion -> [ CTI ] [ CTI ] .)


state 220

    (59) condicion -> IF ( expresion ) bloque ELSE bloque .

    ID              reduce using rule 59 (condicion -> IF ( expresion ) bloque ELSE bloque .)
    DIBUJAR         reduce using rule 59 (condicion -> IF ( expresion ) bloque ELSE bloque .)
    IF              reduce using rule 59 (condicion -> IF ( expresion ) bloque ELSE bloque .)
    LEER            reduce using rule 59 (condicion -> IF ( expresion ) bloque ELSE bloque .)
    WHILE           reduce using rule 59 (condicion -> IF ( expresion ) bloque ELSE bloque .)
    FOR             reduce using rule 59 (condicion -> IF ( expresion ) bloque ELSE bloque .)
    MUEVE           reduce using rule 59 (condicion -> IF ( expresion ) bloque ELSE bloque .)
    }               reduce using rule 59 (condicion -> IF ( expresion ) bloque ELSE bloque .)
    RETURN          reduce using rule 59 (condicion -> IF ( expresion ) bloque ELSE bloque .)


state 221

    (50) opcionesLectura -> [ CTI ] [ CTI . ]

    ]               shift and go to state 227


state 222

    (86) pos -> ( varcte , varcte . )

    )               shift and go to state 228


state 223

    (52) escritura -> DIBUJAR ( ID pos color ) ; .

    ID              reduce using rule 52 (escritura -> DIBUJAR ( ID pos color ) ; .)
    DIBUJAR         reduce using rule 52 (escritura -> DIBUJAR ( ID pos color ) ; .)
    IF              reduce using rule 52 (escritura -> DIBUJAR ( ID pos color ) ; .)
    LEER            reduce using rule 52 (escritura -> DIBUJAR ( ID pos color ) ; .)
    WHILE           reduce using rule 52 (escritura -> DIBUJAR ( ID pos color ) ; .)
    FOR             reduce using rule 52 (escritura -> DIBUJAR ( ID pos color ) ; .)
    MUEVE           reduce using rule 52 (escritura -> DIBUJAR ( ID pos color ) ; .)
    }               reduce using rule 52 (escritura -> DIBUJAR ( ID pos color ) ; .)
    RETURN          reduce using rule 52 (escritura -> DIBUJAR ( ID pos color ) ; .)


state 224

    (17) matriz -> [ CTI . ]

    ]               shift and go to state 229


state 225

    (28) bloquefunc -> { vars estatuto regresa } .

    INICIO          reduce using rule 28 (bloquefunc -> { vars estatuto regresa } .)
    FUNC            reduce using rule 28 (bloquefunc -> { vars estatuto regresa } .)


state 226

    (85) fors -> FOR ( asignacion expresion ; asignacion ) bloque .

    ID              reduce using rule 85 (fors -> FOR ( asignacion expresion ; asignacion ) bloque .)
    DIBUJAR         reduce using rule 85 (fors -> FOR ( asignacion expresion ; asignacion ) bloque .)
    IF              reduce using rule 85 (fors -> FOR ( asignacion expresion ; asignacion ) bloque .)
    LEER            reduce using rule 85 (fors -> FOR ( asignacion expresion ; asignacion ) bloque .)
    WHILE           reduce using rule 85 (fors -> FOR ( asignacion expresion ; asignacion ) bloque .)
    FOR             reduce using rule 85 (fors -> FOR ( asignacion expresion ; asignacion ) bloque .)
    MUEVE           reduce using rule 85 (fors -> FOR ( asignacion expresion ; asignacion ) bloque .)
    }               reduce using rule 85 (fors -> FOR ( asignacion expresion ; asignacion ) bloque .)
    RETURN          reduce using rule 85 (fors -> FOR ( asignacion expresion ; asignacion ) bloque .)


state 227

    (50) opcionesLectura -> [ CTI ] [ CTI ] .

    ;               reduce using rule 50 (opcionesLectura -> [ CTI ] [ CTI ] .)


state 228

    (86) pos -> ( varcte , varcte ) .

    AMARILLO        reduce using rule 86 (pos -> ( varcte , varcte ) .)
    VERDE           reduce using rule 86 (pos -> ( varcte , varcte ) .)
    ROJO            reduce using rule 86 (pos -> ( varcte , varcte ) .)
    AZUL            reduce using rule 86 (pos -> ( varcte , varcte ) .)


state 229

    (17) matriz -> [ CTI ] .

    ;               reduce using rule 17 (matriz -> [ CTI ] .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ; in state 35 resolved as shift
WARNING: shift/reduce conflict for ; in state 71 resolved as shift

Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> vars funcion INICIO funcAgregarInicio bloque FIN liberarVar
Rule 2     programa -> vars funcion INICIO FIN
Rule 3     funcAgregarInicio -> <empty>
Rule 4     bloque -> { vars guardarCuadruplo estatuto }
Rule 5     bloque -> { vars guardarCuadruplo }
Rule 6     bloque -> { }
Rule 7     vars -> tipo ID guardarIDs ; masTipos
Rule 8     vars -> tipo ID guardarIDs arreglo ; masTipos
Rule 9     vars -> tipo listaIDS ; masTipos
Rule 10    vars -> empty
Rule 11    masTipos -> vars
Rule 12    masTipos -> empty
Rule 13    listaIDS -> ID guardarIDs masIDS
Rule 14    masIDS -> , ID guardarIDs
Rule 15    masIDS -> empty
Rule 16    arreglo -> [ CTI ] matriz
Rule 17    matriz -> [ CTI ]
Rule 18    matriz -> empty
Rule 19    funcion -> FUNC tipo ID funcAgregar restoFuncion funcion2
Rule 20    funcion -> empty
Rule 21    funcion2 -> funcion
Rule 22    funcion2 -> empty
Rule 23    restoFuncion -> ( param ) bloquefunc
Rule 24    funcAgregar -> <empty>
Rule 25    param -> tipo ID guardarIDParam maspaID
Rule 26    param -> empty
Rule 27    guardarIDParam -> <empty>
Rule 28    guardarIDs -> <empty>
Rule 29    maspaID -> , param
Rule 30    maspaID -> empty
Rule 31    bloquefunc -> { vars guardarCuadruplo estatuto regresa } liberarVar
Rule 32    bloquefunc -> { vars guardarCuadruplo regresa } liberarVar
Rule 33    bloquefunc -> { guardarCuadruplo escritura regresa } liberarVar
Rule 34    bloquefunc -> { }
Rule 35    liberarVar -> <empty>
Rule 36    guardarCuadruplo -> <empty>
Rule 37    regresa -> RETURN ID
Rule 38    estatuto -> asignacion estatutoAux
Rule 39    estatuto -> escritura estatutoAux
Rule 40    estatuto -> condicion estatutoAux
Rule 41    estatuto -> lectura estatutoAux
Rule 42    estatuto -> whiles estatutoAux
Rule 43    estatuto -> funcs estatutoAux
Rule 44    estatutoAux -> estatuto
Rule 45    estatutoAux -> empty
Rule 46    checaNumParam -> )
Rule 47    generaGOSUB -> <empty>
Rule 48    funcs -> ID verProc generarERA auxExp checaNumParam generaGOSUB
Rule 49    funcs -> ID
Rule 50    verProc -> <empty>
Rule 51    generarERA -> (
Rule 52    auxExp -> listaExp llegaComa
Rule 53    auxExp -> listaExp
Rule 54    llegaComa -> ,
Rule 55    verificarTiposFunc -> <empty>
Rule 56    listaExp -> exp verificarTiposFunc masExps
Rule 57    masExps -> llegaComa listaExp
Rule 58    masExps -> <empty>
Rule 59    asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
Rule 60    asignacion -> ID ;
Rule 61    guardarIDPila -> <empty>
Rule 62    checarOperadorIgual -> <empty>
Rule 63    opcionAsignacion -> [ CTI ]
Rule 64    opcionAsignacion -> [ CTI ] [ CTI ]
Rule 65    opcionAsignacion -> empty
Rule 66    valorAsig -> = exp
Rule 67    valorAsig -> empty
Rule 68    guardarToken -> <empty>
Rule 69    checarLectura -> <empty>
Rule 70    lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
Rule 71    opcionesLectura -> [ CTI ]
Rule 72    opcionesLectura -> [ CTI ] [ CTI ]
Rule 73    opcionesLectura -> empty
Rule 74    guardarParametros -> ID guardarIDPila pos color checarDibujar
Rule 75    checarDibujar -> <empty>
Rule 76    escritura -> DIBUJAR guardarToken ( guardarParametros ) ;
Rule 77    escritura -> mueve
Rule 78    color -> AMARILLO
Rule 79    color -> VERDE
Rule 80    color -> ROJO
Rule 81    color -> AZUL
Rule 82    condicion -> IF ( expresion ) checarIF finPilaSaltos
Rule 83    condicion -> IF ( expresion ) checarIF checarElse finPilaSaltos
Rule 84    bloqueCond -> { estatuto regresaCond }
Rule 85    bloqueCond -> { regresaCond }
Rule 86    bloqueCond -> { }
Rule 87    regresaCond -> RETURN ID
Rule 88    regresaCond -> empty
Rule 89    checarIF -> bloqueCond
Rule 90    checarElse -> ELSE bloqueCond
Rule 91    finPilaSaltos -> <empty>
Rule 92    expresion -> exp operacionLogica checaoperador6
Rule 93    expresion -> exp
Rule 94    push_logica -> >
Rule 95    push_logica -> <
Rule 96    push_logica -> MENORIGUAL
Rule 97    push_logica -> MAYORIGUAL
Rule 98    push_logica -> IGUALIGUAL
Rule 99    push_logica -> DIFERENTE
Rule 100   push_logica -> COOR
Rule 101   push_logica -> COAND
Rule 102   operacionLogica -> push_logica exp
Rule 103   operacionLogica -> <empty>
Rule 104   checaoperador6 -> <empty>
Rule 105   exp -> termino checaroperador4
Rule 106   fondoFalso -> (
Rule 107   finFondoFalso -> )
Rule 108   checaroperador4 -> signo
Rule 109   checaroperador4 -> <empty>
Rule 110   signo -> push_pm exp
Rule 111   signo -> <empty>
Rule 112   push_pm -> +
Rule 113   push_pm -> -
Rule 114   termino -> factor checaroperador5
Rule 115   checaroperador5 -> masop
Rule 116   checaroperador5 -> <empty>
Rule 117   masop -> push_td termino
Rule 118   masop -> <empty>
Rule 119   push_td -> *
Rule 120   push_td -> /
Rule 121   factor -> fondoFalso expresion finFondoFalso
Rule 122   factor -> varcte
Rule 123   pos -> ( varcte , varcte )
Rule 124   whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
Rule 125   checarWhile -> <empty>
Rule 126   checarContenido -> <empty>
Rule 127   finPilaSaltosWhile -> <empty>
Rule 128   varcte -> recibe_ID
Rule 129   varcte -> recibe_CTF
Rule 130   varcte -> recibe_CTI
Rule 131   varcte -> recibe_TRUE
Rule 132   varcte -> recibe_FALSE
Rule 133   recibe_ID -> ID
Rule 134   recibe_CTF -> CTF
Rule 135   recibe_CTI -> CTI
Rule 136   recibe_TRUE -> TRUE
Rule 137   recibe_FALSE -> FALSE
Rule 138   tipo -> ENTERO
Rule 139   tipo -> DECIMAL
Rule 140   tipo -> BOOL
Rule 141   tipo -> VOID
Rule 142   tipo -> CUADRADO
Rule 143   tipo -> RECTANGULO
Rule 144   tipo -> CIRCULO
Rule 145   tipo -> LINEA
Rule 146   tipo -> ESTRELLA
Rule 147   mueve -> MUEVE guardarToken opcionMue
Rule 148   opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ;
Rule 149   direccion -> IZQUIERDA
Rule 150   direccion -> DERECHA
Rule 151   direccion -> ARRIBA
Rule 152   direccion -> ABAJO
Rule 153   checarMover -> <empty>
Rule 154   empty -> <empty>

Terminals, with rules where they appear

(                    : 23 51 76 82 83 106 123 124
)                    : 23 46 76 82 83 107 123 124
*                    : 119
+                    : 112
,                    : 14 29 54 123
-                    : 113
/                    : 120
;                    : 7 8 9 59 60 70 76 148
<                    : 95
=                    : 66
>                    : 94
ABAJO                : 152
AMARILLO             : 78
ARRIBA               : 151
AZUL                 : 81
BOOL                 : 140
CIRCULO              : 144
COAND                : 101
COOR                 : 100
CTF                  : 134
CTI                  : 16 17 63 64 64 71 72 72 135
CUADRADO             : 142
DECIMAL              : 139
DERECHA              : 150
DIBUJAR              : 76
DIFERENTE            : 99
ELSE                 : 90
ENTERO               : 138
ESTRELLA             : 146
FALSE                : 137
FIN                  : 1 2
FUNC                 : 19
ID                   : 7 8 13 14 19 25 37 48 49 59 60 70 74 87 133 148
IF                   : 82 83
IGUALIGUAL           : 98
INICIO               : 1 2
IZQUIERDA            : 149
LEER                 : 70
LINEA                : 145
MAYORIGUAL           : 97
MENORIGUAL           : 96
MUEVE                : 147
RECTANGULO           : 143
RETURN               : 37 87
ROJO                 : 80
TRUE                 : 136
VERDE                : 79
VOID                 : 141
WHILE                : 124
[                    : 16 17 63 64 64 71 72 72
]                    : 16 17 63 64 64 71 72 72
error                : 
{                    : 4 5 6 31 32 33 34 84 85 86
}                    : 4 5 6 31 32 33 34 84 85 86

Nonterminals, with rules where they appear

arreglo              : 8
asignacion           : 38
auxExp               : 48
bloque               : 1
bloqueCond           : 89 90 124
bloquefunc           : 23
checaNumParam        : 48
checaoperador6       : 92
checarContenido      : 124
checarDibujar        : 74
checarElse           : 83
checarIF             : 82 83
checarLectura        : 70
checarMover          : 148
checarOperadorIgual  : 59
checarWhile          : 124
checaroperador4      : 105
checaroperador5      : 114
color                : 74
condicion            : 40
direccion            : 148
empty                : 10 12 15 18 20 22 26 30 45 65 67 73 88
escritura            : 33 39
estatuto             : 4 31 44 84
estatutoAux          : 38 39 40 41 42 43
exp                  : 56 66 92 93 102 110
expresion            : 82 83 121 124
factor               : 114
finFondoFalso        : 121
finPilaSaltos        : 82 83
finPilaSaltosWhile   : 124
fondoFalso           : 121
funcAgregar          : 19
funcAgregarInicio    : 1
funcion              : 1 2 21
funcion2             : 19
funcs                : 43
generaGOSUB          : 48
generarERA           : 48
guardarCuadruplo     : 4 5 31 32 33
guardarIDParam       : 25
guardarIDPila        : 59 70 74 148
guardarIDs           : 7 8 13 14
guardarParametros    : 76
guardarToken         : 70 76 147
lectura              : 41
liberarVar           : 1 31 32 33
listaExp             : 52 53 57
listaIDS             : 9
llegaComa            : 52 57
masExps              : 56
masIDS               : 13
masTipos             : 7 8 9
masop                : 115
maspaID              : 25
matriz               : 16
mueve                : 77
opcionAsignacion     : 59
opcionMue            : 147
opcionesLectura      : 70
operacionLogica      : 92
param                : 23 29
pos                  : 74
programa             : 0
push_logica          : 102
push_pm              : 110
push_td              : 117
recibe_CTF           : 129
recibe_CTI           : 130 148
recibe_FALSE         : 132
recibe_ID            : 128
recibe_TRUE          : 131
regresa              : 31 32 33
regresaCond          : 84 85
restoFuncion         : 19
signo                : 108
termino              : 105 117
tipo                 : 7 8 9 19 25
valorAsig            : 59
varcte               : 122 123 123
vars                 : 1 2 4 5 11 31 32
verProc              : 48
verificarTiposFunc   : 56
whiles               : 42

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . vars funcion INICIO funcAgregarInicio bloque FIN liberarVar
    (2) programa -> . vars funcion INICIO FIN
    (7) vars -> . tipo ID guardarIDs ; masTipos
    (8) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (9) vars -> . tipo listaIDS ; masTipos
    (10) vars -> . empty
    (138) tipo -> . ENTERO
    (139) tipo -> . DECIMAL
    (140) tipo -> . BOOL
    (141) tipo -> . VOID
    (142) tipo -> . CUADRADO
    (143) tipo -> . RECTANGULO
    (144) tipo -> . CIRCULO
    (145) tipo -> . LINEA
    (146) tipo -> . ESTRELLA
    (154) empty -> .

    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8
    FUNC            reduce using rule 154 (empty -> .)
    INICIO          reduce using rule 154 (empty -> .)

    tipo                           shift and go to state 4
    vars                           shift and go to state 1
    empty                          shift and go to state 5
    programa                       shift and go to state 11

state 1

    (1) programa -> vars . funcion INICIO funcAgregarInicio bloque FIN liberarVar
    (2) programa -> vars . funcion INICIO FIN
    (19) funcion -> . FUNC tipo ID funcAgregar restoFuncion funcion2
    (20) funcion -> . empty
    (154) empty -> .

    FUNC            shift and go to state 15
    INICIO          reduce using rule 154 (empty -> .)

    empty                          shift and go to state 14
    funcion                        shift and go to state 16

state 2

    (141) tipo -> VOID .

    ID              reduce using rule 141 (tipo -> VOID .)


state 3

    (145) tipo -> LINEA .

    ID              reduce using rule 145 (tipo -> LINEA .)


state 4

    (7) vars -> tipo . ID guardarIDs ; masTipos
    (8) vars -> tipo . ID guardarIDs arreglo ; masTipos
    (9) vars -> tipo . listaIDS ; masTipos
    (13) listaIDS -> . ID guardarIDs masIDS

    ID              shift and go to state 18

    listaIDS                       shift and go to state 17

state 5

    (10) vars -> empty .

    RETURN          reduce using rule 10 (vars -> empty .)
    ID              reduce using rule 10 (vars -> empty .)
    DIBUJAR         reduce using rule 10 (vars -> empty .)
    IF              reduce using rule 10 (vars -> empty .)
    LEER            reduce using rule 10 (vars -> empty .)
    WHILE           reduce using rule 10 (vars -> empty .)
    MUEVE           reduce using rule 10 (vars -> empty .)
    FUNC            reduce using rule 10 (vars -> empty .)
    INICIO          reduce using rule 10 (vars -> empty .)
    }               reduce using rule 10 (vars -> empty .)


state 6

    (138) tipo -> ENTERO .

    ID              reduce using rule 138 (tipo -> ENTERO .)


state 7

    (139) tipo -> DECIMAL .

    ID              reduce using rule 139 (tipo -> DECIMAL .)


state 8

    (146) tipo -> ESTRELLA .

    ID              reduce using rule 146 (tipo -> ESTRELLA .)


state 9

    (142) tipo -> CUADRADO .

    ID              reduce using rule 142 (tipo -> CUADRADO .)


state 10

    (140) tipo -> BOOL .

    ID              reduce using rule 140 (tipo -> BOOL .)


state 11

    (0) S' -> programa .



state 12

    (143) tipo -> RECTANGULO .

    ID              reduce using rule 143 (tipo -> RECTANGULO .)


state 13

    (144) tipo -> CIRCULO .

    ID              reduce using rule 144 (tipo -> CIRCULO .)


state 14

    (20) funcion -> empty .

    INICIO          reduce using rule 20 (funcion -> empty .)


state 15

    (19) funcion -> FUNC . tipo ID funcAgregar restoFuncion funcion2
    (138) tipo -> . ENTERO
    (139) tipo -> . DECIMAL
    (140) tipo -> . BOOL
    (141) tipo -> . VOID
    (142) tipo -> . CUADRADO
    (143) tipo -> . RECTANGULO
    (144) tipo -> . CIRCULO
    (145) tipo -> . LINEA
    (146) tipo -> . ESTRELLA

    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8

    tipo                           shift and go to state 19

state 16

    (1) programa -> vars funcion . INICIO funcAgregarInicio bloque FIN liberarVar
    (2) programa -> vars funcion . INICIO FIN

    INICIO          shift and go to state 20


state 17

    (9) vars -> tipo listaIDS . ; masTipos

    ;               shift and go to state 21


state 18

    (7) vars -> tipo ID . guardarIDs ; masTipos
    (8) vars -> tipo ID . guardarIDs arreglo ; masTipos
    (13) listaIDS -> ID . guardarIDs masIDS
    (28) guardarIDs -> .

    ;               reduce using rule 28 (guardarIDs -> .)
    [               reduce using rule 28 (guardarIDs -> .)
    ,               reduce using rule 28 (guardarIDs -> .)

    guardarIDs                     shift and go to state 22

state 19

    (19) funcion -> FUNC tipo . ID funcAgregar restoFuncion funcion2

    ID              shift and go to state 23


state 20

    (1) programa -> vars funcion INICIO . funcAgregarInicio bloque FIN liberarVar
    (2) programa -> vars funcion INICIO . FIN
    (3) funcAgregarInicio -> .

    FIN             shift and go to state 25
    {               reduce using rule 3 (funcAgregarInicio -> .)

    funcAgregarInicio              shift and go to state 24

state 21

    (9) vars -> tipo listaIDS ; . masTipos
    (11) masTipos -> . vars
    (12) masTipos -> . empty
    (7) vars -> . tipo ID guardarIDs ; masTipos
    (8) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (9) vars -> . tipo listaIDS ; masTipos
    (10) vars -> . empty
    (154) empty -> .
    (138) tipo -> . ENTERO
    (139) tipo -> . DECIMAL
    (140) tipo -> . BOOL
    (141) tipo -> . VOID
    (142) tipo -> . CUADRADO
    (143) tipo -> . RECTANGULO
    (144) tipo -> . CIRCULO
    (145) tipo -> . LINEA
    (146) tipo -> . ESTRELLA

    FUNC            reduce using rule 154 (empty -> .)
    INICIO          reduce using rule 154 (empty -> .)
    }               reduce using rule 154 (empty -> .)
    ID              reduce using rule 154 (empty -> .)
    DIBUJAR         reduce using rule 154 (empty -> .)
    IF              reduce using rule 154 (empty -> .)
    LEER            reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    MUEVE           reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8

    masTipos                       shift and go to state 26
    tipo                           shift and go to state 4
    vars                           shift and go to state 27
    empty                          shift and go to state 28

state 22

    (7) vars -> tipo ID guardarIDs . ; masTipos
    (8) vars -> tipo ID guardarIDs . arreglo ; masTipos
    (13) listaIDS -> ID guardarIDs . masIDS
    (16) arreglo -> . [ CTI ] matriz
    (14) masIDS -> . , ID guardarIDs
    (15) masIDS -> . empty
    (154) empty -> .

  ! shift/reduce conflict for ; resolved as shift
    ;               shift and go to state 32
    [               shift and go to state 31
    ,               shift and go to state 29

  ! ;               [ reduce using rule 154 (empty -> .) ]

    arreglo                        shift and go to state 30
    masIDS                         shift and go to state 33
    empty                          shift and go to state 34

state 23

    (19) funcion -> FUNC tipo ID . funcAgregar restoFuncion funcion2
    (24) funcAgregar -> .

    (               reduce using rule 24 (funcAgregar -> .)

    funcAgregar                    shift and go to state 35

state 24

    (1) programa -> vars funcion INICIO funcAgregarInicio . bloque FIN liberarVar
    (4) bloque -> . { vars guardarCuadruplo estatuto }
    (5) bloque -> . { vars guardarCuadruplo }
    (6) bloque -> . { }

    {               shift and go to state 37

    bloque                         shift and go to state 36

state 25

    (2) programa -> vars funcion INICIO FIN .

    $end            reduce using rule 2 (programa -> vars funcion INICIO FIN .)


state 26

    (9) vars -> tipo listaIDS ; masTipos .

    FUNC            reduce using rule 9 (vars -> tipo listaIDS ; masTipos .)
    INICIO          reduce using rule 9 (vars -> tipo listaIDS ; masTipos .)
    }               reduce using rule 9 (vars -> tipo listaIDS ; masTipos .)
    ID              reduce using rule 9 (vars -> tipo listaIDS ; masTipos .)
    DIBUJAR         reduce using rule 9 (vars -> tipo listaIDS ; masTipos .)
    IF              reduce using rule 9 (vars -> tipo listaIDS ; masTipos .)
    LEER            reduce using rule 9 (vars -> tipo listaIDS ; masTipos .)
    WHILE           reduce using rule 9 (vars -> tipo listaIDS ; masTipos .)
    MUEVE           reduce using rule 9 (vars -> tipo listaIDS ; masTipos .)
    RETURN          reduce using rule 9 (vars -> tipo listaIDS ; masTipos .)


state 27

    (11) masTipos -> vars .

    FUNC            reduce using rule 11 (masTipos -> vars .)
    INICIO          reduce using rule 11 (masTipos -> vars .)
    }               reduce using rule 11 (masTipos -> vars .)
    ID              reduce using rule 11 (masTipos -> vars .)
    DIBUJAR         reduce using rule 11 (masTipos -> vars .)
    IF              reduce using rule 11 (masTipos -> vars .)
    LEER            reduce using rule 11 (masTipos -> vars .)
    WHILE           reduce using rule 11 (masTipos -> vars .)
    MUEVE           reduce using rule 11 (masTipos -> vars .)
    RETURN          reduce using rule 11 (masTipos -> vars .)


state 28

    (12) masTipos -> empty .
    (10) vars -> empty .

  ! reduce/reduce conflict for FUNC resolved using rule 10 (vars -> empty .)
  ! reduce/reduce conflict for INICIO resolved using rule 10 (vars -> empty .)
  ! reduce/reduce conflict for } resolved using rule 10 (vars -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 10 (vars -> empty .)
  ! reduce/reduce conflict for DIBUJAR resolved using rule 10 (vars -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 10 (vars -> empty .)
  ! reduce/reduce conflict for LEER resolved using rule 10 (vars -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 10 (vars -> empty .)
  ! reduce/reduce conflict for MUEVE resolved using rule 10 (vars -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 10 (vars -> empty .)
    FUNC            reduce using rule 10 (vars -> empty .)
    INICIO          reduce using rule 10 (vars -> empty .)
    }               reduce using rule 10 (vars -> empty .)
    ID              reduce using rule 10 (vars -> empty .)
    DIBUJAR         reduce using rule 10 (vars -> empty .)
    IF              reduce using rule 10 (vars -> empty .)
    LEER            reduce using rule 10 (vars -> empty .)
    WHILE           reduce using rule 10 (vars -> empty .)
    MUEVE           reduce using rule 10 (vars -> empty .)
    RETURN          reduce using rule 10 (vars -> empty .)

  ! FUNC            [ reduce using rule 12 (masTipos -> empty .) ]
  ! INICIO          [ reduce using rule 12 (masTipos -> empty .) ]
  ! }               [ reduce using rule 12 (masTipos -> empty .) ]
  ! ID              [ reduce using rule 12 (masTipos -> empty .) ]
  ! DIBUJAR         [ reduce using rule 12 (masTipos -> empty .) ]
  ! IF              [ reduce using rule 12 (masTipos -> empty .) ]
  ! LEER            [ reduce using rule 12 (masTipos -> empty .) ]
  ! WHILE           [ reduce using rule 12 (masTipos -> empty .) ]
  ! MUEVE           [ reduce using rule 12 (masTipos -> empty .) ]
  ! RETURN          [ reduce using rule 12 (masTipos -> empty .) ]


state 29

    (14) masIDS -> , . ID guardarIDs

    ID              shift and go to state 38


state 30

    (8) vars -> tipo ID guardarIDs arreglo . ; masTipos

    ;               shift and go to state 39


state 31

    (16) arreglo -> [ . CTI ] matriz

    CTI             shift and go to state 40


state 32

    (7) vars -> tipo ID guardarIDs ; . masTipos
    (11) masTipos -> . vars
    (12) masTipos -> . empty
    (7) vars -> . tipo ID guardarIDs ; masTipos
    (8) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (9) vars -> . tipo listaIDS ; masTipos
    (10) vars -> . empty
    (154) empty -> .
    (138) tipo -> . ENTERO
    (139) tipo -> . DECIMAL
    (140) tipo -> . BOOL
    (141) tipo -> . VOID
    (142) tipo -> . CUADRADO
    (143) tipo -> . RECTANGULO
    (144) tipo -> . CIRCULO
    (145) tipo -> . LINEA
    (146) tipo -> . ESTRELLA

    FUNC            reduce using rule 154 (empty -> .)
    INICIO          reduce using rule 154 (empty -> .)
    }               reduce using rule 154 (empty -> .)
    ID              reduce using rule 154 (empty -> .)
    DIBUJAR         reduce using rule 154 (empty -> .)
    IF              reduce using rule 154 (empty -> .)
    LEER            reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    MUEVE           reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8

    masTipos                       shift and go to state 41
    tipo                           shift and go to state 4
    vars                           shift and go to state 27
    empty                          shift and go to state 28

state 33

    (13) listaIDS -> ID guardarIDs masIDS .

    ;               reduce using rule 13 (listaIDS -> ID guardarIDs masIDS .)


state 34

    (15) masIDS -> empty .

    ;               reduce using rule 15 (masIDS -> empty .)


state 35

    (19) funcion -> FUNC tipo ID funcAgregar . restoFuncion funcion2
    (23) restoFuncion -> . ( param ) bloquefunc

    (               shift and go to state 42

    restoFuncion                   shift and go to state 43

state 36

    (1) programa -> vars funcion INICIO funcAgregarInicio bloque . FIN liberarVar

    FIN             shift and go to state 44


state 37

    (4) bloque -> { . vars guardarCuadruplo estatuto }
    (5) bloque -> { . vars guardarCuadruplo }
    (6) bloque -> { . }
    (7) vars -> . tipo ID guardarIDs ; masTipos
    (8) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (9) vars -> . tipo listaIDS ; masTipos
    (10) vars -> . empty
    (138) tipo -> . ENTERO
    (139) tipo -> . DECIMAL
    (140) tipo -> . BOOL
    (141) tipo -> . VOID
    (142) tipo -> . CUADRADO
    (143) tipo -> . RECTANGULO
    (144) tipo -> . CIRCULO
    (145) tipo -> . LINEA
    (146) tipo -> . ESTRELLA
    (154) empty -> .

  ! shift/reduce conflict for } resolved as shift
    }               shift and go to state 46
    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8
    ID              reduce using rule 154 (empty -> .)
    DIBUJAR         reduce using rule 154 (empty -> .)
    IF              reduce using rule 154 (empty -> .)
    LEER            reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    MUEVE           reduce using rule 154 (empty -> .)

  ! }               [ reduce using rule 154 (empty -> .) ]

    vars                           shift and go to state 45
    empty                          shift and go to state 5
    tipo                           shift and go to state 4

state 38

    (14) masIDS -> , ID . guardarIDs
    (28) guardarIDs -> .

    ;               reduce using rule 28 (guardarIDs -> .)

    guardarIDs                     shift and go to state 47

state 39

    (8) vars -> tipo ID guardarIDs arreglo ; . masTipos
    (11) masTipos -> . vars
    (12) masTipos -> . empty
    (7) vars -> . tipo ID guardarIDs ; masTipos
    (8) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (9) vars -> . tipo listaIDS ; masTipos
    (10) vars -> . empty
    (154) empty -> .
    (138) tipo -> . ENTERO
    (139) tipo -> . DECIMAL
    (140) tipo -> . BOOL
    (141) tipo -> . VOID
    (142) tipo -> . CUADRADO
    (143) tipo -> . RECTANGULO
    (144) tipo -> . CIRCULO
    (145) tipo -> . LINEA
    (146) tipo -> . ESTRELLA

    FUNC            reduce using rule 154 (empty -> .)
    INICIO          reduce using rule 154 (empty -> .)
    }               reduce using rule 154 (empty -> .)
    ID              reduce using rule 154 (empty -> .)
    DIBUJAR         reduce using rule 154 (empty -> .)
    IF              reduce using rule 154 (empty -> .)
    LEER            reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    MUEVE           reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8

    masTipos                       shift and go to state 48
    tipo                           shift and go to state 4
    vars                           shift and go to state 27
    empty                          shift and go to state 28

state 40

    (16) arreglo -> [ CTI . ] matriz

    ]               shift and go to state 49


state 41

    (7) vars -> tipo ID guardarIDs ; masTipos .

    FUNC            reduce using rule 7 (vars -> tipo ID guardarIDs ; masTipos .)
    INICIO          reduce using rule 7 (vars -> tipo ID guardarIDs ; masTipos .)
    }               reduce using rule 7 (vars -> tipo ID guardarIDs ; masTipos .)
    ID              reduce using rule 7 (vars -> tipo ID guardarIDs ; masTipos .)
    DIBUJAR         reduce using rule 7 (vars -> tipo ID guardarIDs ; masTipos .)
    IF              reduce using rule 7 (vars -> tipo ID guardarIDs ; masTipos .)
    LEER            reduce using rule 7 (vars -> tipo ID guardarIDs ; masTipos .)
    WHILE           reduce using rule 7 (vars -> tipo ID guardarIDs ; masTipos .)
    MUEVE           reduce using rule 7 (vars -> tipo ID guardarIDs ; masTipos .)
    RETURN          reduce using rule 7 (vars -> tipo ID guardarIDs ; masTipos .)


state 42

    (23) restoFuncion -> ( . param ) bloquefunc
    (25) param -> . tipo ID guardarIDParam maspaID
    (26) param -> . empty
    (138) tipo -> . ENTERO
    (139) tipo -> . DECIMAL
    (140) tipo -> . BOOL
    (141) tipo -> . VOID
    (142) tipo -> . CUADRADO
    (143) tipo -> . RECTANGULO
    (144) tipo -> . CIRCULO
    (145) tipo -> . LINEA
    (146) tipo -> . ESTRELLA
    (154) empty -> .

    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8
    )               reduce using rule 154 (empty -> .)

    tipo                           shift and go to state 50
    param                          shift and go to state 51
    empty                          shift and go to state 52

state 43

    (19) funcion -> FUNC tipo ID funcAgregar restoFuncion . funcion2
    (21) funcion2 -> . funcion
    (22) funcion2 -> . empty
    (19) funcion -> . FUNC tipo ID funcAgregar restoFuncion funcion2
    (20) funcion -> . empty
    (154) empty -> .

    FUNC            shift and go to state 15
    INICIO          reduce using rule 154 (empty -> .)

    funcion2                       shift and go to state 53
    empty                          shift and go to state 55
    funcion                        shift and go to state 54

state 44

    (1) programa -> vars funcion INICIO funcAgregarInicio bloque FIN . liberarVar
    (35) liberarVar -> .

    $end            reduce using rule 35 (liberarVar -> .)

    liberarVar                     shift and go to state 56

state 45

    (4) bloque -> { vars . guardarCuadruplo estatuto }
    (5) bloque -> { vars . guardarCuadruplo }
    (36) guardarCuadruplo -> .

    }               reduce using rule 36 (guardarCuadruplo -> .)
    ID              reduce using rule 36 (guardarCuadruplo -> .)
    DIBUJAR         reduce using rule 36 (guardarCuadruplo -> .)
    IF              reduce using rule 36 (guardarCuadruplo -> .)
    LEER            reduce using rule 36 (guardarCuadruplo -> .)
    WHILE           reduce using rule 36 (guardarCuadruplo -> .)
    MUEVE           reduce using rule 36 (guardarCuadruplo -> .)

    guardarCuadruplo               shift and go to state 57

state 46

    (6) bloque -> { } .

    FIN             reduce using rule 6 (bloque -> { } .)


state 47

    (14) masIDS -> , ID guardarIDs .

    ;               reduce using rule 14 (masIDS -> , ID guardarIDs .)


state 48

    (8) vars -> tipo ID guardarIDs arreglo ; masTipos .

    FUNC            reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    INICIO          reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    }               reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    ID              reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    DIBUJAR         reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    IF              reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    LEER            reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    WHILE           reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    MUEVE           reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)
    RETURN          reduce using rule 8 (vars -> tipo ID guardarIDs arreglo ; masTipos .)


state 49

    (16) arreglo -> [ CTI ] . matriz
    (17) matriz -> . [ CTI ]
    (18) matriz -> . empty
    (154) empty -> .

    [               shift and go to state 58
    ;               reduce using rule 154 (empty -> .)

    empty                          shift and go to state 59
    matriz                         shift and go to state 60

state 50

    (25) param -> tipo . ID guardarIDParam maspaID

    ID              shift and go to state 61


state 51

    (23) restoFuncion -> ( param . ) bloquefunc

    )               shift and go to state 62


state 52

    (26) param -> empty .

    )               reduce using rule 26 (param -> empty .)


state 53

    (19) funcion -> FUNC tipo ID funcAgregar restoFuncion funcion2 .

    INICIO          reduce using rule 19 (funcion -> FUNC tipo ID funcAgregar restoFuncion funcion2 .)


state 54

    (21) funcion2 -> funcion .

    INICIO          reduce using rule 21 (funcion2 -> funcion .)


state 55

    (22) funcion2 -> empty .
    (20) funcion -> empty .

  ! reduce/reduce conflict for INICIO resolved using rule 20 (funcion -> empty .)
    INICIO          reduce using rule 20 (funcion -> empty .)

  ! INICIO          [ reduce using rule 22 (funcion2 -> empty .) ]


state 56

    (1) programa -> vars funcion INICIO funcAgregarInicio bloque FIN liberarVar .

    $end            reduce using rule 1 (programa -> vars funcion INICIO funcAgregarInicio bloque FIN liberarVar .)


state 57

    (4) bloque -> { vars guardarCuadruplo . estatuto }
    (5) bloque -> { vars guardarCuadruplo . }
    (38) estatuto -> . asignacion estatutoAux
    (39) estatuto -> . escritura estatutoAux
    (40) estatuto -> . condicion estatutoAux
    (41) estatuto -> . lectura estatutoAux
    (42) estatuto -> . whiles estatutoAux
    (43) estatuto -> . funcs estatutoAux
    (59) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (60) asignacion -> . ID ;
    (76) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (77) escritura -> . mueve
    (82) condicion -> . IF ( expresion ) checarIF finPilaSaltos
    (83) condicion -> . IF ( expresion ) checarIF checarElse finPilaSaltos
    (70) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (124) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (48) funcs -> . ID verProc generarERA auxExp checaNumParam generaGOSUB
    (49) funcs -> . ID
    (147) mueve -> . MUEVE guardarToken opcionMue

    }               shift and go to state 76
    ID              shift and go to state 71
    DIBUJAR         shift and go to state 75
    IF              shift and go to state 72
    LEER            shift and go to state 73
    WHILE           shift and go to state 64
    MUEVE           shift and go to state 65

    funcs                          shift and go to state 63
    estatuto                       shift and go to state 66
    mueve                          shift and go to state 67
    condicion                      shift and go to state 68
    lectura                        shift and go to state 69
    whiles                         shift and go to state 70
    asignacion                     shift and go to state 74
    escritura                      shift and go to state 77

state 58

    (17) matriz -> [ . CTI ]

    CTI             shift and go to state 78


state 59

    (18) matriz -> empty .

    ;               reduce using rule 18 (matriz -> empty .)


state 60

    (16) arreglo -> [ CTI ] matriz .

    ;               reduce using rule 16 (arreglo -> [ CTI ] matriz .)


state 61

    (25) param -> tipo ID . guardarIDParam maspaID
    (27) guardarIDParam -> .

    ,               reduce using rule 27 (guardarIDParam -> .)
    )               reduce using rule 27 (guardarIDParam -> .)

    guardarIDParam                 shift and go to state 79

state 62

    (23) restoFuncion -> ( param ) . bloquefunc
    (31) bloquefunc -> . { vars guardarCuadruplo estatuto regresa } liberarVar
    (32) bloquefunc -> . { vars guardarCuadruplo regresa } liberarVar
    (33) bloquefunc -> . { guardarCuadruplo escritura regresa } liberarVar
    (34) bloquefunc -> . { }

    {               shift and go to state 80

    bloquefunc                     shift and go to state 81

state 63

    (43) estatuto -> funcs . estatutoAux
    (44) estatutoAux -> . estatuto
    (45) estatutoAux -> . empty
    (38) estatuto -> . asignacion estatutoAux
    (39) estatuto -> . escritura estatutoAux
    (40) estatuto -> . condicion estatutoAux
    (41) estatuto -> . lectura estatutoAux
    (42) estatuto -> . whiles estatutoAux
    (43) estatuto -> . funcs estatutoAux
    (154) empty -> .
    (59) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (60) asignacion -> . ID ;
    (76) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (77) escritura -> . mueve
    (82) condicion -> . IF ( expresion ) checarIF finPilaSaltos
    (83) condicion -> . IF ( expresion ) checarIF checarElse finPilaSaltos
    (70) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (124) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (48) funcs -> . ID verProc generarERA auxExp checaNumParam generaGOSUB
    (49) funcs -> . ID
    (147) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    ID              shift and go to state 71
    DIBUJAR         shift and go to state 75
    IF              shift and go to state 72
    LEER            shift and go to state 73
    WHILE           shift and go to state 64
    MUEVE           shift and go to state 65

    funcs                          shift and go to state 63
    estatuto                       shift and go to state 82
    mueve                          shift and go to state 67
    condicion                      shift and go to state 68
    lectura                        shift and go to state 69
    empty                          shift and go to state 83
    whiles                         shift and go to state 70
    estatutoAux                    shift and go to state 84
    asignacion                     shift and go to state 74
    escritura                      shift and go to state 77

state 64

    (124) whiles -> WHILE . checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (125) checarWhile -> .

    (               reduce using rule 125 (checarWhile -> .)

    checarWhile                    shift and go to state 85

state 65

    (147) mueve -> MUEVE . guardarToken opcionMue
    (68) guardarToken -> .

    IZQUIERDA       reduce using rule 68 (guardarToken -> .)
    DERECHA         reduce using rule 68 (guardarToken -> .)
    ARRIBA          reduce using rule 68 (guardarToken -> .)
    ABAJO           reduce using rule 68 (guardarToken -> .)

    guardarToken                   shift and go to state 86

state 66

    (4) bloque -> { vars guardarCuadruplo estatuto . }

    }               shift and go to state 87


state 67

    (77) escritura -> mueve .

    ID              reduce using rule 77 (escritura -> mueve .)
    DIBUJAR         reduce using rule 77 (escritura -> mueve .)
    IF              reduce using rule 77 (escritura -> mueve .)
    LEER            reduce using rule 77 (escritura -> mueve .)
    WHILE           reduce using rule 77 (escritura -> mueve .)
    MUEVE           reduce using rule 77 (escritura -> mueve .)
    }               reduce using rule 77 (escritura -> mueve .)
    RETURN          reduce using rule 77 (escritura -> mueve .)


state 68

    (40) estatuto -> condicion . estatutoAux
    (44) estatutoAux -> . estatuto
    (45) estatutoAux -> . empty
    (38) estatuto -> . asignacion estatutoAux
    (39) estatuto -> . escritura estatutoAux
    (40) estatuto -> . condicion estatutoAux
    (41) estatuto -> . lectura estatutoAux
    (42) estatuto -> . whiles estatutoAux
    (43) estatuto -> . funcs estatutoAux
    (154) empty -> .
    (59) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (60) asignacion -> . ID ;
    (76) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (77) escritura -> . mueve
    (82) condicion -> . IF ( expresion ) checarIF finPilaSaltos
    (83) condicion -> . IF ( expresion ) checarIF checarElse finPilaSaltos
    (70) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (124) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (48) funcs -> . ID verProc generarERA auxExp checaNumParam generaGOSUB
    (49) funcs -> . ID
    (147) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    ID              shift and go to state 71
    DIBUJAR         shift and go to state 75
    IF              shift and go to state 72
    LEER            shift and go to state 73
    WHILE           shift and go to state 64
    MUEVE           shift and go to state 65

    funcs                          shift and go to state 63
    estatuto                       shift and go to state 82
    mueve                          shift and go to state 67
    condicion                      shift and go to state 68
    lectura                        shift and go to state 69
    empty                          shift and go to state 83
    whiles                         shift and go to state 70
    estatutoAux                    shift and go to state 88
    asignacion                     shift and go to state 74
    escritura                      shift and go to state 77

state 69

    (41) estatuto -> lectura . estatutoAux
    (44) estatutoAux -> . estatuto
    (45) estatutoAux -> . empty
    (38) estatuto -> . asignacion estatutoAux
    (39) estatuto -> . escritura estatutoAux
    (40) estatuto -> . condicion estatutoAux
    (41) estatuto -> . lectura estatutoAux
    (42) estatuto -> . whiles estatutoAux
    (43) estatuto -> . funcs estatutoAux
    (154) empty -> .
    (59) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (60) asignacion -> . ID ;
    (76) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (77) escritura -> . mueve
    (82) condicion -> . IF ( expresion ) checarIF finPilaSaltos
    (83) condicion -> . IF ( expresion ) checarIF checarElse finPilaSaltos
    (70) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (124) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (48) funcs -> . ID verProc generarERA auxExp checaNumParam generaGOSUB
    (49) funcs -> . ID
    (147) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    ID              shift and go to state 71
    DIBUJAR         shift and go to state 75
    IF              shift and go to state 72
    LEER            shift and go to state 73
    WHILE           shift and go to state 64
    MUEVE           shift and go to state 65

    funcs                          shift and go to state 63
    estatuto                       shift and go to state 82
    mueve                          shift and go to state 67
    condicion                      shift and go to state 68
    lectura                        shift and go to state 69
    empty                          shift and go to state 83
    whiles                         shift and go to state 70
    estatutoAux                    shift and go to state 89
    asignacion                     shift and go to state 74
    escritura                      shift and go to state 77

state 70

    (42) estatuto -> whiles . estatutoAux
    (44) estatutoAux -> . estatuto
    (45) estatutoAux -> . empty
    (38) estatuto -> . asignacion estatutoAux
    (39) estatuto -> . escritura estatutoAux
    (40) estatuto -> . condicion estatutoAux
    (41) estatuto -> . lectura estatutoAux
    (42) estatuto -> . whiles estatutoAux
    (43) estatuto -> . funcs estatutoAux
    (154) empty -> .
    (59) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (60) asignacion -> . ID ;
    (76) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (77) escritura -> . mueve
    (82) condicion -> . IF ( expresion ) checarIF finPilaSaltos
    (83) condicion -> . IF ( expresion ) checarIF checarElse finPilaSaltos
    (70) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (124) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (48) funcs -> . ID verProc generarERA auxExp checaNumParam generaGOSUB
    (49) funcs -> . ID
    (147) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    ID              shift and go to state 71
    DIBUJAR         shift and go to state 75
    IF              shift and go to state 72
    LEER            shift and go to state 73
    WHILE           shift and go to state 64
    MUEVE           shift and go to state 65

    funcs                          shift and go to state 63
    estatuto                       shift and go to state 82
    mueve                          shift and go to state 67
    condicion                      shift and go to state 68
    lectura                        shift and go to state 69
    empty                          shift and go to state 83
    whiles                         shift and go to state 70
    estatutoAux                    shift and go to state 90
    asignacion                     shift and go to state 74
    escritura                      shift and go to state 77

state 71

    (59) asignacion -> ID . guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (60) asignacion -> ID . ;
    (48) funcs -> ID . verProc generarERA auxExp checaNumParam generaGOSUB
    (49) funcs -> ID .
    (61) guardarIDPila -> .
    (50) verProc -> .

  ! shift/reduce conflict for ; resolved as shift
    ;               shift and go to state 93
    ID              reduce using rule 49 (funcs -> ID .)
    DIBUJAR         reduce using rule 49 (funcs -> ID .)
    IF              reduce using rule 49 (funcs -> ID .)
    LEER            reduce using rule 49 (funcs -> ID .)
    WHILE           reduce using rule 49 (funcs -> ID .)
    MUEVE           reduce using rule 49 (funcs -> ID .)
    }               reduce using rule 49 (funcs -> ID .)
    RETURN          reduce using rule 49 (funcs -> ID .)
    [               reduce using rule 61 (guardarIDPila -> .)
    =               reduce using rule 61 (guardarIDPila -> .)
    (               reduce using rule 50 (verProc -> .)

  ! ;               [ reduce using rule 61 (guardarIDPila -> .) ]

    guardarIDPila                  shift and go to state 91
    verProc                        shift and go to state 92

state 72

    (82) condicion -> IF . ( expresion ) checarIF finPilaSaltos
    (83) condicion -> IF . ( expresion ) checarIF checarElse finPilaSaltos

    (               shift and go to state 94


state 73

    (70) lectura -> LEER . guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (68) guardarToken -> .

    ID              reduce using rule 68 (guardarToken -> .)

    guardarToken                   shift and go to state 95

state 74

    (38) estatuto -> asignacion . estatutoAux
    (44) estatutoAux -> . estatuto
    (45) estatutoAux -> . empty
    (38) estatuto -> . asignacion estatutoAux
    (39) estatuto -> . escritura estatutoAux
    (40) estatuto -> . condicion estatutoAux
    (41) estatuto -> . lectura estatutoAux
    (42) estatuto -> . whiles estatutoAux
    (43) estatuto -> . funcs estatutoAux
    (154) empty -> .
    (59) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (60) asignacion -> . ID ;
    (76) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (77) escritura -> . mueve
    (82) condicion -> . IF ( expresion ) checarIF finPilaSaltos
    (83) condicion -> . IF ( expresion ) checarIF checarElse finPilaSaltos
    (70) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (124) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (48) funcs -> . ID verProc generarERA auxExp checaNumParam generaGOSUB
    (49) funcs -> . ID
    (147) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    ID              shift and go to state 71
    DIBUJAR         shift and go to state 75
    IF              shift and go to state 72
    LEER            shift and go to state 73
    WHILE           shift and go to state 64
    MUEVE           shift and go to state 65

    funcs                          shift and go to state 63
    estatuto                       shift and go to state 82
    mueve                          shift and go to state 67
    condicion                      shift and go to state 68
    lectura                        shift and go to state 69
    empty                          shift and go to state 83
    whiles                         shift and go to state 70
    estatutoAux                    shift and go to state 96
    asignacion                     shift and go to state 74
    escritura                      shift and go to state 77

state 75

    (76) escritura -> DIBUJAR . guardarToken ( guardarParametros ) ;
    (68) guardarToken -> .

    (               reduce using rule 68 (guardarToken -> .)

    guardarToken                   shift and go to state 97

state 76

    (5) bloque -> { vars guardarCuadruplo } .

    FIN             reduce using rule 5 (bloque -> { vars guardarCuadruplo } .)


state 77

    (39) estatuto -> escritura . estatutoAux
    (44) estatutoAux -> . estatuto
    (45) estatutoAux -> . empty
    (38) estatuto -> . asignacion estatutoAux
    (39) estatuto -> . escritura estatutoAux
    (40) estatuto -> . condicion estatutoAux
    (41) estatuto -> . lectura estatutoAux
    (42) estatuto -> . whiles estatutoAux
    (43) estatuto -> . funcs estatutoAux
    (154) empty -> .
    (59) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (60) asignacion -> . ID ;
    (76) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (77) escritura -> . mueve
    (82) condicion -> . IF ( expresion ) checarIF finPilaSaltos
    (83) condicion -> . IF ( expresion ) checarIF checarElse finPilaSaltos
    (70) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (124) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (48) funcs -> . ID verProc generarERA auxExp checaNumParam generaGOSUB
    (49) funcs -> . ID
    (147) mueve -> . MUEVE guardarToken opcionMue

    }               reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    ID              shift and go to state 71
    DIBUJAR         shift and go to state 75
    IF              shift and go to state 72
    LEER            shift and go to state 73
    WHILE           shift and go to state 64
    MUEVE           shift and go to state 65

    funcs                          shift and go to state 63
    estatuto                       shift and go to state 82
    mueve                          shift and go to state 67
    condicion                      shift and go to state 68
    lectura                        shift and go to state 69
    empty                          shift and go to state 83
    whiles                         shift and go to state 70
    estatutoAux                    shift and go to state 98
    asignacion                     shift and go to state 74
    escritura                      shift and go to state 77

state 78

    (17) matriz -> [ CTI . ]

    ]               shift and go to state 99


state 79

    (25) param -> tipo ID guardarIDParam . maspaID
    (29) maspaID -> . , param
    (30) maspaID -> . empty
    (154) empty -> .

    ,               shift and go to state 101
    )               reduce using rule 154 (empty -> .)

    maspaID                        shift and go to state 100
    empty                          shift and go to state 102

state 80

    (31) bloquefunc -> { . vars guardarCuadruplo estatuto regresa } liberarVar
    (32) bloquefunc -> { . vars guardarCuadruplo regresa } liberarVar
    (33) bloquefunc -> { . guardarCuadruplo escritura regresa } liberarVar
    (34) bloquefunc -> { . }
    (7) vars -> . tipo ID guardarIDs ; masTipos
    (8) vars -> . tipo ID guardarIDs arreglo ; masTipos
    (9) vars -> . tipo listaIDS ; masTipos
    (10) vars -> . empty
    (36) guardarCuadruplo -> .
    (138) tipo -> . ENTERO
    (139) tipo -> . DECIMAL
    (140) tipo -> . BOOL
    (141) tipo -> . VOID
    (142) tipo -> . CUADRADO
    (143) tipo -> . RECTANGULO
    (144) tipo -> . CIRCULO
    (145) tipo -> . LINEA
    (146) tipo -> . ESTRELLA
    (154) empty -> .

  ! reduce/reduce conflict for DIBUJAR resolved using rule 36 (guardarCuadruplo -> .)
  ! reduce/reduce conflict for MUEVE resolved using rule 36 (guardarCuadruplo -> .)
    }               shift and go to state 105
    DIBUJAR         reduce using rule 36 (guardarCuadruplo -> .)
    MUEVE           reduce using rule 36 (guardarCuadruplo -> .)
    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8
    RETURN          reduce using rule 154 (empty -> .)
    ID              reduce using rule 154 (empty -> .)
    IF              reduce using rule 154 (empty -> .)
    LEER            reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)

  ! DIBUJAR         [ reduce using rule 154 (empty -> .) ]
  ! MUEVE           [ reduce using rule 154 (empty -> .) ]

    guardarCuadruplo               shift and go to state 104
    vars                           shift and go to state 103
    tipo                           shift and go to state 4
    empty                          shift and go to state 5

state 81

    (23) restoFuncion -> ( param ) bloquefunc .

    FUNC            reduce using rule 23 (restoFuncion -> ( param ) bloquefunc .)
    INICIO          reduce using rule 23 (restoFuncion -> ( param ) bloquefunc .)


state 82

    (44) estatutoAux -> estatuto .

    }               reduce using rule 44 (estatutoAux -> estatuto .)
    RETURN          reduce using rule 44 (estatutoAux -> estatuto .)


state 83

    (45) estatutoAux -> empty .

    }               reduce using rule 45 (estatutoAux -> empty .)
    RETURN          reduce using rule 45 (estatutoAux -> empty .)


state 84

    (43) estatuto -> funcs estatutoAux .

    RETURN          reduce using rule 43 (estatuto -> funcs estatutoAux .)
    }               reduce using rule 43 (estatuto -> funcs estatutoAux .)


state 85

    (124) whiles -> WHILE checarWhile . ( expresion ) checarContenido bloqueCond finPilaSaltosWhile

    (               shift and go to state 106


state 86

    (147) mueve -> MUEVE guardarToken . opcionMue
    (148) opcionMue -> . direccion ID guardarIDPila recibe_CTI checarMover ;
    (149) direccion -> . IZQUIERDA
    (150) direccion -> . DERECHA
    (151) direccion -> . ARRIBA
    (152) direccion -> . ABAJO

    IZQUIERDA       shift and go to state 109
    DERECHA         shift and go to state 111
    ARRIBA          shift and go to state 110
    ABAJO           shift and go to state 107

    direccion                      shift and go to state 108
    opcionMue                      shift and go to state 112

state 87

    (4) bloque -> { vars guardarCuadruplo estatuto } .

    FIN             reduce using rule 4 (bloque -> { vars guardarCuadruplo estatuto } .)


state 88

    (40) estatuto -> condicion estatutoAux .

    RETURN          reduce using rule 40 (estatuto -> condicion estatutoAux .)
    }               reduce using rule 40 (estatuto -> condicion estatutoAux .)


state 89

    (41) estatuto -> lectura estatutoAux .

    RETURN          reduce using rule 41 (estatuto -> lectura estatutoAux .)
    }               reduce using rule 41 (estatuto -> lectura estatutoAux .)


state 90

    (42) estatuto -> whiles estatutoAux .

    RETURN          reduce using rule 42 (estatuto -> whiles estatutoAux .)
    }               reduce using rule 42 (estatuto -> whiles estatutoAux .)


state 91

    (59) asignacion -> ID guardarIDPila . opcionAsignacion valorAsig ; checarOperadorIgual
    (63) opcionAsignacion -> . [ CTI ]
    (64) opcionAsignacion -> . [ CTI ] [ CTI ]
    (65) opcionAsignacion -> . empty
    (154) empty -> .

    [               shift and go to state 114
    =               reduce using rule 154 (empty -> .)
    ;               reduce using rule 154 (empty -> .)

    opcionAsignacion               shift and go to state 113
    empty                          shift and go to state 115

state 92

    (48) funcs -> ID verProc . generarERA auxExp checaNumParam generaGOSUB
    (51) generarERA -> . (

    (               shift and go to state 116

    generarERA                     shift and go to state 117

state 93

    (60) asignacion -> ID ; .

    ID              reduce using rule 60 (asignacion -> ID ; .)
    DIBUJAR         reduce using rule 60 (asignacion -> ID ; .)
    IF              reduce using rule 60 (asignacion -> ID ; .)
    LEER            reduce using rule 60 (asignacion -> ID ; .)
    WHILE           reduce using rule 60 (asignacion -> ID ; .)
    MUEVE           reduce using rule 60 (asignacion -> ID ; .)
    }               reduce using rule 60 (asignacion -> ID ; .)
    RETURN          reduce using rule 60 (asignacion -> ID ; .)


state 94

    (82) condicion -> IF ( . expresion ) checarIF finPilaSaltos
    (83) condicion -> IF ( . expresion ) checarIF checarElse finPilaSaltos
    (92) expresion -> . exp operacionLogica checaoperador6
    (93) expresion -> . exp
    (105) exp -> . termino checaroperador4
    (114) termino -> . factor checaroperador5
    (121) factor -> . fondoFalso expresion finFondoFalso
    (122) factor -> . varcte
    (106) fondoFalso -> . (
    (128) varcte -> . recibe_ID
    (129) varcte -> . recibe_CTF
    (130) varcte -> . recibe_CTI
    (131) varcte -> . recibe_TRUE
    (132) varcte -> . recibe_FALSE
    (133) recibe_ID -> . ID
    (134) recibe_CTF -> . CTF
    (135) recibe_CTI -> . CTI
    (136) recibe_TRUE -> . TRUE
    (137) recibe_FALSE -> . FALSE

    (               shift and go to state 125
    ID              shift and go to state 128
    CTF             shift and go to state 118
    CTI             shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 130

    expresion                      shift and go to state 129
    recibe_TRUE                    shift and go to state 122
    exp                            shift and go to state 132
    recibe_CTF                     shift and go to state 124
    recibe_CTI                     shift and go to state 131
    varcte                         shift and go to state 123
    factor                         shift and go to state 127
    recibe_ID                      shift and go to state 126
    termino                        shift and go to state 119
    recibe_FALSE                   shift and go to state 134
    fondoFalso                     shift and go to state 133

state 95

    (70) lectura -> LEER guardarToken . ID guardarIDPila checarLectura opcionesLectura ;

    ID              shift and go to state 135


state 96

    (38) estatuto -> asignacion estatutoAux .

    RETURN          reduce using rule 38 (estatuto -> asignacion estatutoAux .)
    }               reduce using rule 38 (estatuto -> asignacion estatutoAux .)


state 97

    (76) escritura -> DIBUJAR guardarToken . ( guardarParametros ) ;

    (               shift and go to state 136


state 98

    (39) estatuto -> escritura estatutoAux .

    RETURN          reduce using rule 39 (estatuto -> escritura estatutoAux .)
    }               reduce using rule 39 (estatuto -> escritura estatutoAux .)


state 99

    (17) matriz -> [ CTI ] .

    ;               reduce using rule 17 (matriz -> [ CTI ] .)


state 100

    (25) param -> tipo ID guardarIDParam maspaID .

    )               reduce using rule 25 (param -> tipo ID guardarIDParam maspaID .)


state 101

    (29) maspaID -> , . param
    (25) param -> . tipo ID guardarIDParam maspaID
    (26) param -> . empty
    (138) tipo -> . ENTERO
    (139) tipo -> . DECIMAL
    (140) tipo -> . BOOL
    (141) tipo -> . VOID
    (142) tipo -> . CUADRADO
    (143) tipo -> . RECTANGULO
    (144) tipo -> . CIRCULO
    (145) tipo -> . LINEA
    (146) tipo -> . ESTRELLA
    (154) empty -> .

    ENTERO          shift and go to state 6
    DECIMAL         shift and go to state 7
    BOOL            shift and go to state 10
    VOID            shift and go to state 2
    CUADRADO        shift and go to state 9
    RECTANGULO      shift and go to state 12
    CIRCULO         shift and go to state 13
    LINEA           shift and go to state 3
    ESTRELLA        shift and go to state 8
    )               reduce using rule 154 (empty -> .)

    empty                          shift and go to state 52
    tipo                           shift and go to state 50
    param                          shift and go to state 137

state 102

    (30) maspaID -> empty .

    )               reduce using rule 30 (maspaID -> empty .)


state 103

    (31) bloquefunc -> { vars . guardarCuadruplo estatuto regresa } liberarVar
    (32) bloquefunc -> { vars . guardarCuadruplo regresa } liberarVar
    (36) guardarCuadruplo -> .

    RETURN          reduce using rule 36 (guardarCuadruplo -> .)
    ID              reduce using rule 36 (guardarCuadruplo -> .)
    DIBUJAR         reduce using rule 36 (guardarCuadruplo -> .)
    IF              reduce using rule 36 (guardarCuadruplo -> .)
    LEER            reduce using rule 36 (guardarCuadruplo -> .)
    WHILE           reduce using rule 36 (guardarCuadruplo -> .)
    MUEVE           reduce using rule 36 (guardarCuadruplo -> .)

    guardarCuadruplo               shift and go to state 138

state 104

    (33) bloquefunc -> { guardarCuadruplo . escritura regresa } liberarVar
    (76) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (77) escritura -> . mueve
    (147) mueve -> . MUEVE guardarToken opcionMue

    DIBUJAR         shift and go to state 75
    MUEVE           shift and go to state 65

    mueve                          shift and go to state 67
    escritura                      shift and go to state 139

state 105

    (34) bloquefunc -> { } .

    FUNC            reduce using rule 34 (bloquefunc -> { } .)
    INICIO          reduce using rule 34 (bloquefunc -> { } .)


state 106

    (124) whiles -> WHILE checarWhile ( . expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (92) expresion -> . exp operacionLogica checaoperador6
    (93) expresion -> . exp
    (105) exp -> . termino checaroperador4
    (114) termino -> . factor checaroperador5
    (121) factor -> . fondoFalso expresion finFondoFalso
    (122) factor -> . varcte
    (106) fondoFalso -> . (
    (128) varcte -> . recibe_ID
    (129) varcte -> . recibe_CTF
    (130) varcte -> . recibe_CTI
    (131) varcte -> . recibe_TRUE
    (132) varcte -> . recibe_FALSE
    (133) recibe_ID -> . ID
    (134) recibe_CTF -> . CTF
    (135) recibe_CTI -> . CTI
    (136) recibe_TRUE -> . TRUE
    (137) recibe_FALSE -> . FALSE

    (               shift and go to state 125
    ID              shift and go to state 128
    CTF             shift and go to state 118
    CTI             shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 130

    expresion                      shift and go to state 140
    varcte                         shift and go to state 123
    recibe_TRUE                    shift and go to state 122
    recibe_CTF                     shift and go to state 124
    recibe_CTI                     shift and go to state 131
    factor                         shift and go to state 127
    recibe_ID                      shift and go to state 126
    termino                        shift and go to state 119
    exp                            shift and go to state 132
    recibe_FALSE                   shift and go to state 134
    fondoFalso                     shift and go to state 133

state 107

    (152) direccion -> ABAJO .

    ID              reduce using rule 152 (direccion -> ABAJO .)


state 108

    (148) opcionMue -> direccion . ID guardarIDPila recibe_CTI checarMover ;

    ID              shift and go to state 141


state 109

    (149) direccion -> IZQUIERDA .

    ID              reduce using rule 149 (direccion -> IZQUIERDA .)


state 110

    (151) direccion -> ARRIBA .

    ID              reduce using rule 151 (direccion -> ARRIBA .)


state 111

    (150) direccion -> DERECHA .

    ID              reduce using rule 150 (direccion -> DERECHA .)


state 112

    (147) mueve -> MUEVE guardarToken opcionMue .

    ID              reduce using rule 147 (mueve -> MUEVE guardarToken opcionMue .)
    DIBUJAR         reduce using rule 147 (mueve -> MUEVE guardarToken opcionMue .)
    IF              reduce using rule 147 (mueve -> MUEVE guardarToken opcionMue .)
    LEER            reduce using rule 147 (mueve -> MUEVE guardarToken opcionMue .)
    WHILE           reduce using rule 147 (mueve -> MUEVE guardarToken opcionMue .)
    MUEVE           reduce using rule 147 (mueve -> MUEVE guardarToken opcionMue .)
    }               reduce using rule 147 (mueve -> MUEVE guardarToken opcionMue .)
    RETURN          reduce using rule 147 (mueve -> MUEVE guardarToken opcionMue .)


state 113

    (59) asignacion -> ID guardarIDPila opcionAsignacion . valorAsig ; checarOperadorIgual
    (66) valorAsig -> . = exp
    (67) valorAsig -> . empty
    (154) empty -> .

    =               shift and go to state 143
    ;               reduce using rule 154 (empty -> .)

    valorAsig                      shift and go to state 142
    empty                          shift and go to state 144

state 114

    (63) opcionAsignacion -> [ . CTI ]
    (64) opcionAsignacion -> [ . CTI ] [ CTI ]

    CTI             shift and go to state 145


state 115

    (65) opcionAsignacion -> empty .

    =               reduce using rule 65 (opcionAsignacion -> empty .)
    ;               reduce using rule 65 (opcionAsignacion -> empty .)


state 116

    (51) generarERA -> ( .

    (               reduce using rule 51 (generarERA -> ( .)
    ID              reduce using rule 51 (generarERA -> ( .)
    CTF             reduce using rule 51 (generarERA -> ( .)
    CTI             reduce using rule 51 (generarERA -> ( .)
    TRUE            reduce using rule 51 (generarERA -> ( .)
    FALSE           reduce using rule 51 (generarERA -> ( .)


state 117

    (48) funcs -> ID verProc generarERA . auxExp checaNumParam generaGOSUB
    (52) auxExp -> . listaExp llegaComa
    (53) auxExp -> . listaExp
    (56) listaExp -> . exp verificarTiposFunc masExps
    (105) exp -> . termino checaroperador4
    (114) termino -> . factor checaroperador5
    (121) factor -> . fondoFalso expresion finFondoFalso
    (122) factor -> . varcte
    (106) fondoFalso -> . (
    (128) varcte -> . recibe_ID
    (129) varcte -> . recibe_CTF
    (130) varcte -> . recibe_CTI
    (131) varcte -> . recibe_TRUE
    (132) varcte -> . recibe_FALSE
    (133) recibe_ID -> . ID
    (134) recibe_CTF -> . CTF
    (135) recibe_CTI -> . CTI
    (136) recibe_TRUE -> . TRUE
    (137) recibe_FALSE -> . FALSE

    (               shift and go to state 125
    ID              shift and go to state 128
    CTF             shift and go to state 118
    CTI             shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 130

    listaExp                       shift and go to state 146
    termino                        shift and go to state 119
    recibe_TRUE                    shift and go to state 122
    varcte                         shift and go to state 123
    recibe_CTF                     shift and go to state 124
    recibe_CTI                     shift and go to state 131
    recibe_ID                      shift and go to state 126
    factor                         shift and go to state 127
    exp                            shift and go to state 147
    auxExp                         shift and go to state 148
    fondoFalso                     shift and go to state 133
    recibe_FALSE                   shift and go to state 134

state 118

    (134) recibe_CTF -> CTF .

    *               reduce using rule 134 (recibe_CTF -> CTF .)
    /               reduce using rule 134 (recibe_CTF -> CTF .)
    +               reduce using rule 134 (recibe_CTF -> CTF .)
    -               reduce using rule 134 (recibe_CTF -> CTF .)
    ,               reduce using rule 134 (recibe_CTF -> CTF .)
    )               reduce using rule 134 (recibe_CTF -> CTF .)
    >               reduce using rule 134 (recibe_CTF -> CTF .)
    <               reduce using rule 134 (recibe_CTF -> CTF .)
    MENORIGUAL      reduce using rule 134 (recibe_CTF -> CTF .)
    MAYORIGUAL      reduce using rule 134 (recibe_CTF -> CTF .)
    IGUALIGUAL      reduce using rule 134 (recibe_CTF -> CTF .)
    DIFERENTE       reduce using rule 134 (recibe_CTF -> CTF .)
    COOR            reduce using rule 134 (recibe_CTF -> CTF .)
    COAND           reduce using rule 134 (recibe_CTF -> CTF .)
    ;               reduce using rule 134 (recibe_CTF -> CTF .)


state 119

    (105) exp -> termino . checaroperador4
    (108) checaroperador4 -> . signo
    (109) checaroperador4 -> .
    (110) signo -> . push_pm exp
    (111) signo -> .
    (112) push_pm -> . +
    (113) push_pm -> . -

  ! reduce/reduce conflict for > resolved using rule 109 (checaroperador4 -> .)
  ! reduce/reduce conflict for < resolved using rule 109 (checaroperador4 -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 109 (checaroperador4 -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 109 (checaroperador4 -> .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 109 (checaroperador4 -> .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 109 (checaroperador4 -> .)
  ! reduce/reduce conflict for COOR resolved using rule 109 (checaroperador4 -> .)
  ! reduce/reduce conflict for COAND resolved using rule 109 (checaroperador4 -> .)
  ! reduce/reduce conflict for ) resolved using rule 109 (checaroperador4 -> .)
  ! reduce/reduce conflict for , resolved using rule 109 (checaroperador4 -> .)
  ! reduce/reduce conflict for ; resolved using rule 109 (checaroperador4 -> .)
    >               reduce using rule 109 (checaroperador4 -> .)
    <               reduce using rule 109 (checaroperador4 -> .)
    MENORIGUAL      reduce using rule 109 (checaroperador4 -> .)
    MAYORIGUAL      reduce using rule 109 (checaroperador4 -> .)
    IGUALIGUAL      reduce using rule 109 (checaroperador4 -> .)
    DIFERENTE       reduce using rule 109 (checaroperador4 -> .)
    COOR            reduce using rule 109 (checaroperador4 -> .)
    COAND           reduce using rule 109 (checaroperador4 -> .)
    )               reduce using rule 109 (checaroperador4 -> .)
    ,               reduce using rule 109 (checaroperador4 -> .)
    ;               reduce using rule 109 (checaroperador4 -> .)
    +               shift and go to state 149
    -               shift and go to state 151

  ! >               [ reduce using rule 111 (signo -> .) ]
  ! <               [ reduce using rule 111 (signo -> .) ]
  ! MENORIGUAL      [ reduce using rule 111 (signo -> .) ]
  ! MAYORIGUAL      [ reduce using rule 111 (signo -> .) ]
  ! IGUALIGUAL      [ reduce using rule 111 (signo -> .) ]
  ! DIFERENTE       [ reduce using rule 111 (signo -> .) ]
  ! COOR            [ reduce using rule 111 (signo -> .) ]
  ! COAND           [ reduce using rule 111 (signo -> .) ]
  ! )               [ reduce using rule 111 (signo -> .) ]
  ! ,               [ reduce using rule 111 (signo -> .) ]
  ! ;               [ reduce using rule 111 (signo -> .) ]

    push_pm                        shift and go to state 153
    signo                          shift and go to state 150
    checaroperador4                shift and go to state 152

state 120

    (136) recibe_TRUE -> TRUE .

    )               reduce using rule 136 (recibe_TRUE -> TRUE .)
    *               reduce using rule 136 (recibe_TRUE -> TRUE .)
    /               reduce using rule 136 (recibe_TRUE -> TRUE .)
    +               reduce using rule 136 (recibe_TRUE -> TRUE .)
    -               reduce using rule 136 (recibe_TRUE -> TRUE .)
    >               reduce using rule 136 (recibe_TRUE -> TRUE .)
    <               reduce using rule 136 (recibe_TRUE -> TRUE .)
    MENORIGUAL      reduce using rule 136 (recibe_TRUE -> TRUE .)
    MAYORIGUAL      reduce using rule 136 (recibe_TRUE -> TRUE .)
    IGUALIGUAL      reduce using rule 136 (recibe_TRUE -> TRUE .)
    DIFERENTE       reduce using rule 136 (recibe_TRUE -> TRUE .)
    COOR            reduce using rule 136 (recibe_TRUE -> TRUE .)
    COAND           reduce using rule 136 (recibe_TRUE -> TRUE .)
    ;               reduce using rule 136 (recibe_TRUE -> TRUE .)
    ,               reduce using rule 136 (recibe_TRUE -> TRUE .)


state 121

    (135) recibe_CTI -> CTI .

    *               reduce using rule 135 (recibe_CTI -> CTI .)
    /               reduce using rule 135 (recibe_CTI -> CTI .)
    +               reduce using rule 135 (recibe_CTI -> CTI .)
    -               reduce using rule 135 (recibe_CTI -> CTI .)
    >               reduce using rule 135 (recibe_CTI -> CTI .)
    <               reduce using rule 135 (recibe_CTI -> CTI .)
    MENORIGUAL      reduce using rule 135 (recibe_CTI -> CTI .)
    MAYORIGUAL      reduce using rule 135 (recibe_CTI -> CTI .)
    IGUALIGUAL      reduce using rule 135 (recibe_CTI -> CTI .)
    DIFERENTE       reduce using rule 135 (recibe_CTI -> CTI .)
    COOR            reduce using rule 135 (recibe_CTI -> CTI .)
    COAND           reduce using rule 135 (recibe_CTI -> CTI .)
    )               reduce using rule 135 (recibe_CTI -> CTI .)
    ;               reduce using rule 135 (recibe_CTI -> CTI .)
    ,               reduce using rule 135 (recibe_CTI -> CTI .)


state 122

    (131) varcte -> recibe_TRUE .

    *               reduce using rule 131 (varcte -> recibe_TRUE .)
    /               reduce using rule 131 (varcte -> recibe_TRUE .)
    +               reduce using rule 131 (varcte -> recibe_TRUE .)
    -               reduce using rule 131 (varcte -> recibe_TRUE .)
    >               reduce using rule 131 (varcte -> recibe_TRUE .)
    <               reduce using rule 131 (varcte -> recibe_TRUE .)
    MENORIGUAL      reduce using rule 131 (varcte -> recibe_TRUE .)
    MAYORIGUAL      reduce using rule 131 (varcte -> recibe_TRUE .)
    IGUALIGUAL      reduce using rule 131 (varcte -> recibe_TRUE .)
    DIFERENTE       reduce using rule 131 (varcte -> recibe_TRUE .)
    COOR            reduce using rule 131 (varcte -> recibe_TRUE .)
    COAND           reduce using rule 131 (varcte -> recibe_TRUE .)
    )               reduce using rule 131 (varcte -> recibe_TRUE .)
    ,               reduce using rule 131 (varcte -> recibe_TRUE .)
    ;               reduce using rule 131 (varcte -> recibe_TRUE .)


state 123

    (122) factor -> varcte .

    *               reduce using rule 122 (factor -> varcte .)
    /               reduce using rule 122 (factor -> varcte .)
    +               reduce using rule 122 (factor -> varcte .)
    -               reduce using rule 122 (factor -> varcte .)
    >               reduce using rule 122 (factor -> varcte .)
    <               reduce using rule 122 (factor -> varcte .)
    MENORIGUAL      reduce using rule 122 (factor -> varcte .)
    MAYORIGUAL      reduce using rule 122 (factor -> varcte .)
    IGUALIGUAL      reduce using rule 122 (factor -> varcte .)
    DIFERENTE       reduce using rule 122 (factor -> varcte .)
    COOR            reduce using rule 122 (factor -> varcte .)
    COAND           reduce using rule 122 (factor -> varcte .)
    )               reduce using rule 122 (factor -> varcte .)
    ,               reduce using rule 122 (factor -> varcte .)
    ;               reduce using rule 122 (factor -> varcte .)


state 124

    (129) varcte -> recibe_CTF .

    *               reduce using rule 129 (varcte -> recibe_CTF .)
    /               reduce using rule 129 (varcte -> recibe_CTF .)
    +               reduce using rule 129 (varcte -> recibe_CTF .)
    -               reduce using rule 129 (varcte -> recibe_CTF .)
    >               reduce using rule 129 (varcte -> recibe_CTF .)
    <               reduce using rule 129 (varcte -> recibe_CTF .)
    MENORIGUAL      reduce using rule 129 (varcte -> recibe_CTF .)
    MAYORIGUAL      reduce using rule 129 (varcte -> recibe_CTF .)
    IGUALIGUAL      reduce using rule 129 (varcte -> recibe_CTF .)
    DIFERENTE       reduce using rule 129 (varcte -> recibe_CTF .)
    COOR            reduce using rule 129 (varcte -> recibe_CTF .)
    COAND           reduce using rule 129 (varcte -> recibe_CTF .)
    )               reduce using rule 129 (varcte -> recibe_CTF .)
    ,               reduce using rule 129 (varcte -> recibe_CTF .)
    ;               reduce using rule 129 (varcte -> recibe_CTF .)


state 125

    (106) fondoFalso -> ( .

    (               reduce using rule 106 (fondoFalso -> ( .)
    ID              reduce using rule 106 (fondoFalso -> ( .)
    CTF             reduce using rule 106 (fondoFalso -> ( .)
    CTI             reduce using rule 106 (fondoFalso -> ( .)
    TRUE            reduce using rule 106 (fondoFalso -> ( .)
    FALSE           reduce using rule 106 (fondoFalso -> ( .)


state 126

    (128) varcte -> recibe_ID .

    *               reduce using rule 128 (varcte -> recibe_ID .)
    /               reduce using rule 128 (varcte -> recibe_ID .)
    +               reduce using rule 128 (varcte -> recibe_ID .)
    -               reduce using rule 128 (varcte -> recibe_ID .)
    >               reduce using rule 128 (varcte -> recibe_ID .)
    <               reduce using rule 128 (varcte -> recibe_ID .)
    MENORIGUAL      reduce using rule 128 (varcte -> recibe_ID .)
    MAYORIGUAL      reduce using rule 128 (varcte -> recibe_ID .)
    IGUALIGUAL      reduce using rule 128 (varcte -> recibe_ID .)
    DIFERENTE       reduce using rule 128 (varcte -> recibe_ID .)
    COOR            reduce using rule 128 (varcte -> recibe_ID .)
    COAND           reduce using rule 128 (varcte -> recibe_ID .)
    )               reduce using rule 128 (varcte -> recibe_ID .)
    ,               reduce using rule 128 (varcte -> recibe_ID .)
    ;               reduce using rule 128 (varcte -> recibe_ID .)


state 127

    (114) termino -> factor . checaroperador5
    (115) checaroperador5 -> . masop
    (116) checaroperador5 -> .
    (117) masop -> . push_td termino
    (118) masop -> .
    (119) push_td -> . *
    (120) push_td -> . /

  ! reduce/reduce conflict for + resolved using rule 116 (checaroperador5 -> .)
  ! reduce/reduce conflict for - resolved using rule 116 (checaroperador5 -> .)
  ! reduce/reduce conflict for > resolved using rule 116 (checaroperador5 -> .)
  ! reduce/reduce conflict for < resolved using rule 116 (checaroperador5 -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 116 (checaroperador5 -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 116 (checaroperador5 -> .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 116 (checaroperador5 -> .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 116 (checaroperador5 -> .)
  ! reduce/reduce conflict for COOR resolved using rule 116 (checaroperador5 -> .)
  ! reduce/reduce conflict for COAND resolved using rule 116 (checaroperador5 -> .)
  ! reduce/reduce conflict for ) resolved using rule 116 (checaroperador5 -> .)
  ! reduce/reduce conflict for , resolved using rule 116 (checaroperador5 -> .)
  ! reduce/reduce conflict for ; resolved using rule 116 (checaroperador5 -> .)
    +               reduce using rule 116 (checaroperador5 -> .)
    -               reduce using rule 116 (checaroperador5 -> .)
    >               reduce using rule 116 (checaroperador5 -> .)
    <               reduce using rule 116 (checaroperador5 -> .)
    MENORIGUAL      reduce using rule 116 (checaroperador5 -> .)
    MAYORIGUAL      reduce using rule 116 (checaroperador5 -> .)
    IGUALIGUAL      reduce using rule 116 (checaroperador5 -> .)
    DIFERENTE       reduce using rule 116 (checaroperador5 -> .)
    COOR            reduce using rule 116 (checaroperador5 -> .)
    COAND           reduce using rule 116 (checaroperador5 -> .)
    )               reduce using rule 116 (checaroperador5 -> .)
    ,               reduce using rule 116 (checaroperador5 -> .)
    ;               reduce using rule 116 (checaroperador5 -> .)
    *               shift and go to state 154
    /               shift and go to state 155

  ! +               [ reduce using rule 118 (masop -> .) ]
  ! -               [ reduce using rule 118 (masop -> .) ]
  ! >               [ reduce using rule 118 (masop -> .) ]
  ! <               [ reduce using rule 118 (masop -> .) ]
  ! MENORIGUAL      [ reduce using rule 118 (masop -> .) ]
  ! MAYORIGUAL      [ reduce using rule 118 (masop -> .) ]
  ! IGUALIGUAL      [ reduce using rule 118 (masop -> .) ]
  ! DIFERENTE       [ reduce using rule 118 (masop -> .) ]
  ! COOR            [ reduce using rule 118 (masop -> .) ]
  ! COAND           [ reduce using rule 118 (masop -> .) ]
  ! )               [ reduce using rule 118 (masop -> .) ]
  ! ,               [ reduce using rule 118 (masop -> .) ]
  ! ;               [ reduce using rule 118 (masop -> .) ]

    masop                          shift and go to state 156
    push_td                        shift and go to state 158
    checaroperador5                shift and go to state 157

state 128

    (133) recibe_ID -> ID .

    *               reduce using rule 133 (recibe_ID -> ID .)
    /               reduce using rule 133 (recibe_ID -> ID .)
    +               reduce using rule 133 (recibe_ID -> ID .)
    -               reduce using rule 133 (recibe_ID -> ID .)
    >               reduce using rule 133 (recibe_ID -> ID .)
    <               reduce using rule 133 (recibe_ID -> ID .)
    MENORIGUAL      reduce using rule 133 (recibe_ID -> ID .)
    MAYORIGUAL      reduce using rule 133 (recibe_ID -> ID .)
    IGUALIGUAL      reduce using rule 133 (recibe_ID -> ID .)
    DIFERENTE       reduce using rule 133 (recibe_ID -> ID .)
    COOR            reduce using rule 133 (recibe_ID -> ID .)
    COAND           reduce using rule 133 (recibe_ID -> ID .)
    )               reduce using rule 133 (recibe_ID -> ID .)
    ;               reduce using rule 133 (recibe_ID -> ID .)
    ,               reduce using rule 133 (recibe_ID -> ID .)


state 129

    (82) condicion -> IF ( expresion . ) checarIF finPilaSaltos
    (83) condicion -> IF ( expresion . ) checarIF checarElse finPilaSaltos

    )               shift and go to state 159


state 130

    (137) recibe_FALSE -> FALSE .

    *               reduce using rule 137 (recibe_FALSE -> FALSE .)
    /               reduce using rule 137 (recibe_FALSE -> FALSE .)
    +               reduce using rule 137 (recibe_FALSE -> FALSE .)
    -               reduce using rule 137 (recibe_FALSE -> FALSE .)
    >               reduce using rule 137 (recibe_FALSE -> FALSE .)
    <               reduce using rule 137 (recibe_FALSE -> FALSE .)
    MENORIGUAL      reduce using rule 137 (recibe_FALSE -> FALSE .)
    MAYORIGUAL      reduce using rule 137 (recibe_FALSE -> FALSE .)
    IGUALIGUAL      reduce using rule 137 (recibe_FALSE -> FALSE .)
    DIFERENTE       reduce using rule 137 (recibe_FALSE -> FALSE .)
    COOR            reduce using rule 137 (recibe_FALSE -> FALSE .)
    COAND           reduce using rule 137 (recibe_FALSE -> FALSE .)
    )               reduce using rule 137 (recibe_FALSE -> FALSE .)
    ,               reduce using rule 137 (recibe_FALSE -> FALSE .)
    ;               reduce using rule 137 (recibe_FALSE -> FALSE .)


state 131

    (130) varcte -> recibe_CTI .

    *               reduce using rule 130 (varcte -> recibe_CTI .)
    /               reduce using rule 130 (varcte -> recibe_CTI .)
    +               reduce using rule 130 (varcte -> recibe_CTI .)
    -               reduce using rule 130 (varcte -> recibe_CTI .)
    >               reduce using rule 130 (varcte -> recibe_CTI .)
    <               reduce using rule 130 (varcte -> recibe_CTI .)
    MENORIGUAL      reduce using rule 130 (varcte -> recibe_CTI .)
    MAYORIGUAL      reduce using rule 130 (varcte -> recibe_CTI .)
    IGUALIGUAL      reduce using rule 130 (varcte -> recibe_CTI .)
    DIFERENTE       reduce using rule 130 (varcte -> recibe_CTI .)
    COOR            reduce using rule 130 (varcte -> recibe_CTI .)
    COAND           reduce using rule 130 (varcte -> recibe_CTI .)
    )               reduce using rule 130 (varcte -> recibe_CTI .)
    ,               reduce using rule 130 (varcte -> recibe_CTI .)
    ;               reduce using rule 130 (varcte -> recibe_CTI .)


state 132

    (92) expresion -> exp . operacionLogica checaoperador6
    (93) expresion -> exp .
    (102) operacionLogica -> . push_logica exp
    (103) operacionLogica -> .
    (94) push_logica -> . >
    (95) push_logica -> . <
    (96) push_logica -> . MENORIGUAL
    (97) push_logica -> . MAYORIGUAL
    (98) push_logica -> . IGUALIGUAL
    (99) push_logica -> . DIFERENTE
    (100) push_logica -> . COOR
    (101) push_logica -> . COAND

  ! reduce/reduce conflict for ) resolved using rule 93 (expresion -> exp .)
    )               reduce using rule 93 (expresion -> exp .)
    >               shift and go to state 169
    <               shift and go to state 168
    MENORIGUAL      shift and go to state 167
    MAYORIGUAL      shift and go to state 166
    IGUALIGUAL      shift and go to state 163
    DIFERENTE       shift and go to state 162
    COOR            shift and go to state 160
    COAND           shift and go to state 161

  ! )               [ reduce using rule 103 (operacionLogica -> .) ]

    operacionLogica                shift and go to state 164
    push_logica                    shift and go to state 165

state 133

    (121) factor -> fondoFalso . expresion finFondoFalso
    (92) expresion -> . exp operacionLogica checaoperador6
    (93) expresion -> . exp
    (105) exp -> . termino checaroperador4
    (114) termino -> . factor checaroperador5
    (121) factor -> . fondoFalso expresion finFondoFalso
    (122) factor -> . varcte
    (106) fondoFalso -> . (
    (128) varcte -> . recibe_ID
    (129) varcte -> . recibe_CTF
    (130) varcte -> . recibe_CTI
    (131) varcte -> . recibe_TRUE
    (132) varcte -> . recibe_FALSE
    (133) recibe_ID -> . ID
    (134) recibe_CTF -> . CTF
    (135) recibe_CTI -> . CTI
    (136) recibe_TRUE -> . TRUE
    (137) recibe_FALSE -> . FALSE

    (               shift and go to state 125
    ID              shift and go to state 128
    CTF             shift and go to state 118
    CTI             shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 130

    expresion                      shift and go to state 170
    recibe_TRUE                    shift and go to state 122
    exp                            shift and go to state 132
    recibe_CTF                     shift and go to state 124
    recibe_CTI                     shift and go to state 131
    varcte                         shift and go to state 123
    factor                         shift and go to state 127
    recibe_ID                      shift and go to state 126
    termino                        shift and go to state 119
    fondoFalso                     shift and go to state 133
    recibe_FALSE                   shift and go to state 134

state 134

    (132) varcte -> recibe_FALSE .

    *               reduce using rule 132 (varcte -> recibe_FALSE .)
    /               reduce using rule 132 (varcte -> recibe_FALSE .)
    +               reduce using rule 132 (varcte -> recibe_FALSE .)
    -               reduce using rule 132 (varcte -> recibe_FALSE .)
    >               reduce using rule 132 (varcte -> recibe_FALSE .)
    <               reduce using rule 132 (varcte -> recibe_FALSE .)
    MENORIGUAL      reduce using rule 132 (varcte -> recibe_FALSE .)
    MAYORIGUAL      reduce using rule 132 (varcte -> recibe_FALSE .)
    IGUALIGUAL      reduce using rule 132 (varcte -> recibe_FALSE .)
    DIFERENTE       reduce using rule 132 (varcte -> recibe_FALSE .)
    COOR            reduce using rule 132 (varcte -> recibe_FALSE .)
    COAND           reduce using rule 132 (varcte -> recibe_FALSE .)
    )               reduce using rule 132 (varcte -> recibe_FALSE .)
    ,               reduce using rule 132 (varcte -> recibe_FALSE .)
    ;               reduce using rule 132 (varcte -> recibe_FALSE .)


state 135

    (70) lectura -> LEER guardarToken ID . guardarIDPila checarLectura opcionesLectura ;
    (61) guardarIDPila -> .

    [               reduce using rule 61 (guardarIDPila -> .)
    ;               reduce using rule 61 (guardarIDPila -> .)

    guardarIDPila                  shift and go to state 171

state 136

    (76) escritura -> DIBUJAR guardarToken ( . guardarParametros ) ;
    (74) guardarParametros -> . ID guardarIDPila pos color checarDibujar

    ID              shift and go to state 173

    guardarParametros              shift and go to state 172

state 137

    (29) maspaID -> , param .

    )               reduce using rule 29 (maspaID -> , param .)


state 138

    (31) bloquefunc -> { vars guardarCuadruplo . estatuto regresa } liberarVar
    (32) bloquefunc -> { vars guardarCuadruplo . regresa } liberarVar
    (38) estatuto -> . asignacion estatutoAux
    (39) estatuto -> . escritura estatutoAux
    (40) estatuto -> . condicion estatutoAux
    (41) estatuto -> . lectura estatutoAux
    (42) estatuto -> . whiles estatutoAux
    (43) estatuto -> . funcs estatutoAux
    (37) regresa -> . RETURN ID
    (59) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (60) asignacion -> . ID ;
    (76) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (77) escritura -> . mueve
    (82) condicion -> . IF ( expresion ) checarIF finPilaSaltos
    (83) condicion -> . IF ( expresion ) checarIF checarElse finPilaSaltos
    (70) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (124) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (48) funcs -> . ID verProc generarERA auxExp checaNumParam generaGOSUB
    (49) funcs -> . ID
    (147) mueve -> . MUEVE guardarToken opcionMue

    RETURN          shift and go to state 174
    ID              shift and go to state 71
    DIBUJAR         shift and go to state 75
    IF              shift and go to state 72
    LEER            shift and go to state 73
    WHILE           shift and go to state 64
    MUEVE           shift and go to state 65

    funcs                          shift and go to state 63
    estatuto                       shift and go to state 175
    mueve                          shift and go to state 67
    condicion                      shift and go to state 68
    lectura                        shift and go to state 69
    whiles                         shift and go to state 70
    asignacion                     shift and go to state 74
    regresa                        shift and go to state 176
    escritura                      shift and go to state 77

state 139

    (33) bloquefunc -> { guardarCuadruplo escritura . regresa } liberarVar
    (37) regresa -> . RETURN ID

    RETURN          shift and go to state 174

    regresa                        shift and go to state 177

state 140

    (124) whiles -> WHILE checarWhile ( expresion . ) checarContenido bloqueCond finPilaSaltosWhile

    )               shift and go to state 178


state 141

    (148) opcionMue -> direccion ID . guardarIDPila recibe_CTI checarMover ;
    (61) guardarIDPila -> .

    CTI             reduce using rule 61 (guardarIDPila -> .)

    guardarIDPila                  shift and go to state 179

state 142

    (59) asignacion -> ID guardarIDPila opcionAsignacion valorAsig . ; checarOperadorIgual

    ;               shift and go to state 180


state 143

    (66) valorAsig -> = . exp
    (105) exp -> . termino checaroperador4
    (114) termino -> . factor checaroperador5
    (121) factor -> . fondoFalso expresion finFondoFalso
    (122) factor -> . varcte
    (106) fondoFalso -> . (
    (128) varcte -> . recibe_ID
    (129) varcte -> . recibe_CTF
    (130) varcte -> . recibe_CTI
    (131) varcte -> . recibe_TRUE
    (132) varcte -> . recibe_FALSE
    (133) recibe_ID -> . ID
    (134) recibe_CTF -> . CTF
    (135) recibe_CTI -> . CTI
    (136) recibe_TRUE -> . TRUE
    (137) recibe_FALSE -> . FALSE

    (               shift and go to state 125
    ID              shift and go to state 128
    CTF             shift and go to state 118
    CTI             shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 130

    varcte                         shift and go to state 123
    recibe_TRUE                    shift and go to state 122
    exp                            shift and go to state 181
    recibe_CTF                     shift and go to state 124
    recibe_CTI                     shift and go to state 131
    recibe_ID                      shift and go to state 126
    termino                        shift and go to state 119
    factor                         shift and go to state 127
    recibe_FALSE                   shift and go to state 134
    fondoFalso                     shift and go to state 133

state 144

    (67) valorAsig -> empty .

    ;               reduce using rule 67 (valorAsig -> empty .)


state 145

    (63) opcionAsignacion -> [ CTI . ]
    (64) opcionAsignacion -> [ CTI . ] [ CTI ]

    ]               shift and go to state 182


state 146

    (52) auxExp -> listaExp . llegaComa
    (53) auxExp -> listaExp .
    (54) llegaComa -> . ,

    )               reduce using rule 53 (auxExp -> listaExp .)
    ,               shift and go to state 184

    llegaComa                      shift and go to state 183

state 147

    (56) listaExp -> exp . verificarTiposFunc masExps
    (55) verificarTiposFunc -> .

    ,               reduce using rule 55 (verificarTiposFunc -> .)
    )               reduce using rule 55 (verificarTiposFunc -> .)

    verificarTiposFunc             shift and go to state 185

state 148

    (48) funcs -> ID verProc generarERA auxExp . checaNumParam generaGOSUB
    (46) checaNumParam -> . )

    )               shift and go to state 186

    checaNumParam                  shift and go to state 187

state 149

    (112) push_pm -> + .

    (               reduce using rule 112 (push_pm -> + .)
    ID              reduce using rule 112 (push_pm -> + .)
    CTF             reduce using rule 112 (push_pm -> + .)
    CTI             reduce using rule 112 (push_pm -> + .)
    TRUE            reduce using rule 112 (push_pm -> + .)
    FALSE           reduce using rule 112 (push_pm -> + .)


state 150

    (108) checaroperador4 -> signo .

    >               reduce using rule 108 (checaroperador4 -> signo .)
    <               reduce using rule 108 (checaroperador4 -> signo .)
    MENORIGUAL      reduce using rule 108 (checaroperador4 -> signo .)
    MAYORIGUAL      reduce using rule 108 (checaroperador4 -> signo .)
    IGUALIGUAL      reduce using rule 108 (checaroperador4 -> signo .)
    DIFERENTE       reduce using rule 108 (checaroperador4 -> signo .)
    COOR            reduce using rule 108 (checaroperador4 -> signo .)
    COAND           reduce using rule 108 (checaroperador4 -> signo .)
    )               reduce using rule 108 (checaroperador4 -> signo .)
    ,               reduce using rule 108 (checaroperador4 -> signo .)
    ;               reduce using rule 108 (checaroperador4 -> signo .)


state 151

    (113) push_pm -> - .

    (               reduce using rule 113 (push_pm -> - .)
    ID              reduce using rule 113 (push_pm -> - .)
    CTF             reduce using rule 113 (push_pm -> - .)
    CTI             reduce using rule 113 (push_pm -> - .)
    TRUE            reduce using rule 113 (push_pm -> - .)
    FALSE           reduce using rule 113 (push_pm -> - .)


state 152

    (105) exp -> termino checaroperador4 .

    ,               reduce using rule 105 (exp -> termino checaroperador4 .)
    )               reduce using rule 105 (exp -> termino checaroperador4 .)
    >               reduce using rule 105 (exp -> termino checaroperador4 .)
    <               reduce using rule 105 (exp -> termino checaroperador4 .)
    MENORIGUAL      reduce using rule 105 (exp -> termino checaroperador4 .)
    MAYORIGUAL      reduce using rule 105 (exp -> termino checaroperador4 .)
    IGUALIGUAL      reduce using rule 105 (exp -> termino checaroperador4 .)
    DIFERENTE       reduce using rule 105 (exp -> termino checaroperador4 .)
    COOR            reduce using rule 105 (exp -> termino checaroperador4 .)
    COAND           reduce using rule 105 (exp -> termino checaroperador4 .)
    ;               reduce using rule 105 (exp -> termino checaroperador4 .)


state 153

    (110) signo -> push_pm . exp
    (105) exp -> . termino checaroperador4
    (114) termino -> . factor checaroperador5
    (121) factor -> . fondoFalso expresion finFondoFalso
    (122) factor -> . varcte
    (106) fondoFalso -> . (
    (128) varcte -> . recibe_ID
    (129) varcte -> . recibe_CTF
    (130) varcte -> . recibe_CTI
    (131) varcte -> . recibe_TRUE
    (132) varcte -> . recibe_FALSE
    (133) recibe_ID -> . ID
    (134) recibe_CTF -> . CTF
    (135) recibe_CTI -> . CTI
    (136) recibe_TRUE -> . TRUE
    (137) recibe_FALSE -> . FALSE

    (               shift and go to state 125
    ID              shift and go to state 128
    CTF             shift and go to state 118
    CTI             shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 130

    varcte                         shift and go to state 123
    recibe_TRUE                    shift and go to state 122
    exp                            shift and go to state 188
    recibe_CTF                     shift and go to state 124
    recibe_CTI                     shift and go to state 131
    recibe_ID                      shift and go to state 126
    termino                        shift and go to state 119
    factor                         shift and go to state 127
    recibe_FALSE                   shift and go to state 134
    fondoFalso                     shift and go to state 133

state 154

    (119) push_td -> * .

    (               reduce using rule 119 (push_td -> * .)
    ID              reduce using rule 119 (push_td -> * .)
    CTF             reduce using rule 119 (push_td -> * .)
    CTI             reduce using rule 119 (push_td -> * .)
    TRUE            reduce using rule 119 (push_td -> * .)
    FALSE           reduce using rule 119 (push_td -> * .)


state 155

    (120) push_td -> / .

    (               reduce using rule 120 (push_td -> / .)
    ID              reduce using rule 120 (push_td -> / .)
    CTF             reduce using rule 120 (push_td -> / .)
    CTI             reduce using rule 120 (push_td -> / .)
    TRUE            reduce using rule 120 (push_td -> / .)
    FALSE           reduce using rule 120 (push_td -> / .)


state 156

    (115) checaroperador5 -> masop .

    +               reduce using rule 115 (checaroperador5 -> masop .)
    -               reduce using rule 115 (checaroperador5 -> masop .)
    >               reduce using rule 115 (checaroperador5 -> masop .)
    <               reduce using rule 115 (checaroperador5 -> masop .)
    MENORIGUAL      reduce using rule 115 (checaroperador5 -> masop .)
    MAYORIGUAL      reduce using rule 115 (checaroperador5 -> masop .)
    IGUALIGUAL      reduce using rule 115 (checaroperador5 -> masop .)
    DIFERENTE       reduce using rule 115 (checaroperador5 -> masop .)
    COOR            reduce using rule 115 (checaroperador5 -> masop .)
    COAND           reduce using rule 115 (checaroperador5 -> masop .)
    )               reduce using rule 115 (checaroperador5 -> masop .)
    ,               reduce using rule 115 (checaroperador5 -> masop .)
    ;               reduce using rule 115 (checaroperador5 -> masop .)


state 157

    (114) termino -> factor checaroperador5 .

    +               reduce using rule 114 (termino -> factor checaroperador5 .)
    -               reduce using rule 114 (termino -> factor checaroperador5 .)
    ;               reduce using rule 114 (termino -> factor checaroperador5 .)
    >               reduce using rule 114 (termino -> factor checaroperador5 .)
    <               reduce using rule 114 (termino -> factor checaroperador5 .)
    MENORIGUAL      reduce using rule 114 (termino -> factor checaroperador5 .)
    MAYORIGUAL      reduce using rule 114 (termino -> factor checaroperador5 .)
    IGUALIGUAL      reduce using rule 114 (termino -> factor checaroperador5 .)
    DIFERENTE       reduce using rule 114 (termino -> factor checaroperador5 .)
    COOR            reduce using rule 114 (termino -> factor checaroperador5 .)
    COAND           reduce using rule 114 (termino -> factor checaroperador5 .)
    )               reduce using rule 114 (termino -> factor checaroperador5 .)
    ,               reduce using rule 114 (termino -> factor checaroperador5 .)


state 158

    (117) masop -> push_td . termino
    (114) termino -> . factor checaroperador5
    (121) factor -> . fondoFalso expresion finFondoFalso
    (122) factor -> . varcte
    (106) fondoFalso -> . (
    (128) varcte -> . recibe_ID
    (129) varcte -> . recibe_CTF
    (130) varcte -> . recibe_CTI
    (131) varcte -> . recibe_TRUE
    (132) varcte -> . recibe_FALSE
    (133) recibe_ID -> . ID
    (134) recibe_CTF -> . CTF
    (135) recibe_CTI -> . CTI
    (136) recibe_TRUE -> . TRUE
    (137) recibe_FALSE -> . FALSE

    (               shift and go to state 125
    ID              shift and go to state 128
    CTF             shift and go to state 118
    CTI             shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 130

    recibe_TRUE                    shift and go to state 122
    varcte                         shift and go to state 123
    recibe_CTF                     shift and go to state 124
    recibe_CTI                     shift and go to state 131
    recibe_ID                      shift and go to state 126
    termino                        shift and go to state 189
    factor                         shift and go to state 127
    recibe_FALSE                   shift and go to state 134
    fondoFalso                     shift and go to state 133

state 159

    (82) condicion -> IF ( expresion ) . checarIF finPilaSaltos
    (83) condicion -> IF ( expresion ) . checarIF checarElse finPilaSaltos
    (89) checarIF -> . bloqueCond
    (84) bloqueCond -> . { estatuto regresaCond }
    (85) bloqueCond -> . { regresaCond }
    (86) bloqueCond -> . { }

    {               shift and go to state 191

    checarIF                       shift and go to state 190
    bloqueCond                     shift and go to state 192

state 160

    (100) push_logica -> COOR .

    (               reduce using rule 100 (push_logica -> COOR .)
    ID              reduce using rule 100 (push_logica -> COOR .)
    CTF             reduce using rule 100 (push_logica -> COOR .)
    CTI             reduce using rule 100 (push_logica -> COOR .)
    TRUE            reduce using rule 100 (push_logica -> COOR .)
    FALSE           reduce using rule 100 (push_logica -> COOR .)


state 161

    (101) push_logica -> COAND .

    (               reduce using rule 101 (push_logica -> COAND .)
    ID              reduce using rule 101 (push_logica -> COAND .)
    CTF             reduce using rule 101 (push_logica -> COAND .)
    CTI             reduce using rule 101 (push_logica -> COAND .)
    TRUE            reduce using rule 101 (push_logica -> COAND .)
    FALSE           reduce using rule 101 (push_logica -> COAND .)


state 162

    (99) push_logica -> DIFERENTE .

    (               reduce using rule 99 (push_logica -> DIFERENTE .)
    ID              reduce using rule 99 (push_logica -> DIFERENTE .)
    CTF             reduce using rule 99 (push_logica -> DIFERENTE .)
    CTI             reduce using rule 99 (push_logica -> DIFERENTE .)
    TRUE            reduce using rule 99 (push_logica -> DIFERENTE .)
    FALSE           reduce using rule 99 (push_logica -> DIFERENTE .)


state 163

    (98) push_logica -> IGUALIGUAL .

    (               reduce using rule 98 (push_logica -> IGUALIGUAL .)
    ID              reduce using rule 98 (push_logica -> IGUALIGUAL .)
    CTF             reduce using rule 98 (push_logica -> IGUALIGUAL .)
    CTI             reduce using rule 98 (push_logica -> IGUALIGUAL .)
    TRUE            reduce using rule 98 (push_logica -> IGUALIGUAL .)
    FALSE           reduce using rule 98 (push_logica -> IGUALIGUAL .)


state 164

    (92) expresion -> exp operacionLogica . checaoperador6
    (104) checaoperador6 -> .

    )               reduce using rule 104 (checaoperador6 -> .)

    checaoperador6                 shift and go to state 193

state 165

    (102) operacionLogica -> push_logica . exp
    (105) exp -> . termino checaroperador4
    (114) termino -> . factor checaroperador5
    (121) factor -> . fondoFalso expresion finFondoFalso
    (122) factor -> . varcte
    (106) fondoFalso -> . (
    (128) varcte -> . recibe_ID
    (129) varcte -> . recibe_CTF
    (130) varcte -> . recibe_CTI
    (131) varcte -> . recibe_TRUE
    (132) varcte -> . recibe_FALSE
    (133) recibe_ID -> . ID
    (134) recibe_CTF -> . CTF
    (135) recibe_CTI -> . CTI
    (136) recibe_TRUE -> . TRUE
    (137) recibe_FALSE -> . FALSE

    (               shift and go to state 125
    ID              shift and go to state 128
    CTF             shift and go to state 118
    CTI             shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 130

    varcte                         shift and go to state 123
    recibe_TRUE                    shift and go to state 122
    exp                            shift and go to state 194
    recibe_CTF                     shift and go to state 124
    recibe_CTI                     shift and go to state 131
    recibe_ID                      shift and go to state 126
    termino                        shift and go to state 119
    factor                         shift and go to state 127
    recibe_FALSE                   shift and go to state 134
    fondoFalso                     shift and go to state 133

state 166

    (97) push_logica -> MAYORIGUAL .

    (               reduce using rule 97 (push_logica -> MAYORIGUAL .)
    ID              reduce using rule 97 (push_logica -> MAYORIGUAL .)
    CTF             reduce using rule 97 (push_logica -> MAYORIGUAL .)
    CTI             reduce using rule 97 (push_logica -> MAYORIGUAL .)
    TRUE            reduce using rule 97 (push_logica -> MAYORIGUAL .)
    FALSE           reduce using rule 97 (push_logica -> MAYORIGUAL .)


state 167

    (96) push_logica -> MENORIGUAL .

    (               reduce using rule 96 (push_logica -> MENORIGUAL .)
    ID              reduce using rule 96 (push_logica -> MENORIGUAL .)
    CTF             reduce using rule 96 (push_logica -> MENORIGUAL .)
    CTI             reduce using rule 96 (push_logica -> MENORIGUAL .)
    TRUE            reduce using rule 96 (push_logica -> MENORIGUAL .)
    FALSE           reduce using rule 96 (push_logica -> MENORIGUAL .)


state 168

    (95) push_logica -> < .

    (               reduce using rule 95 (push_logica -> < .)
    ID              reduce using rule 95 (push_logica -> < .)
    CTF             reduce using rule 95 (push_logica -> < .)
    CTI             reduce using rule 95 (push_logica -> < .)
    TRUE            reduce using rule 95 (push_logica -> < .)
    FALSE           reduce using rule 95 (push_logica -> < .)


state 169

    (94) push_logica -> > .

    (               reduce using rule 94 (push_logica -> > .)
    ID              reduce using rule 94 (push_logica -> > .)
    CTF             reduce using rule 94 (push_logica -> > .)
    CTI             reduce using rule 94 (push_logica -> > .)
    TRUE            reduce using rule 94 (push_logica -> > .)
    FALSE           reduce using rule 94 (push_logica -> > .)


state 170

    (121) factor -> fondoFalso expresion . finFondoFalso
    (107) finFondoFalso -> . )

    )               shift and go to state 195

    finFondoFalso                  shift and go to state 196

state 171

    (70) lectura -> LEER guardarToken ID guardarIDPila . checarLectura opcionesLectura ;
    (69) checarLectura -> .

    [               reduce using rule 69 (checarLectura -> .)
    ;               reduce using rule 69 (checarLectura -> .)

    checarLectura                  shift and go to state 197

state 172

    (76) escritura -> DIBUJAR guardarToken ( guardarParametros . ) ;

    )               shift and go to state 198


state 173

    (74) guardarParametros -> ID . guardarIDPila pos color checarDibujar
    (61) guardarIDPila -> .

    (               reduce using rule 61 (guardarIDPila -> .)

    guardarIDPila                  shift and go to state 199

state 174

    (37) regresa -> RETURN . ID

    ID              shift and go to state 200


state 175

    (31) bloquefunc -> { vars guardarCuadruplo estatuto . regresa } liberarVar
    (37) regresa -> . RETURN ID

    RETURN          shift and go to state 174

    regresa                        shift and go to state 201

state 176

    (32) bloquefunc -> { vars guardarCuadruplo regresa . } liberarVar

    }               shift and go to state 202


state 177

    (33) bloquefunc -> { guardarCuadruplo escritura regresa . } liberarVar

    }               shift and go to state 203


state 178

    (124) whiles -> WHILE checarWhile ( expresion ) . checarContenido bloqueCond finPilaSaltosWhile
    (126) checarContenido -> .

    {               reduce using rule 126 (checarContenido -> .)

    checarContenido                shift and go to state 204

state 179

    (148) opcionMue -> direccion ID guardarIDPila . recibe_CTI checarMover ;
    (135) recibe_CTI -> . CTI

    CTI             shift and go to state 121

    recibe_CTI                     shift and go to state 205

state 180

    (59) asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; . checarOperadorIgual
    (62) checarOperadorIgual -> .

    ID              reduce using rule 62 (checarOperadorIgual -> .)
    DIBUJAR         reduce using rule 62 (checarOperadorIgual -> .)
    IF              reduce using rule 62 (checarOperadorIgual -> .)
    LEER            reduce using rule 62 (checarOperadorIgual -> .)
    WHILE           reduce using rule 62 (checarOperadorIgual -> .)
    MUEVE           reduce using rule 62 (checarOperadorIgual -> .)
    }               reduce using rule 62 (checarOperadorIgual -> .)
    RETURN          reduce using rule 62 (checarOperadorIgual -> .)

    checarOperadorIgual            shift and go to state 206

state 181

    (66) valorAsig -> = exp .

    ;               reduce using rule 66 (valorAsig -> = exp .)


state 182

    (63) opcionAsignacion -> [ CTI ] .
    (64) opcionAsignacion -> [ CTI ] . [ CTI ]

    =               reduce using rule 63 (opcionAsignacion -> [ CTI ] .)
    ;               reduce using rule 63 (opcionAsignacion -> [ CTI ] .)
    [               shift and go to state 207


state 183

    (52) auxExp -> listaExp llegaComa .

    )               reduce using rule 52 (auxExp -> listaExp llegaComa .)


state 184

    (54) llegaComa -> , .

    )               reduce using rule 54 (llegaComa -> , .)
    (               reduce using rule 54 (llegaComa -> , .)
    ID              reduce using rule 54 (llegaComa -> , .)
    CTF             reduce using rule 54 (llegaComa -> , .)
    CTI             reduce using rule 54 (llegaComa -> , .)
    TRUE            reduce using rule 54 (llegaComa -> , .)
    FALSE           reduce using rule 54 (llegaComa -> , .)


state 185

    (56) listaExp -> exp verificarTiposFunc . masExps
    (57) masExps -> . llegaComa listaExp
    (58) masExps -> .
    (54) llegaComa -> . ,

  ! shift/reduce conflict for , resolved as shift
    )               reduce using rule 58 (masExps -> .)
    ,               shift and go to state 184

  ! ,               [ reduce using rule 58 (masExps -> .) ]

    llegaComa                      shift and go to state 208
    masExps                        shift and go to state 209

state 186

    (46) checaNumParam -> ) .

    ID              reduce using rule 46 (checaNumParam -> ) .)
    DIBUJAR         reduce using rule 46 (checaNumParam -> ) .)
    IF              reduce using rule 46 (checaNumParam -> ) .)
    LEER            reduce using rule 46 (checaNumParam -> ) .)
    WHILE           reduce using rule 46 (checaNumParam -> ) .)
    MUEVE           reduce using rule 46 (checaNumParam -> ) .)
    }               reduce using rule 46 (checaNumParam -> ) .)
    RETURN          reduce using rule 46 (checaNumParam -> ) .)


state 187

    (48) funcs -> ID verProc generarERA auxExp checaNumParam . generaGOSUB
    (47) generaGOSUB -> .

    ID              reduce using rule 47 (generaGOSUB -> .)
    DIBUJAR         reduce using rule 47 (generaGOSUB -> .)
    IF              reduce using rule 47 (generaGOSUB -> .)
    LEER            reduce using rule 47 (generaGOSUB -> .)
    WHILE           reduce using rule 47 (generaGOSUB -> .)
    MUEVE           reduce using rule 47 (generaGOSUB -> .)
    }               reduce using rule 47 (generaGOSUB -> .)
    RETURN          reduce using rule 47 (generaGOSUB -> .)

    generaGOSUB                    shift and go to state 210

state 188

    (110) signo -> push_pm exp .

    >               reduce using rule 110 (signo -> push_pm exp .)
    <               reduce using rule 110 (signo -> push_pm exp .)
    MENORIGUAL      reduce using rule 110 (signo -> push_pm exp .)
    MAYORIGUAL      reduce using rule 110 (signo -> push_pm exp .)
    IGUALIGUAL      reduce using rule 110 (signo -> push_pm exp .)
    DIFERENTE       reduce using rule 110 (signo -> push_pm exp .)
    COOR            reduce using rule 110 (signo -> push_pm exp .)
    COAND           reduce using rule 110 (signo -> push_pm exp .)
    )               reduce using rule 110 (signo -> push_pm exp .)
    ,               reduce using rule 110 (signo -> push_pm exp .)
    ;               reduce using rule 110 (signo -> push_pm exp .)


state 189

    (117) masop -> push_td termino .

    +               reduce using rule 117 (masop -> push_td termino .)
    -               reduce using rule 117 (masop -> push_td termino .)
    >               reduce using rule 117 (masop -> push_td termino .)
    <               reduce using rule 117 (masop -> push_td termino .)
    MENORIGUAL      reduce using rule 117 (masop -> push_td termino .)
    MAYORIGUAL      reduce using rule 117 (masop -> push_td termino .)
    IGUALIGUAL      reduce using rule 117 (masop -> push_td termino .)
    DIFERENTE       reduce using rule 117 (masop -> push_td termino .)
    COOR            reduce using rule 117 (masop -> push_td termino .)
    COAND           reduce using rule 117 (masop -> push_td termino .)
    )               reduce using rule 117 (masop -> push_td termino .)
    ,               reduce using rule 117 (masop -> push_td termino .)
    ;               reduce using rule 117 (masop -> push_td termino .)


state 190

    (82) condicion -> IF ( expresion ) checarIF . finPilaSaltos
    (83) condicion -> IF ( expresion ) checarIF . checarElse finPilaSaltos
    (91) finPilaSaltos -> .
    (90) checarElse -> . ELSE bloqueCond

    ID              reduce using rule 91 (finPilaSaltos -> .)
    DIBUJAR         reduce using rule 91 (finPilaSaltos -> .)
    IF              reduce using rule 91 (finPilaSaltos -> .)
    LEER            reduce using rule 91 (finPilaSaltos -> .)
    WHILE           reduce using rule 91 (finPilaSaltos -> .)
    MUEVE           reduce using rule 91 (finPilaSaltos -> .)
    }               reduce using rule 91 (finPilaSaltos -> .)
    RETURN          reduce using rule 91 (finPilaSaltos -> .)
    ELSE            shift and go to state 212

    finPilaSaltos                  shift and go to state 213
    checarElse                     shift and go to state 211

state 191

    (84) bloqueCond -> { . estatuto regresaCond }
    (85) bloqueCond -> { . regresaCond }
    (86) bloqueCond -> { . }
    (38) estatuto -> . asignacion estatutoAux
    (39) estatuto -> . escritura estatutoAux
    (40) estatuto -> . condicion estatutoAux
    (41) estatuto -> . lectura estatutoAux
    (42) estatuto -> . whiles estatutoAux
    (43) estatuto -> . funcs estatutoAux
    (87) regresaCond -> . RETURN ID
    (88) regresaCond -> . empty
    (59) asignacion -> . ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual
    (60) asignacion -> . ID ;
    (76) escritura -> . DIBUJAR guardarToken ( guardarParametros ) ;
    (77) escritura -> . mueve
    (82) condicion -> . IF ( expresion ) checarIF finPilaSaltos
    (83) condicion -> . IF ( expresion ) checarIF checarElse finPilaSaltos
    (70) lectura -> . LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ;
    (124) whiles -> . WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile
    (48) funcs -> . ID verProc generarERA auxExp checaNumParam generaGOSUB
    (49) funcs -> . ID
    (154) empty -> .
    (147) mueve -> . MUEVE guardarToken opcionMue

  ! shift/reduce conflict for } resolved as shift
    }               shift and go to state 218
    RETURN          shift and go to state 214
    ID              shift and go to state 71
    DIBUJAR         shift and go to state 75
    IF              shift and go to state 72
    LEER            shift and go to state 73
    WHILE           shift and go to state 64
    MUEVE           shift and go to state 65

  ! }               [ reduce using rule 154 (empty -> .) ]

    funcs                          shift and go to state 63
    estatuto                       shift and go to state 215
    mueve                          shift and go to state 67
    condicion                      shift and go to state 68
    lectura                        shift and go to state 69
    empty                          shift and go to state 216
    whiles                         shift and go to state 70
    asignacion                     shift and go to state 74
    regresaCond                    shift and go to state 217
    escritura                      shift and go to state 77

state 192

    (89) checarIF -> bloqueCond .

    ELSE            reduce using rule 89 (checarIF -> bloqueCond .)
    ID              reduce using rule 89 (checarIF -> bloqueCond .)
    DIBUJAR         reduce using rule 89 (checarIF -> bloqueCond .)
    IF              reduce using rule 89 (checarIF -> bloqueCond .)
    LEER            reduce using rule 89 (checarIF -> bloqueCond .)
    WHILE           reduce using rule 89 (checarIF -> bloqueCond .)
    MUEVE           reduce using rule 89 (checarIF -> bloqueCond .)
    }               reduce using rule 89 (checarIF -> bloqueCond .)
    RETURN          reduce using rule 89 (checarIF -> bloqueCond .)


state 193

    (92) expresion -> exp operacionLogica checaoperador6 .

    )               reduce using rule 92 (expresion -> exp operacionLogica checaoperador6 .)


state 194

    (102) operacionLogica -> push_logica exp .

    )               reduce using rule 102 (operacionLogica -> push_logica exp .)


state 195

    (107) finFondoFalso -> ) .

    *               reduce using rule 107 (finFondoFalso -> ) .)
    /               reduce using rule 107 (finFondoFalso -> ) .)
    +               reduce using rule 107 (finFondoFalso -> ) .)
    -               reduce using rule 107 (finFondoFalso -> ) .)
    >               reduce using rule 107 (finFondoFalso -> ) .)
    <               reduce using rule 107 (finFondoFalso -> ) .)
    MENORIGUAL      reduce using rule 107 (finFondoFalso -> ) .)
    MAYORIGUAL      reduce using rule 107 (finFondoFalso -> ) .)
    IGUALIGUAL      reduce using rule 107 (finFondoFalso -> ) .)
    DIFERENTE       reduce using rule 107 (finFondoFalso -> ) .)
    COOR            reduce using rule 107 (finFondoFalso -> ) .)
    COAND           reduce using rule 107 (finFondoFalso -> ) .)
    )               reduce using rule 107 (finFondoFalso -> ) .)
    ,               reduce using rule 107 (finFondoFalso -> ) .)
    ;               reduce using rule 107 (finFondoFalso -> ) .)


state 196

    (121) factor -> fondoFalso expresion finFondoFalso .

    *               reduce using rule 121 (factor -> fondoFalso expresion finFondoFalso .)
    /               reduce using rule 121 (factor -> fondoFalso expresion finFondoFalso .)
    +               reduce using rule 121 (factor -> fondoFalso expresion finFondoFalso .)
    -               reduce using rule 121 (factor -> fondoFalso expresion finFondoFalso .)
    >               reduce using rule 121 (factor -> fondoFalso expresion finFondoFalso .)
    <               reduce using rule 121 (factor -> fondoFalso expresion finFondoFalso .)
    MENORIGUAL      reduce using rule 121 (factor -> fondoFalso expresion finFondoFalso .)
    MAYORIGUAL      reduce using rule 121 (factor -> fondoFalso expresion finFondoFalso .)
    IGUALIGUAL      reduce using rule 121 (factor -> fondoFalso expresion finFondoFalso .)
    DIFERENTE       reduce using rule 121 (factor -> fondoFalso expresion finFondoFalso .)
    COOR            reduce using rule 121 (factor -> fondoFalso expresion finFondoFalso .)
    COAND           reduce using rule 121 (factor -> fondoFalso expresion finFondoFalso .)
    )               reduce using rule 121 (factor -> fondoFalso expresion finFondoFalso .)
    ,               reduce using rule 121 (factor -> fondoFalso expresion finFondoFalso .)
    ;               reduce using rule 121 (factor -> fondoFalso expresion finFondoFalso .)


state 197

    (70) lectura -> LEER guardarToken ID guardarIDPila checarLectura . opcionesLectura ;
    (71) opcionesLectura -> . [ CTI ]
    (72) opcionesLectura -> . [ CTI ] [ CTI ]
    (73) opcionesLectura -> . empty
    (154) empty -> .

    [               shift and go to state 219
    ;               reduce using rule 154 (empty -> .)

    empty                          shift and go to state 221
    opcionesLectura                shift and go to state 220

state 198

    (76) escritura -> DIBUJAR guardarToken ( guardarParametros ) . ;

    ;               shift and go to state 222


state 199

    (74) guardarParametros -> ID guardarIDPila . pos color checarDibujar
    (123) pos -> . ( varcte , varcte )

    (               shift and go to state 223

    pos                            shift and go to state 224

state 200

    (37) regresa -> RETURN ID .

    }               reduce using rule 37 (regresa -> RETURN ID .)


state 201

    (31) bloquefunc -> { vars guardarCuadruplo estatuto regresa . } liberarVar

    }               shift and go to state 225


state 202

    (32) bloquefunc -> { vars guardarCuadruplo regresa } . liberarVar
    (35) liberarVar -> .

    FUNC            reduce using rule 35 (liberarVar -> .)
    INICIO          reduce using rule 35 (liberarVar -> .)

    liberarVar                     shift and go to state 226

state 203

    (33) bloquefunc -> { guardarCuadruplo escritura regresa } . liberarVar
    (35) liberarVar -> .

    FUNC            reduce using rule 35 (liberarVar -> .)
    INICIO          reduce using rule 35 (liberarVar -> .)

    liberarVar                     shift and go to state 227

state 204

    (124) whiles -> WHILE checarWhile ( expresion ) checarContenido . bloqueCond finPilaSaltosWhile
    (84) bloqueCond -> . { estatuto regresaCond }
    (85) bloqueCond -> . { regresaCond }
    (86) bloqueCond -> . { }

    {               shift and go to state 191

    bloqueCond                     shift and go to state 228

state 205

    (148) opcionMue -> direccion ID guardarIDPila recibe_CTI . checarMover ;
    (153) checarMover -> .

    ;               reduce using rule 153 (checarMover -> .)

    checarMover                    shift and go to state 229

state 206

    (59) asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .

    ID              reduce using rule 59 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    DIBUJAR         reduce using rule 59 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    IF              reduce using rule 59 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    LEER            reduce using rule 59 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    WHILE           reduce using rule 59 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    MUEVE           reduce using rule 59 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    }               reduce using rule 59 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)
    RETURN          reduce using rule 59 (asignacion -> ID guardarIDPila opcionAsignacion valorAsig ; checarOperadorIgual .)


state 207

    (64) opcionAsignacion -> [ CTI ] [ . CTI ]

    CTI             shift and go to state 230


state 208

    (57) masExps -> llegaComa . listaExp
    (56) listaExp -> . exp verificarTiposFunc masExps
    (105) exp -> . termino checaroperador4
    (114) termino -> . factor checaroperador5
    (121) factor -> . fondoFalso expresion finFondoFalso
    (122) factor -> . varcte
    (106) fondoFalso -> . (
    (128) varcte -> . recibe_ID
    (129) varcte -> . recibe_CTF
    (130) varcte -> . recibe_CTI
    (131) varcte -> . recibe_TRUE
    (132) varcte -> . recibe_FALSE
    (133) recibe_ID -> . ID
    (134) recibe_CTF -> . CTF
    (135) recibe_CTI -> . CTI
    (136) recibe_TRUE -> . TRUE
    (137) recibe_FALSE -> . FALSE

    (               shift and go to state 125
    ID              shift and go to state 128
    CTF             shift and go to state 118
    CTI             shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 130

    recibe_TRUE                    shift and go to state 122
    recibe_CTF                     shift and go to state 124
    recibe_CTI                     shift and go to state 131
    varcte                         shift and go to state 123
    factor                         shift and go to state 127
    listaExp                       shift and go to state 231
    recibe_ID                      shift and go to state 126
    termino                        shift and go to state 119
    exp                            shift and go to state 147
    recibe_FALSE                   shift and go to state 134
    fondoFalso                     shift and go to state 133

state 209

    (56) listaExp -> exp verificarTiposFunc masExps .

    ,               reduce using rule 56 (listaExp -> exp verificarTiposFunc masExps .)
    )               reduce using rule 56 (listaExp -> exp verificarTiposFunc masExps .)


state 210

    (48) funcs -> ID verProc generarERA auxExp checaNumParam generaGOSUB .

    ID              reduce using rule 48 (funcs -> ID verProc generarERA auxExp checaNumParam generaGOSUB .)
    DIBUJAR         reduce using rule 48 (funcs -> ID verProc generarERA auxExp checaNumParam generaGOSUB .)
    IF              reduce using rule 48 (funcs -> ID verProc generarERA auxExp checaNumParam generaGOSUB .)
    LEER            reduce using rule 48 (funcs -> ID verProc generarERA auxExp checaNumParam generaGOSUB .)
    WHILE           reduce using rule 48 (funcs -> ID verProc generarERA auxExp checaNumParam generaGOSUB .)
    MUEVE           reduce using rule 48 (funcs -> ID verProc generarERA auxExp checaNumParam generaGOSUB .)
    }               reduce using rule 48 (funcs -> ID verProc generarERA auxExp checaNumParam generaGOSUB .)
    RETURN          reduce using rule 48 (funcs -> ID verProc generarERA auxExp checaNumParam generaGOSUB .)


state 211

    (83) condicion -> IF ( expresion ) checarIF checarElse . finPilaSaltos
    (91) finPilaSaltos -> .

    ID              reduce using rule 91 (finPilaSaltos -> .)
    DIBUJAR         reduce using rule 91 (finPilaSaltos -> .)
    IF              reduce using rule 91 (finPilaSaltos -> .)
    LEER            reduce using rule 91 (finPilaSaltos -> .)
    WHILE           reduce using rule 91 (finPilaSaltos -> .)
    MUEVE           reduce using rule 91 (finPilaSaltos -> .)
    }               reduce using rule 91 (finPilaSaltos -> .)
    RETURN          reduce using rule 91 (finPilaSaltos -> .)

    finPilaSaltos                  shift and go to state 232

state 212

    (90) checarElse -> ELSE . bloqueCond
    (84) bloqueCond -> . { estatuto regresaCond }
    (85) bloqueCond -> . { regresaCond }
    (86) bloqueCond -> . { }

    {               shift and go to state 191

    bloqueCond                     shift and go to state 233

state 213

    (82) condicion -> IF ( expresion ) checarIF finPilaSaltos .

    ID              reduce using rule 82 (condicion -> IF ( expresion ) checarIF finPilaSaltos .)
    DIBUJAR         reduce using rule 82 (condicion -> IF ( expresion ) checarIF finPilaSaltos .)
    IF              reduce using rule 82 (condicion -> IF ( expresion ) checarIF finPilaSaltos .)
    LEER            reduce using rule 82 (condicion -> IF ( expresion ) checarIF finPilaSaltos .)
    WHILE           reduce using rule 82 (condicion -> IF ( expresion ) checarIF finPilaSaltos .)
    MUEVE           reduce using rule 82 (condicion -> IF ( expresion ) checarIF finPilaSaltos .)
    }               reduce using rule 82 (condicion -> IF ( expresion ) checarIF finPilaSaltos .)
    RETURN          reduce using rule 82 (condicion -> IF ( expresion ) checarIF finPilaSaltos .)


state 214

    (87) regresaCond -> RETURN . ID

    ID              shift and go to state 234


state 215

    (84) bloqueCond -> { estatuto . regresaCond }
    (87) regresaCond -> . RETURN ID
    (88) regresaCond -> . empty
    (154) empty -> .

    RETURN          shift and go to state 214
    }               reduce using rule 154 (empty -> .)

    regresaCond                    shift and go to state 235
    empty                          shift and go to state 216

state 216

    (88) regresaCond -> empty .

    }               reduce using rule 88 (regresaCond -> empty .)


state 217

    (85) bloqueCond -> { regresaCond . }

    }               shift and go to state 236


state 218

    (86) bloqueCond -> { } .

    ELSE            reduce using rule 86 (bloqueCond -> { } .)
    ID              reduce using rule 86 (bloqueCond -> { } .)
    DIBUJAR         reduce using rule 86 (bloqueCond -> { } .)
    IF              reduce using rule 86 (bloqueCond -> { } .)
    LEER            reduce using rule 86 (bloqueCond -> { } .)
    WHILE           reduce using rule 86 (bloqueCond -> { } .)
    MUEVE           reduce using rule 86 (bloqueCond -> { } .)
    }               reduce using rule 86 (bloqueCond -> { } .)
    RETURN          reduce using rule 86 (bloqueCond -> { } .)


state 219

    (71) opcionesLectura -> [ . CTI ]
    (72) opcionesLectura -> [ . CTI ] [ CTI ]

    CTI             shift and go to state 237


state 220

    (70) lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura . ;

    ;               shift and go to state 238


state 221

    (73) opcionesLectura -> empty .

    ;               reduce using rule 73 (opcionesLectura -> empty .)


state 222

    (76) escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .

    ID              reduce using rule 76 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    DIBUJAR         reduce using rule 76 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    IF              reduce using rule 76 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    LEER            reduce using rule 76 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    WHILE           reduce using rule 76 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    MUEVE           reduce using rule 76 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    }               reduce using rule 76 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)
    RETURN          reduce using rule 76 (escritura -> DIBUJAR guardarToken ( guardarParametros ) ; .)


state 223

    (123) pos -> ( . varcte , varcte )
    (128) varcte -> . recibe_ID
    (129) varcte -> . recibe_CTF
    (130) varcte -> . recibe_CTI
    (131) varcte -> . recibe_TRUE
    (132) varcte -> . recibe_FALSE
    (133) recibe_ID -> . ID
    (134) recibe_CTF -> . CTF
    (135) recibe_CTI -> . CTI
    (136) recibe_TRUE -> . TRUE
    (137) recibe_FALSE -> . FALSE

    ID              shift and go to state 128
    CTF             shift and go to state 118
    CTI             shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 130

    recibe_TRUE                    shift and go to state 122
    varcte                         shift and go to state 239
    recibe_CTF                     shift and go to state 124
    recibe_CTI                     shift and go to state 131
    recibe_ID                      shift and go to state 126
    recibe_FALSE                   shift and go to state 134

state 224

    (74) guardarParametros -> ID guardarIDPila pos . color checarDibujar
    (78) color -> . AMARILLO
    (79) color -> . VERDE
    (80) color -> . ROJO
    (81) color -> . AZUL

    AMARILLO        shift and go to state 241
    VERDE           shift and go to state 244
    ROJO            shift and go to state 242
    AZUL            shift and go to state 243

    color                          shift and go to state 240

state 225

    (31) bloquefunc -> { vars guardarCuadruplo estatuto regresa } . liberarVar
    (35) liberarVar -> .

    FUNC            reduce using rule 35 (liberarVar -> .)
    INICIO          reduce using rule 35 (liberarVar -> .)

    liberarVar                     shift and go to state 245

state 226

    (32) bloquefunc -> { vars guardarCuadruplo regresa } liberarVar .

    FUNC            reduce using rule 32 (bloquefunc -> { vars guardarCuadruplo regresa } liberarVar .)
    INICIO          reduce using rule 32 (bloquefunc -> { vars guardarCuadruplo regresa } liberarVar .)


state 227

    (33) bloquefunc -> { guardarCuadruplo escritura regresa } liberarVar .

    FUNC            reduce using rule 33 (bloquefunc -> { guardarCuadruplo escritura regresa } liberarVar .)
    INICIO          reduce using rule 33 (bloquefunc -> { guardarCuadruplo escritura regresa } liberarVar .)


state 228

    (124) whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond . finPilaSaltosWhile
    (127) finPilaSaltosWhile -> .

    ID              reduce using rule 127 (finPilaSaltosWhile -> .)
    DIBUJAR         reduce using rule 127 (finPilaSaltosWhile -> .)
    IF              reduce using rule 127 (finPilaSaltosWhile -> .)
    LEER            reduce using rule 127 (finPilaSaltosWhile -> .)
    WHILE           reduce using rule 127 (finPilaSaltosWhile -> .)
    MUEVE           reduce using rule 127 (finPilaSaltosWhile -> .)
    }               reduce using rule 127 (finPilaSaltosWhile -> .)
    RETURN          reduce using rule 127 (finPilaSaltosWhile -> .)

    finPilaSaltosWhile             shift and go to state 246

state 229

    (148) opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover . ;

    ;               shift and go to state 247


state 230

    (64) opcionAsignacion -> [ CTI ] [ CTI . ]

    ]               shift and go to state 248


state 231

    (57) masExps -> llegaComa listaExp .

    ,               reduce using rule 57 (masExps -> llegaComa listaExp .)
    )               reduce using rule 57 (masExps -> llegaComa listaExp .)


state 232

    (83) condicion -> IF ( expresion ) checarIF checarElse finPilaSaltos .

    ID              reduce using rule 83 (condicion -> IF ( expresion ) checarIF checarElse finPilaSaltos .)
    DIBUJAR         reduce using rule 83 (condicion -> IF ( expresion ) checarIF checarElse finPilaSaltos .)
    IF              reduce using rule 83 (condicion -> IF ( expresion ) checarIF checarElse finPilaSaltos .)
    LEER            reduce using rule 83 (condicion -> IF ( expresion ) checarIF checarElse finPilaSaltos .)
    WHILE           reduce using rule 83 (condicion -> IF ( expresion ) checarIF checarElse finPilaSaltos .)
    MUEVE           reduce using rule 83 (condicion -> IF ( expresion ) checarIF checarElse finPilaSaltos .)
    }               reduce using rule 83 (condicion -> IF ( expresion ) checarIF checarElse finPilaSaltos .)
    RETURN          reduce using rule 83 (condicion -> IF ( expresion ) checarIF checarElse finPilaSaltos .)


state 233

    (90) checarElse -> ELSE bloqueCond .

    ID              reduce using rule 90 (checarElse -> ELSE bloqueCond .)
    DIBUJAR         reduce using rule 90 (checarElse -> ELSE bloqueCond .)
    IF              reduce using rule 90 (checarElse -> ELSE bloqueCond .)
    LEER            reduce using rule 90 (checarElse -> ELSE bloqueCond .)
    WHILE           reduce using rule 90 (checarElse -> ELSE bloqueCond .)
    MUEVE           reduce using rule 90 (checarElse -> ELSE bloqueCond .)
    }               reduce using rule 90 (checarElse -> ELSE bloqueCond .)
    RETURN          reduce using rule 90 (checarElse -> ELSE bloqueCond .)


state 234

    (87) regresaCond -> RETURN ID .

    }               reduce using rule 87 (regresaCond -> RETURN ID .)


state 235

    (84) bloqueCond -> { estatuto regresaCond . }

    }               shift and go to state 249


state 236

    (85) bloqueCond -> { regresaCond } .

    ELSE            reduce using rule 85 (bloqueCond -> { regresaCond } .)
    ID              reduce using rule 85 (bloqueCond -> { regresaCond } .)
    DIBUJAR         reduce using rule 85 (bloqueCond -> { regresaCond } .)
    IF              reduce using rule 85 (bloqueCond -> { regresaCond } .)
    LEER            reduce using rule 85 (bloqueCond -> { regresaCond } .)
    WHILE           reduce using rule 85 (bloqueCond -> { regresaCond } .)
    MUEVE           reduce using rule 85 (bloqueCond -> { regresaCond } .)
    }               reduce using rule 85 (bloqueCond -> { regresaCond } .)
    RETURN          reduce using rule 85 (bloqueCond -> { regresaCond } .)


state 237

    (71) opcionesLectura -> [ CTI . ]
    (72) opcionesLectura -> [ CTI . ] [ CTI ]

    ]               shift and go to state 250


state 238

    (70) lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .

    ID              reduce using rule 70 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    DIBUJAR         reduce using rule 70 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    IF              reduce using rule 70 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    LEER            reduce using rule 70 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    WHILE           reduce using rule 70 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    MUEVE           reduce using rule 70 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    }               reduce using rule 70 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)
    RETURN          reduce using rule 70 (lectura -> LEER guardarToken ID guardarIDPila checarLectura opcionesLectura ; .)


state 239

    (123) pos -> ( varcte . , varcte )

    ,               shift and go to state 251


state 240

    (74) guardarParametros -> ID guardarIDPila pos color . checarDibujar
    (75) checarDibujar -> .

    )               reduce using rule 75 (checarDibujar -> .)

    checarDibujar                  shift and go to state 252

state 241

    (78) color -> AMARILLO .

    )               reduce using rule 78 (color -> AMARILLO .)


state 242

    (80) color -> ROJO .

    )               reduce using rule 80 (color -> ROJO .)


state 243

    (81) color -> AZUL .

    )               reduce using rule 81 (color -> AZUL .)


state 244

    (79) color -> VERDE .

    )               reduce using rule 79 (color -> VERDE .)


state 245

    (31) bloquefunc -> { vars guardarCuadruplo estatuto regresa } liberarVar .

    FUNC            reduce using rule 31 (bloquefunc -> { vars guardarCuadruplo estatuto regresa } liberarVar .)
    INICIO          reduce using rule 31 (bloquefunc -> { vars guardarCuadruplo estatuto regresa } liberarVar .)


state 246

    (124) whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .

    ID              reduce using rule 124 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    DIBUJAR         reduce using rule 124 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    IF              reduce using rule 124 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    LEER            reduce using rule 124 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    WHILE           reduce using rule 124 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    MUEVE           reduce using rule 124 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    }               reduce using rule 124 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)
    RETURN          reduce using rule 124 (whiles -> WHILE checarWhile ( expresion ) checarContenido bloqueCond finPilaSaltosWhile .)


state 247

    (148) opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .

    ID              reduce using rule 148 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    DIBUJAR         reduce using rule 148 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    IF              reduce using rule 148 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    LEER            reduce using rule 148 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    WHILE           reduce using rule 148 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    MUEVE           reduce using rule 148 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    }               reduce using rule 148 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)
    RETURN          reduce using rule 148 (opcionMue -> direccion ID guardarIDPila recibe_CTI checarMover ; .)


state 248

    (64) opcionAsignacion -> [ CTI ] [ CTI ] .

    =               reduce using rule 64 (opcionAsignacion -> [ CTI ] [ CTI ] .)
    ;               reduce using rule 64 (opcionAsignacion -> [ CTI ] [ CTI ] .)


state 249

    (84) bloqueCond -> { estatuto regresaCond } .

    ELSE            reduce using rule 84 (bloqueCond -> { estatuto regresaCond } .)
    ID              reduce using rule 84 (bloqueCond -> { estatuto regresaCond } .)
    DIBUJAR         reduce using rule 84 (bloqueCond -> { estatuto regresaCond } .)
    IF              reduce using rule 84 (bloqueCond -> { estatuto regresaCond } .)
    LEER            reduce using rule 84 (bloqueCond -> { estatuto regresaCond } .)
    WHILE           reduce using rule 84 (bloqueCond -> { estatuto regresaCond } .)
    MUEVE           reduce using rule 84 (bloqueCond -> { estatuto regresaCond } .)
    }               reduce using rule 84 (bloqueCond -> { estatuto regresaCond } .)
    RETURN          reduce using rule 84 (bloqueCond -> { estatuto regresaCond } .)


state 250

    (71) opcionesLectura -> [ CTI ] .
    (72) opcionesLectura -> [ CTI ] . [ CTI ]

    ;               reduce using rule 71 (opcionesLectura -> [ CTI ] .)
    [               shift and go to state 253


state 251

    (123) pos -> ( varcte , . varcte )
    (128) varcte -> . recibe_ID
    (129) varcte -> . recibe_CTF
    (130) varcte -> . recibe_CTI
    (131) varcte -> . recibe_TRUE
    (132) varcte -> . recibe_FALSE
    (133) recibe_ID -> . ID
    (134) recibe_CTF -> . CTF
    (135) recibe_CTI -> . CTI
    (136) recibe_TRUE -> . TRUE
    (137) recibe_FALSE -> . FALSE

    ID              shift and go to state 128
    CTF             shift and go to state 118
    CTI             shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 130

    recibe_TRUE                    shift and go to state 122
    varcte                         shift and go to state 254
    recibe_CTF                     shift and go to state 124
    recibe_CTI                     shift and go to state 131
    recibe_ID                      shift and go to state 126
    recibe_FALSE                   shift and go to state 134

state 252

    (74) guardarParametros -> ID guardarIDPila pos color checarDibujar .

    )               reduce using rule 74 (guardarParametros -> ID guardarIDPila pos color checarDibujar .)


state 253

    (72) opcionesLectura -> [ CTI ] [ . CTI ]

    CTI             shift and go to state 255


state 254

    (123) pos -> ( varcte , varcte . )

    )               shift and go to state 256


state 255

    (72) opcionesLectura -> [ CTI ] [ CTI . ]

    ]               shift and go to state 257


state 256

    (123) pos -> ( varcte , varcte ) .

    AMARILLO        reduce using rule 123 (pos -> ( varcte , varcte ) .)
    VERDE           reduce using rule 123 (pos -> ( varcte , varcte ) .)
    ROJO            reduce using rule 123 (pos -> ( varcte , varcte ) .)
    AZUL            reduce using rule 123 (pos -> ( varcte , varcte ) .)


state 257

    (72) opcionesLectura -> [ CTI ] [ CTI ] .

    ;               reduce using rule 72 (opcionesLectura -> [ CTI ] [ CTI ] .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ; in state 22 resolved as shift
WARNING: shift/reduce conflict for } in state 37 resolved as shift
WARNING: shift/reduce conflict for ; in state 71 resolved as shift
WARNING: shift/reduce conflict for , in state 185 resolved as shift
WARNING: shift/reduce conflict for } in state 191 resolved as shift
WARNING: reduce/reduce conflict in state 28 resolved using rule (vars -> empty)
WARNING: rejected rule (masTipos -> empty) in state 28
WARNING: reduce/reduce conflict in state 55 resolved using rule (funcion -> empty)
WARNING: rejected rule (funcion2 -> empty) in state 55
WARNING: reduce/reduce conflict in state 80 resolved using rule (guardarCuadruplo -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 80
WARNING: reduce/reduce conflict in state 119 resolved using rule (checaroperador4 -> <empty>)
WARNING: rejected rule (signo -> <empty>) in state 119
WARNING: reduce/reduce conflict in state 127 resolved using rule (checaroperador5 -> <empty>)
WARNING: rejected rule (masop -> <empty>) in state 127
WARNING: reduce/reduce conflict in state 132 resolved using rule (expresion -> exp)
WARNING: rejected rule (operacionLogica -> <empty>) in state 132
WARNING: Rule (masTipos -> empty) is never reduced
WARNING: Rule (funcion2 -> empty) is never reduced
WARNING: Rule (signo -> <empty>) is never reduced
WARNING: Rule (masop -> <empty>) is never reduced
WARNING: Rule (operacionLogica -> <empty>) is never reduced
